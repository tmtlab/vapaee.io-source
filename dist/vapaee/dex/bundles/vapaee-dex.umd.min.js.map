{"version":3,"sources":["null","ng://@vapaee/dex/lib/token-dex.class.ts","ng://@vapaee/dex/lib/asset-dex.class.ts","ng://@vapaee/dex/lib/dex.service.ts","ng://@vapaee/dex/lib/dex.module.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","__generator","body","f","y","t","g","_","label","sent","trys","ops","verb","throw","return","Symbol","iterator","n","v","op","TypeError","call","pop","length","push","TokenDEX","_super","obj","_this","symbol","precision","contract","assign","toString","tslib_1.__extends","Token","AssetDEX","a","amount","token","parseDex","clone","plus","console","assert","str","minus","text","dex","sym","split","getTokenNow","amount_str","BigNumber","decimals","valueToString","toUpperCase","inverse","dividedBy","Asset","VapaeeDEX","scatter","cookies","datePipe","timer","Subject","setOrderSummary","setTokenStats","setMarketSummary","setTokenSummary","setTokensLoaded","_markets","_reverse","activity","total","events","list","current","default","contract_name","vapaeetokens","getSmartContract","feed","Feedback","onLogggedStateChange","subscribe","onLoggedChange","bind","updateLogState","fetchTokens","data","tokens","appname","logo","logolg","scope","verified","website","zero_telos","fetchTokensStats","getOrderSummary","getAllTablesSumaries","onMarketSummary","summary","clearTimeout","setTimeout","updateTokensSummary","updateTokensMarkets","defineProperty","logged","account","name","login","setLoading","log","loading","logout","catch","onLogout","resetCurrentAccount","onLoggedAccountChange","delete","last_logged","onLogin","getDeposits","getBalances","getUserOrders","set","profile","_a","getAccountData","_b","error","balances","userorders","onCurrentAccountChange","updateCurrentUser","timer2","loginState","waitConnected","timer1","setInterval","clearInterval","queryAccountData","createOrder","type","price","excecute","owner","updateTrade","cancelOrder","comodity","currency","orders","i","deposit","quantity","setError","toLowerCase","from","to","memo","JSON","stringify","withdraw","addOffChainToken","offchain","waitTokensLoaded","stat","hasScopes","market","reverse","inverseScope","table","canonical","canonicalScope","reverse_scope","createReverseTableFor","marketFor","getScopeFor","tableFor","inverse_history","history","hTx","id","payment","buyer","seller","buyfee","sellfee","date","isbuy","inverse_orders","buy","sell","row_orders","row_order","row","j","telos","newrow","owners","sum","sumtelos","block","blocklist","reverseblocks","blocklevels","reverselevels","blocks","deals","header","price_24h_ago","inverse_24h_ago","max_inverse","max_price","min_inverse","min_price","records","volume","percent","ipercent","percent_str","ipercent_str","tx","parts","isCanonical","getBalance","getSomeFreeFakeTokens","_token","waitTokenStats","random","Math","fake","toNumber","monto","floor","getToken","deposits","fetchDeposits","rows","fetchBalances","_balances","getThisSellOrders","ids","gotit","fetchOrders","limit","lower_bound","res","_c","concat","fetchUserOrders","map","auxProcessRowsToOrders","updateActivity","pagesize","activityPagesize","getActivityTotalPages","pages","all","fetchActivity","loadMoreActivity","first","page","updateUser","chrono_key","startChrono","getTransactionHistory","setMarck","getBlockHistory","getSellOrders","getBuyOrders","getTableSummary","r","resortTokens","onTradeUpdated","getBlockHistoryTotalPagesFor","mod","getHistoryTotalPagesFor","getTable","params","parseInt","force","aux","waitOrderSummary","fetchHistory","onHistoryChange","auxHourToLabel","hour","Date","getHours","transform","promises","promise","fetchBlockHistory","now","getTime","last_block","ordered_blocks","sort","dif","label_i","max","entrance","min","levels","reverses","newlevel","newreverse","merged","v_1","v_2","x","index_position","key_type","auxAssertScope","isLessThan","isGreaterThan","order","eq","order_row","fetchOrderSummary","tables","supply","demand","ZERO_COMODITY","ZERO_CURRENCY","fetchSummary","now_sec","now_hour","start_hour","crude","last_hh","hh","last_24h","price_asset","inverse_asset","inverse_fst","price_fst","current_date","nuevo","s_price","s_inverse","s_volume","s_amount","auxGetLabelForHour","toISOString","vol","isEqualTo","amo","last_price","diff","ratio","last_inverse","isNaN","indexOf","selling","comodity_sym","currency_sym","aux_asset_com","aux_asset_cur","market_summary","contracts","balance","more","id_i","trx","transaction","pageEvents","event","user","fetchTokenStats","issuers","extended","priomises","waitMarketSummary","markets","a_vol","b_vol","times","amount_map","ONE","price_init","total_quantity","price_amount","weight","multipliedBy","price_init_amount","price_i","volume_i","price_init_i","onTokensReady","Injectable","args","providedIn","VapaeeScatter","CookieService","DatePipe","VapaeeDexModule","NgModule","imports","declarations","providers","exports"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Token } from '@vapaee/scatter';\nimport { AssetDEX } from \"./asset-dex.class\";\nimport { Market } from './types-dex';\n\n/*\nexport interface Token {\n    symbol: string,\n    precision?: number,\n    contract?: string,\n    appname?: string,\n    website?: string,\n    logo?: string,\n    logolg?: string,\n    verified?: boolean,\n    fake?: boolean,\n    offchain?: boolean,\n    scope?: string,\n    stat?: {\n        supply: string,\n        max_supply: string,\n        issuer?: string,\n        owner?: string,\n        issuers?: string[]\n    },\n    summary?: {\n        volume: Asset,\n        price: Asset,\n        price_24h_ago: Asset,\n        percent?:number,\n        percent_str?:string\n    }\n\n}\n*/\nexport class TokenDEX extends Token {\n    // private _str: string;\n    // private _symbol: string;\n    // private _precision: number;\n    // private _contract: string;\n\n    public appname: string;\n    public website: string;\n    public logo: string;\n    public logolg: string;\n    public verified: boolean;\n    public fake: boolean;\n    public offchain: boolean;\n    public scope: string;\n\n    stat?: {\n        supply: string,\n        max_supply: string,\n        issuer?: string,\n        owner?: string,\n        issuers?: string[]\n    };\n\n    summary?: {\n        volume: AssetDEX,\n        price: AssetDEX,\n        price_24h_ago: AssetDEX,\n        percent?:number,\n        percent_str?:string\n    }\n    \n    markets: Market[];\n\n    constructor(obj:any = null) {\n        super(obj);\n        if (typeof obj == \"object\") {\n            delete obj.symbol;\n            delete obj.precision;\n            delete obj.contract;\n            Object.assign(this, obj);\n        }\n        this.toString();\n    }\n\n\n}","import BigNumber from 'bignumber.js';\nimport { TokenDEX } from './token-dex.class';\nimport { Asset } from '@vapaee/scatter';\n\nexport interface IVapaeeDEX {\n    getTokenNow(symbol:string): TokenDEX;\n}\n\nexport class AssetDEX extends Asset {\n    amount:BigNumber;\n    token:TokenDEX;\n    \n    constructor(a: any = null, b: any = null) {\n        super(a,b);\n\n        if (a instanceof AssetDEX) {\n            this.amount = a.amount;\n            this.token = b;\n            return;\n        }\n\n        if (!!b && b['getTokenNow']) {\n            this.parseDex(a,b);\n        }\n\n    }\n\n    clone(): AssetDEX {\n        return new AssetDEX(this.amount, this.token);\n    }\n\n    plus(b:AssetDEX) {\n        console.assert(!!b, \"ERROR: b is not an Asset\", b, this.str);\n        console.assert(b.token.symbol == this.token.symbol, \"ERROR: trying to sum assets with different tokens: \" + this.str + \" and \" + b.str);\n        var amount = this.amount.plus(b.amount);\n        return new AssetDEX(amount, this.token);\n    }\n\n    minus(b:AssetDEX) {\n        console.assert(!!b, \"ERROR: b is not an Asset\", b, this.str);\n        console.assert(b.token.symbol == this.token.symbol, \"ERROR: trying to substract assets with different tokens: \" + this.str + \" and \" + b.str);\n        var amount = this.amount.minus(b.amount);\n        return new AssetDEX(amount, this.token);\n    }    \n\n    parseDex(text: string, dex: IVapaeeDEX) {\n        if (text == \"\") return;\n        var sym = text.split(\" \")[1];\n        this.token = dex.getTokenNow(sym);\n        var amount_str = text.split(\" \")[0];\n        this.amount = new BigNumber(amount_str);\n    }\n\n    \n    toString(decimals:number = -1): string {\n        if (!this.token) return \"0.0000\";\n        return this.valueToString(decimals) + \" \" + this.token.symbol.toUpperCase();\n    }\n\n    inverse(token: TokenDEX): AssetDEX {\n        var result = new BigNumber(1).dividedBy(this.amount);\n        var asset =  new AssetDEX(result, token);\n        return asset;\n    }\n}","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport BigNumber from \"bignumber.js\";\nimport { CookieService } from 'ngx-cookie-service';\nimport { DatePipe } from '@angular/common';\nimport { TokenDEX } from './token-dex.class';\nimport { AssetDEX } from './asset-dex.class';\nimport { Feedback } from '@vapaee/feedback';\nimport { VapaeeScatter, Account, AccountData, SmartContract, TableResult, TableParams } from '@vapaee/scatter';\nimport { MarketMap, UserOrdersMap, MarketSummary, EventLog, Market, HistoryTx, TokenOrders, Order, UserOrders, OrderRow, HistoryBlock } from './types-dex';\n\n\n@Injectable({\n    providedIn: \"root\"\n})\nexport class VapaeeDEX {\n\n    public loginState: string;\n    /*\n    public loginState: string;\n    - 'no-scatter': Scatter no detected\n    - 'no-logged': Scatter detected but user is not logged\n    - 'account-ok': user logger with scatter\n    */\n    private _markets: MarketMap;\n    private _reverse: MarketMap;\n\n    public zero_telos: AssetDEX;\n    public telos: TokenDEX;\n    public tokens: TokenDEX[];\n    public contract: SmartContract;\n    public feed: Feedback;\n    public current: Account;\n    public last_logged: string;\n    public contract_name: string;   \n    public deposits: AssetDEX[];\n    public balances: AssetDEX[];\n    public userorders: UserOrdersMap;\n    public onLoggedAccountChange:Subject<string> = new Subject();\n    public onCurrentAccountChange:Subject<string> = new Subject();\n    public onHistoryChange:Subject<string> = new Subject();\n    public onMarketSummary:Subject<MarketSummary> = new Subject();\n    // public onBlocklistChange:Subject<any[][]> = new Subject();\n    public onTokensReady:Subject<TokenDEX[]> = new Subject();\n    public onMarketReady:Subject<TokenDEX[]> = new Subject();\n    public onTradeUpdated:Subject<any> = new Subject();\n    vapaeetokens:string = \"vapaeetokens\";\n\n    activityPagesize:number = 10;\n    \n    activity:{\n        total:number;\n        events:{[id:string]:EventLog};\n        list:EventLog[];\n    };\n    \n    private setOrderSummary: Function;\n    public waitOrderSummary: Promise<any> = new Promise((resolve) => {\n        this.setOrderSummary = resolve;\n    });\n\n    private setTokenStats: Function;\n    public waitTokenStats: Promise<any> = new Promise((resolve) => {\n        this.setTokenStats = resolve;\n    });\n\n    private setMarketSummary: Function;\n    public waitMarketSummary: Promise<any> = new Promise((resolve) => {\n        this.setMarketSummary = resolve;\n    });\n\n    private setTokenSummary: Function;\n    public waitTokenSummary: Promise<any> = new Promise((resolve) => {\n        this.setTokenSummary = resolve;\n    });\n\n    private setTokensLoaded: Function;\n    public waitTokensLoaded: Promise<any> = new Promise((resolve) => {\n        this.setTokensLoaded = resolve;\n    });\n    constructor(\n        private scatter: VapaeeScatter,\n        private cookies: CookieService,\n        private datePipe: DatePipe\n    ) {\n        this._markets = {};\n        this._reverse = {};\n        this.activity = {total:0, events:{}, list:[]};\n        this.current = this.default;\n        this.contract_name = this.vapaeetokens;\n        this.contract = this.scatter.getSmartContract(this.contract_name);\n        this.feed = new Feedback();\n        this.scatter.onLogggedStateChange.subscribe(this.onLoggedChange.bind(this));\n        this.updateLogState();\n        this.fetchTokens().then(data => {\n            this.tokens = data.tokens;\n            this.tokens.push(new TokenDEX({\n                appname: \"Viitasphere\",\n                contract: \"viitasphere1\",\n                logo: \"/assets/logos/viitasphere.png\",\n                logolg: \"/assets/logos/viitasphere-lg.png\",\n                precision: 4,\n                scope: \"viitct.tlos\",\n                symbol: \"VIITA\",\n                verified: false,\n                website: \"https://viitasphere.com\"\n            }));\n            this.tokens.push(new TokenDEX({\n                appname: \"Viitasphere\",\n                contract: \"viitasphere1\",\n                logo: \"/assets/logos/viitasphere.png\",\n                logolg: \"/assets/logos/viitasphere-lg.png\",\n                precision: 0,\n                scope: \"viitct.tlos\",\n                symbol: \"VIICT\",\n                verified: false,\n                website: \"https://viitasphere.com\"\n            }));\n            this.zero_telos = new AssetDEX(\"0.0000 TLOS\", this);\n            this.setTokensLoaded();\n            this.fetchTokensStats();\n            this.getOrderSummary();\n            this.getAllTablesSumaries();\n        });\n\n        // this.waitTokensLoaded.then(_ => {\n        // })\n\n\n        var timer;\n        this.onMarketSummary.subscribe(summary => {\n            clearTimeout(timer);\n            timer = setTimeout(_ => {\n                this.updateTokensSummary();\n                this.updateTokensMarkets();\n            }, 100);\n        });    \n\n\n\n    }\n\n    // getters -------------------------------------------------------------\n    get default(): Account {\n        return this.scatter.default;\n    }\n\n    get logged() {\n        if (this.scatter.logged && !this.scatter.account) {\n            /*\n            console.error(\"WARNING!!!\");\n            console.log(this.scatter);\n            console.log(this.scatter.username);\n            console.error(\"*******************\");\n            */\n        }\n        return this.scatter.logged ?\n            (this.scatter.account ? this.scatter.account.name : this.scatter.default.name) :\n            null;\n    }\n\n    get account() {\n        return this.scatter.logged ? \n        this.scatter.account :\n        this.scatter.default;\n    }\n\n    // -- User Log State ---------------------------------------------------\n    login() {\n        this.feed.setLoading(\"login\", true);\n        this.feed.setLoading(\"log-state\", true);\n        console.log(\"VapaeeDEX.login() this.feed.loading('log-state')\", this.feed.loading('log-state'));\n        this.logout();\n        this.updateLogState();\n        console.log(\"VapaeeDEX.login() this.feed.loading('log-state')\", this.feed.loading('log-state'));\n        this.feed.setLoading(\"logout\", false);\n        return this.scatter.login().then(() => {\n            this.updateLogState();\n            this.feed.setLoading(\"login\", false);\n        }).catch(e => {\n            this.feed.setLoading(\"login\", false);\n            throw e;\n        });\n    }\n\n    logout() {\n        this.feed.setLoading(\"logout\", true);\n        this.scatter.logout();\n    }\n\n    onLogout() {\n        this.feed.setLoading(\"logout\", false);\n        console.log(\"VapaeeDEX.onLogout()\");\n        this.resetCurrentAccount(this.default.name);\n        this.updateLogState();\n        this.onLoggedAccountChange.next(this.logged);\n        this.cookies.delete(\"login\");\n        setTimeout(_  => { this.last_logged = this.logged; }, 400);\n    }\n    \n    onLogin(name:string) {\n        console.log(\"VapaeeDEX.onLogin()\", name);\n        this.resetCurrentAccount(name);\n        this.getDeposits();\n        this.getBalances();\n        this.updateLogState();\n        this.getUserOrders();\n        this.onLoggedAccountChange.next(this.logged);\n        this.last_logged = this.logged;\n        this.cookies.set(\"login\", this.logged);\n    }\n\n    onLoggedChange() {\n        console.log(\"VapaeeDEX.onLoggedChange()\");\n        if (this.scatter.logged) {\n            this.onLogin(this.scatter.account.name);\n        } else {\n            this.onLogout();\n        }\n    }\n\n    async resetCurrentAccount(profile:string) {\n        console.log(\"VapaeeDEX.resetCurrentAccount()\", this.current.name, \"->\", profile);\n        if (this.current.name != profile && (this.current.name == this.last_logged || profile != \"guest\")) {\n            this.feed.setLoading(\"account\", true);\n            this.current = this.default;\n            this.current.name = profile;\n            if (profile != \"guest\") {\n                this.current.data = await this.getAccountData(this.current.name);\n            } else {\n                console.error(\"------------------------------------------\");\n                console.error(\"------------------------------------------\");\n                console.error(\"WARNING!!! current is guest\", [profile, this.account, this.current]);\n                console.error(\"------------------------------------------\");\n                console.error(\"------------------------------------------\");\n            }\n            // this.scopes = {};\n            this.balances = [];\n            this.userorders = {};            \n            // console.log(\"this.onCurrentAccountChange.next(this.current.name) !!!!!!\");\n            this.onCurrentAccountChange.next(this.current.name);\n            this.updateCurrentUser();\n            this.feed.setLoading(\"account\", false);\n        }       \n    }\n\n    private updateLogState() {\n        this.loginState = \"no-scatter\";\n        this.feed.setLoading(\"log-state\", true);\n        console.log(\"VapaeeDEX.updateLogState() \", this.loginState, this.feed.loading(\"log-state\"));\n        this.scatter.waitConnected.then(() => {\n            this.loginState = \"no-logged\";\n            // console.log(\"VapaeeDEX.updateLogState()   \", this.loginState);\n            if (this.scatter.logged) {\n                this.loginState = \"account-ok\";\n                // console.log(\"VapaeeDEX.updateLogState()     \", this.loginState);\n            }\n            this.feed.setLoading(\"log-state\", false);\n            console.log(\"VapaeeDEX.updateLogState() \", this.loginState, this.feed.loading(\"log-state\"));\n        });\n\n        var timer2;\n        var timer1 = setInterval(_ => {\n            if (!this.scatter.feed.loading(\"connect\")) {\n                this.feed.setLoading(\"log-state\", false);\n                clearInterval(timer1);\n                clearInterval(timer2);\n            }\n        }, 200);\n\n        timer2 = setTimeout(_ => {\n            clearInterval(timer1);\n            this.feed.setLoading(\"log-state\", false);\n        }, 6000);\n        \n    }\n\n    private async getAccountData(name: string): Promise<AccountData>  {\n        return this.scatter.queryAccountData(name).catch(async _ => {\n            return this.default.data;\n        });\n    }\n\n    // Actions --------------------------------------------------------------\n    createOrder(type:string, amount:AssetDEX, price:AssetDEX) {\n        // \"alice\", \"buy\", \"2.50000000 CNT\", \"0.40000000 TLOS\"\n        // name owner, name type, const asset & total, const asset & price\n        this.feed.setLoading(\"order-\"+type, true);\n        return this.contract.excecute(\"order\", {\n            owner:  this.scatter.account.name,\n            type: type,\n            total: amount.toString(8),\n            price: price.toString(8)\n        }).then(async result => {\n            this.updateTrade(amount.token, price.token);\n            this.feed.setLoading(\"order-\"+type, false);\n            return result;\n        }).catch(e => {\n            this.feed.setLoading(\"order-\"+type, false);\n            console.error(e);\n            throw e;\n        });\n    }\n\n    cancelOrder(type:string, comodity:TokenDEX, currency:TokenDEX, orders:number[]) {\n        // '[\"alice\", \"buy\", \"CNT\", \"TLOS\", [1,0]]'\n        // name owner, name type, const asset & total, const asset & price\n        this.feed.setLoading(\"cancel-\"+type, true);\n        for (var i in orders) { this.feed.setLoading(\"cancel-\"+type+\"-\"+orders[i], true); }\n        return this.contract.excecute(\"cancel\", {\n            owner:  this.scatter.account.name,\n            type: type,\n            comodity: comodity.symbol,\n            currency: currency.symbol,\n            orders: orders\n        }).then(async result => {\n            this.updateTrade(comodity, currency);\n            this.feed.setLoading(\"cancel-\"+type, false);\n            for (var i in orders) { this.feed.setLoading(\"cancel-\"+type+\"-\"+orders[i], false); }    \n            return result;\n        }).catch(e => {\n            this.feed.setLoading(\"cancel-\"+type, false);\n            for (var i in orders) { this.feed.setLoading(\"cancel-\"+type+\"-\"+orders[i], false); }    \n            console.error(e);\n            throw e;\n        });\n    }\n\n    deposit(quantity:AssetDEX) {\n        // name owner, name type, const asset & total, const asset & price\n        var contract = this.scatter.getSmartContract(quantity.token.contract);\n        this.feed.setError(\"deposit\", null);\n        this.feed.setLoading(\"deposit\", true);\n        this.feed.setLoading(\"deposit-\"+quantity.token.symbol.toLowerCase(), true);\n        return contract.excecute(\"transfer\", {\n            from:  this.scatter.account.name,\n            to: this.vapaeetokens,\n            quantity: quantity.toString(),\n            memo: \"deposit\"\n        }).then(async result => {\n            this.feed.setLoading(\"deposit\", false);\n            this.feed.setLoading(\"deposit-\"+quantity.token.symbol.toLowerCase(), false);    \n            /*await*/ this.getDeposits();\n            /*await*/ this.getBalances();\n            return result;\n        }).catch(e => {\n            this.feed.setLoading(\"deposit\", false);\n            this.feed.setLoading(\"deposit-\"+quantity.token.symbol.toLowerCase(), false);\n            this.feed.setError(\"deposit\", typeof e == \"string\" ? e : JSON.stringify(e,null,4));\n            console.error(e);\n            throw e;\n        });\n    }    \n\n    withdraw(quantity:AssetDEX) {\n        this.feed.setError(\"withdraw\", null);\n        this.feed.setLoading(\"withdraw\", true);\n        this.feed.setLoading(\"withdraw-\"+quantity.token.symbol.toLowerCase(), true);   \n        return this.contract.excecute(\"withdraw\", {\n            owner:  this.scatter.account.name,\n            quantity: quantity.toString()\n        }).then(async result => {\n            this.feed.setLoading(\"withdraw\", false);\n            this.feed.setLoading(\"withdraw-\"+quantity.token.symbol.toLowerCase(), false);\n            /*await*/ this.getDeposits();\n            /*await*/ this.getBalances();\n            return result;\n        }).catch(e => {\n            this.feed.setLoading(\"withdraw\", false);\n            this.feed.setLoading(\"withdraw-\"+quantity.token.symbol.toLowerCase(), false);\n            this.feed.setError(\"withdraw\", typeof e == \"string\" ? e : JSON.stringify(e,null,4));\n            throw e;\n        });\n    }\n\n    // Tokens --------------------------------------------------------------\n    addOffChainToken(offchain: TokenDEX) {\n        this.waitTokensLoaded.then(_ => {\n            this.tokens.push(new TokenDEX({\n                symbol: offchain.symbol,\n                precision: offchain.precision || 4,\n                contract: \"nocontract\",\n                appname: offchain.appname,\n                website: \"\",\n                logo:\"\",\n                logolg: \"\",\n                scope: \"\",\n                stat: null,\n                verified: false,\n                offchain: true\n            }));\n        });\n    }\n\n\n    // --------------------------------------------------------------\n    // Scopes / Tables \n    public hasScopes() {\n        return !!this._markets;\n    }\n\n    public market(scope:string): Market {\n        if (this._markets[scope]) return this._markets[scope];        // ---> direct\n        var reverse = this.inverseScope(scope);\n        if (this._reverse[reverse]) return this._reverse[reverse];    // ---> reverse\n        if (!this._markets[reverse]) return null;                     // ---> table does not exist (or has not been loaded yet)\n        return this.reverse(scope);\n    }\n\n    public table(scope:string): Market {\n        //console.error(\"table(\"+scope+\") DEPRECATED\");\n        return this.market(scope);\n    }    \n\n    private reverse(scope:string): Market {\n        var canonical = this.canonicalScope(scope);\n        var reverse_scope = this.inverseScope(canonical);\n        console.assert(canonical != reverse_scope, \"ERROR: \", canonical, reverse_scope);\n        var reverse_table:Market = this._reverse[reverse_scope];\n        if (!reverse_table && this._markets[canonical]) {\n            this._reverse[reverse_scope] = this.createReverseTableFor(reverse_scope);\n        }\n        return this._reverse[reverse_scope];\n    }\n\n    public marketFor(comodity:TokenDEX, currency:TokenDEX): Market {\n        var scope = this.getScopeFor(comodity, currency);\n        return this.table(scope);\n    }\n\n    public tableFor(comodity:TokenDEX, currency:TokenDEX): Market {\n        console.error(\"tableFor()\",comodity.symbol,currency.symbol,\" DEPRECATED\");\n        return this.marketFor(comodity, currency);\n    }\n\n    public createReverseTableFor(scope:string): Market {\n        // console.log(\"******************************************\", scope);\n        var canonical = this.canonicalScope(scope);\n        var reverse_scope = this.inverseScope(canonical);\n        var table:Market = this._markets[canonical];\n\n        var inverse_history:HistoryTx[] = [];\n\n        for (var i in table.history) {\n            var hTx:HistoryTx = {\n                id: table.history[i].id,\n                str: \"\",\n                price: table.history[i].inverse.clone(),\n                inverse: table.history[i].price.clone(),\n                amount: table.history[i].payment.clone(),\n                payment: table.history[i].amount.clone(),\n                buyer: table.history[i].seller,\n                seller: table.history[i].buyer,\n                buyfee: table.history[i].sellfee.clone(),\n                sellfee: table.history[i].buyfee.clone(),\n                date: table.history[i].date,\n                isbuy: !table.history[i].isbuy,\n            };\n            hTx.str = hTx.price.str + \" \" + hTx.amount.str;\n            inverse_history.push(hTx);\n        }\n        \n    \n        var inverse_orders:TokenOrders = {\n            buy: [], sell: []\n        };\n\n        for (var type in {buy:\"buy\", sell:\"sell\"}) {\n            var row_orders:Order[];\n            var row_order:Order;\n\n            for (var i in table.orders[type]) {\n                var row = table.orders[type][i];\n\n                row_orders = [];\n                for (var j=0; j<row.orders.length; j++) {\n                    row_order = {\n                        deposit: row.orders[j].deposit.clone(),\n                        id: row.orders[j].id,\n                        inverse: row.orders[j].price.clone(),\n                        price: row.orders[j].inverse.clone(),\n                        owner: row.orders[j].owner,\n                        telos: row.orders[j].total,\n                        total: row.orders[j].telos\n                    }\n                    row_orders.push(row_order);\n                }\n\n                var newrow:OrderRow = {\n                    inverse: row.price.clone(),\n                    orders: row_orders,\n                    owners: row.owners,\n                    price: row.inverse.clone(),\n                    str: row.inverse.str,\n                    sum: row.sumtelos.clone(),\n                    sumtelos: row.sum.clone(),\n                    telos: row.total.clone(),\n                    total: row.telos.clone(),\n                    // amount: row.sumtelos.total(), // <-- extra\n                };\n                inverse_orders[type].push(newrow);\n            }\n        }\n\n        var reverse:Market = {\n            scope: reverse_scope,\n            comodity: table.currency,\n            currency: table.comodity,\n            block: table.block,\n            blocklist: table.reverseblocks,\n            reverseblocks: table.blocklist,\n            blocklevels: table.reverselevels,\n            reverselevels: table.blocklevels,\n            blocks: table.blocks,\n            deals: table.deals,\n            header: {\n                sell: {\n                    total:table.header.buy.total.clone(),\n                    orders:table.header.buy.orders\n                },\n                buy: {\n                    total:table.header.sell.total.clone(),\n                    orders:table.header.sell.orders\n                }\n            },\n            history: inverse_history,\n            orders: {\n                sell: inverse_orders.buy,  // <<-- esto funciona asÃ­ como estÃ¡?\n                buy: inverse_orders.sell   // <<-- esto funciona asÃ­ como estÃ¡?\n            },\n            summary: {\n                scope: this.inverseScope(table.summary.scope),\n                price: table.summary.inverse,\n                price_24h_ago: table.summary.inverse_24h_ago,\n                inverse: table.summary.price,\n                inverse_24h_ago: table.summary.price_24h_ago,\n                max_inverse: table.summary.max_price,\n                max_price: table.summary.max_inverse,\n                min_inverse: table.summary.min_price,\n                min_price: table.summary.min_inverse,\n                records: table.summary.records,\n                volume: table.summary.amount,\n                amount: table.summary.volume,\n                percent: table.summary.ipercent,\n                ipercent: table.summary.percent,\n                percent_str: table.summary.ipercent_str,\n                ipercent_str: table.summary.percent_str,\n            },\n            tx: table.tx\n        }\n        return reverse;\n    }\n\n    public getScopeFor(comodity:TokenDEX, currency:TokenDEX) {\n        if (!comodity || !currency) return \"\";\n        return comodity.symbol.toLowerCase() + \".\" + currency.symbol.toLowerCase();\n    }\n\n    public inverseScope(scope:string) {\n        if (!scope) return scope;\n        console.assert(typeof scope ==\"string\", \"ERROR: string scope expected, got \", typeof scope, scope);\n        var parts = scope.split(\".\");\n        console.assert(parts.length == 2, \"ERROR: scope format expected is xxx.yyy, got: \", typeof scope, scope);\n        var inverse = parts[1] + \".\" + parts[0];\n        return inverse;\n    }\n\n    public canonicalScope(scope:string) {\n        if (!scope) return scope;\n        console.assert(typeof scope ==\"string\", \"ERROR: string scope expected, got \", typeof scope, scope);\n        var parts = scope.split(\".\");\n        console.assert(parts.length == 2, \"ERROR: scope format expected is xxx.yyy, got: \", typeof scope, scope);\n        var inverse = parts[1] + \".\" + parts[0];\n        if (parts[1] == \"tlos\") {\n            return scope;\n        }\n        if (parts[0] == \"tlos\") {\n            return inverse;\n        }\n        if (parts[0] < parts[1]) {\n            return scope;\n        } else {\n            return inverse;\n        }\n    }\n    \n\n    public isCanonical(scope:string) {\n        return this.canonicalScope(scope) == scope;\n    }\n\n    \n    \n    // --------------------------------------------------------------\n    // Getters \n\n    getBalance(token:TokenDEX) {\n        for (var i in this.balances) {\n            if (this.balances[i].token.symbol == token.symbol) {\n                return this.balances[i];\n            }\n        }\n        return new AssetDEX(\"0 \" + token.symbol, this);\n    }\n\n    async getSomeFreeFakeTokens(symbol:string = null) {\n        console.log(\"VapaeeDEX.getSomeFreeFakeTokens()\");\n        var _token = symbol;    \n        this.feed.setLoading(\"freefake-\"+_token || \"token\", true);\n        return this.waitTokenStats.then(_ => {\n            var token = null;\n            var counts = 0;\n            for (var i=0; i<100; i++) {\n                if (symbol) {\n                    if (this.tokens[i].symbol == symbol) {\n                        token = this.tokens[i];\n                    }\n                }                \n\n                var random = Math.random();\n                // console.log(i, \"Random: \", random);\n                if (!token && random > 0.5) {\n                    token = this.tokens[i % this.tokens.length];\n                    if (token.fake) {\n                        random = Math.random();\n                        if (random > 0.5) {\n                            token = this.telos;\n                        }\n                    } else {\n                        token = null;\n                    }\n                }\n\n                if (i<100 && token && this.getBalance(token).amount.toNumber() > 0) {\n                    token = null;\n                }\n\n                // console.log(i, \"token: \", token);\n\n                if (token) {\n                    random = Math.random();\n                    var monto = Math.floor(10000 * random) / 100;\n                    var quantity = new AssetDEX(\"\" + monto + \" \" + token.symbol ,this);\n                    var memo = \"you get \" + quantity.valueToString()+ \" free fake \" + token.symbol + \" tokens to play on vapaee.io DEX\";\n                    return this.contract.excecute(\"issue\", {\n                        to:  this.scatter.account.name,\n                        quantity: quantity.toString(),\n                        memo: memo\n                    }).then(_ => {\n                        this.getBalances();\n                        this.feed.setLoading(\"freefake-\"+_token || \"token\", false);\n                        return memo;\n                    }).catch(e => {\n                        this.feed.setLoading(\"freefake-\"+_token || \"token\", false);\n                        throw e;\n                    });                \n                }               \n            }\n        })\n    }\n\n    getTokenNow(sym:string): TokenDEX {\n        if (!sym) return null;\n        for (var i in this.tokens) {\n            // there's a little bug. This is a justa  work arround\n            if (this.tokens[i].symbol.toUpperCase() == \"TLOS\" && this.tokens[i].offchain) {\n                // this solves attaching wrong tlos token to asset\n                continue;\n            }\n             \n            if (this.tokens[i].symbol.toUpperCase() == sym.toUpperCase()) {\n                return this.tokens[i];\n            }\n        }\n        return null;\n    }\n\n    async getToken(sym:string): Promise<TokenDEX> {\n        return this.waitTokensLoaded.then(_ => {\n            return this.getTokenNow(sym);\n        });\n    }\n\n    async getDeposits(account:string = null): Promise<any> {\n        console.log(\"VapaeeDEX.getDeposits()\");\n        this.feed.setLoading(\"deposits\", true);\n        return this.waitTokensLoaded.then(async _ => {\n            var deposits: AssetDEX[] = [];\n            if (!account && this.current.name) {\n                account = this.current.name;\n            }\n            if (account) {\n                var result = await this.fetchDeposits(account);\n                for (var i in result.rows) {\n                    deposits.push(new AssetDEX(result.rows[i].amount, this));\n                }\n            }\n            this.deposits = deposits;\n            this.feed.setLoading(\"deposits\", false);\n            return this.deposits;\n        });\n    }\n\n    async getBalances(account:string = null): Promise<any> {\n        console.log(\"VapaeeDEX.getBalances()\");\n        this.feed.setLoading(\"balances\", true);\n        return this.waitTokensLoaded.then(async _ => {\n            var _balances: AssetDEX[];\n            if (!account && this.current.name) {\n                account = this.current.name;\n            }            \n            if (account) {\n                _balances = await this.fetchBalances(account);\n            }\n            this.balances = _balances;\n            // console.log(\"VapaeeDEX balances updated\");\n            this.feed.setLoading(\"balances\", false);\n            return this.balances;\n        });\n    }\n\n    async getThisSellOrders(table:string, ids:number[]): Promise<any[]> {\n        this.feed.setLoading(\"thisorders\", true);\n        return this.waitTokensLoaded.then(async _ => {\n            var result = [];\n            for (var i in ids) {\n                var id = ids[i];\n                var gotit = false;\n                for (var j in result) {\n                    if (result[j].id == id) {\n                        gotit = true;\n                        break;\n                    }\n                }\n                if (gotit) {\n                    continue;\n                }\n                var res:TableResult = await this.fetchOrders({scope:table, limit:1, lower_bound:id.toString()});\n\n                result = result.concat(res.rows);\n            }\n            this.feed.setLoading(\"thisorders\", false);\n            return result;\n        });    \n    }\n\n    async getUserOrders(account:string = null) {\n        console.log(\"VapaeeDEX.getUserOrders()\");\n        this.feed.setLoading(\"userorders\", true);\n        return this.waitTokensLoaded.then(async _ => {\n            var userorders: TableResult;\n            if (!account && this.current.name) {\n                account = this.current.name;\n            }            \n            if (account) {\n                userorders = await this.fetchUserOrders(account);\n            }\n            var list: UserOrders[] = <UserOrders[]>userorders.rows;\n            var map: UserOrdersMap = {};\n            for (var i=0; i<list.length; i++) {\n                var ids = list[i].ids;\n                var table = list[i].table;\n                var orders = await this.getThisSellOrders(table, ids);\n                map[table] = {\n                    table: table,\n                    orders: this.auxProcessRowsToOrders(orders),\n                    ids:ids\n                };\n            }\n            this.userorders = map;\n            // console.log(this.userorders);\n            this.feed.setLoading(\"userorders\", false);\n            return this.userorders;\n        });\n                \n    }\n\n    async updateActivity() {\n        this.feed.setLoading(\"activity\", true);\n        var pagesize = this.activityPagesize;\n        var pages = await this.getActivityTotalPages(pagesize);\n        await Promise.all([\n            this.fetchActivity(pages-2, pagesize),\n            this.fetchActivity(pages-1, pagesize),\n            this.fetchActivity(pages-0, pagesize)\n        ]);\n        this.feed.setLoading(\"activity\", false);\n    }\n\n    async loadMoreActivity() {\n        if (this.activity.list.length == 0) return;\n        this.feed.setLoading(\"activity\", true);\n        var pagesize = this.activityPagesize;\n        var first = this.activity.list[this.activity.list.length-1];\n        var id = first.id - pagesize;\n        var page = Math.floor((id-1) / pagesize);\n\n        await this.fetchActivity(page, pagesize);\n        this.feed.setLoading(\"activity\", false);\n    }\n\n    async updateTrade(comodity:TokenDEX, currency:TokenDEX, updateUser:boolean = true): Promise<any> {\n        console.log(\"VapaeeDEX.updateTrade()\");\n        var chrono_key = \"updateTrade\";\n        this.feed.startChrono(chrono_key);\n\n        if(updateUser) this.updateCurrentUser();\n        return Promise.all([\n            this.getTransactionHistory(comodity, currency, -1, -1, true).then(_ => this.feed.setMarck(chrono_key, \"getTransactionHistory()\")),\n            this.getBlockHistory(comodity, currency, -1, -1, true).then(_ => this.feed.setMarck(chrono_key, \"getBlockHistory()\")),\n            this.getSellOrders(comodity, currency, true).then(_ => this.feed.setMarck(chrono_key, \"getSellOrders()\")),\n            this.getBuyOrders(comodity, currency, true).then(_ => this.feed.setMarck(chrono_key, \"getBuyOrders()\")),\n            this.getTableSummary(comodity, currency, true).then(_ => this.feed.setMarck(chrono_key, \"getTableSummary()\")),\n            this.getOrderSummary().then(_ => this.feed.setMarck(chrono_key, \"getOrderSummary()\")),\n        ]).then(r => {\n            this._reverse = {};\n            this.resortTokens();\n            // this.feed.printChrono(chrono_key);\n            this.onTradeUpdated.next(null);\n            return r;\n        });\n    }\n\n    async updateCurrentUser(): Promise<any> {\n        // console.log(\"VapaeeDEX.updateCurrentUser()\");\n        this.feed.setLoading(\"current\", true);        \n        return Promise.all([\n            this.getUserOrders(),\n            this.getDeposits(),\n            this.getBalances()\n        ]).then(_ => {\n            this.feed.setLoading(\"current\", false);\n            return _;\n        }).catch(e => {\n            this.feed.setLoading(\"current\", false);\n            throw e;\n        });\n    }\n\n    private getBlockHistoryTotalPagesFor(scope:string, pagesize: number) {\n        if (!this._markets) return 0;\n        var market = this.market(scope);\n        if (!market) return 0;\n        var total = market.blocks;\n        var mod = total % pagesize;\n        var dif = total - mod;\n        var pages = dif / pagesize;\n        if (mod > 0) {\n            pages +=1;\n        }\n        // console.log(\"getBlockHistoryTotalPagesFor() total:\", total, \" pages:\", pages);\n        return pages;\n    }\n\n    private getHistoryTotalPagesFor(scope:string, pagesize: number) {\n        if (!this._markets) return 0;\n        var market = this.market(scope);\n        if (!market) return 0;\n        var total = market.deals;\n        var mod = total % pagesize;\n        var dif = total - mod;\n        var pages = dif / pagesize;\n        if (mod > 0) {\n            pages +=1;\n        }\n        return pages;\n    }\n\n    private async getActivityTotalPages(pagesize: number) {\n        return this.contract.getTable(\"events\", {\n            limit: 1\n        }).then(result => {\n            var params = result.rows[0].params;\n            var total = parseInt(params.split(\" \")[0])-1;\n            var mod = total % pagesize;\n            var dif = total - mod;\n            var pages = dif / pagesize;\n            if (mod > 0) {\n                pages +=1;\n            }\n            this.activity.total = total;\n            console.log(\"VapaeeDEX.getActivityTotalPages() total: \", total, \" pages: \", pages);\n            return pages;\n        });\n    }\n\n    async getTransactionHistory(comodity:TokenDEX, currency:TokenDEX, page:number = -1, pagesize:number = -1, force:boolean = false): Promise<any> {\n        var scope:string = this.canonicalScope(this.getScopeFor(comodity, currency));\n        var aux = null;\n        var result = null;\n        this.feed.setLoading(\"history.\"+scope, true);\n        aux = this.waitOrderSummary.then(async _ => {\n            if (pagesize == -1) {\n                pagesize = 10;                \n            }\n            if (page == -1) {\n                var pages = this.getHistoryTotalPagesFor(scope, pagesize);\n                page = pages-3;\n                if (page < 0) page = 0;\n            }\n\n            return Promise.all([\n                this.fetchHistory(scope, page+0, pagesize),\n                this.fetchHistory(scope, page+1, pagesize),\n                this.fetchHistory(scope, page+2, pagesize)\n            ]).then(_ => {\n                this.feed.setLoading(\"history.\"+scope, false);\n                return this.market(scope).history;\n            }).catch(e => {\n                this.feed.setLoading(\"history.\"+scope, false);\n                throw e;\n            });\n        });\n\n        if (this.market(scope) && !force) {\n            result = this.market(scope).history;\n        } else {\n            result = aux;\n        }\n\n        this.onHistoryChange.next(result);\n\n        return result;\n    }\n\n    private auxHourToLabel(hour:number): string {\n        var d = new Date(hour * 1000 * 60 * 60);\n        var label = d.getHours() == 0 ? this.datePipe.transform(d, 'dd/MM') : d.getHours() + \"h\";\n        \n        return label;\n    }\n\n    async getBlockHistory(comodity:TokenDEX, currency:TokenDEX, page:number = -1, pagesize:number = -1, force:boolean = false): Promise<any> {\n        console.log(\"VapaeeDEX.getBlockHistory()\", comodity.symbol, page, pagesize);\n        // // elapsed time\n        // var startTime:Date = new Date();\n        // var diff:number;\n        // var sec:number;\n\n        var scope:string = this.canonicalScope(this.getScopeFor(comodity, currency));\n        var aux = null;\n        var result = null;\n        this.feed.setLoading(\"block-history.\"+scope, true);\n\n        aux = this.waitOrderSummary.then(async _ => {\n            var fetchBlockHistoryStart:Date = new Date();\n\n            if (pagesize == -1) {\n                pagesize = 10;\n            }\n            if (page == -1) {\n                var pages = this.getBlockHistoryTotalPagesFor(scope, pagesize);\n                page = pages-3;\n                if (page < 0) page = 0;\n            }\n            var promises = [];\n            for (var i=0; i<=pages; i++) {\n                var promise = this.fetchBlockHistory(scope, i, pagesize);\n                promises.push(promise);\n            }\n\n            return Promise.all(promises).then(_ => {\n                // // elapsed time\n                // var fetchBlockHistoryTime:Date = new Date();\n                // diff = fetchBlockHistoryTime.getTime() - fetchBlockHistoryStart.getTime();\n                // sec = diff / 1000;\n                // console.log(\"** VapaeeDEX.getBlockHistory() fetchBlockHistoryTime sec: \", sec, \"(\",diff,\")\");\n\n\n                this.feed.setLoading(\"block-history.\"+scope, false);\n                var market: Market = this.market(scope);\n                market.blocklist = [];\n                market.reverseblocks = [];\n                var now = new Date();\n                var hora = 1000 * 60 * 60;\n                var hour = Math.floor(now.getTime()/hora);\n                // console.log(\"->\", hour);\n                var last_block = null;\n                var last_hour = null;\n\n                var ordered_blocks = [];\n                for (var i in market.block) {\n                    ordered_blocks.push(market.block[i]);\n                }\n\n                ordered_blocks.sort(function(a:HistoryBlock, b:HistoryBlock) {\n                    if(a.hour < b.hour) return -11;\n                    return 1;\n                });\n\n\n\n                for (var i in ordered_blocks) {\n                    var block:HistoryBlock = ordered_blocks[i];\n                    var label = this.auxHourToLabel(block.hour);\n                    /*\n                    // console.log(\"->\", i, label, block);\n                    var date = block.date;\n                    var dif = now.getTime() - block.date.getTime();\n                    var mes = 30 * 24 * hora;\n                    var elapsed_months = dif / mes;\n                    if (elapsed_months > 3) {\n                        console.log(\"dropping block too old\", [block, block.date.toUTCString()]);\n                        continue;\n                    }\n                    */\n\n                    if (last_block) {\n                        var dif = block.hour - last_block.hour;\n                        for (var j=1; j<dif; j++) {\n                            var label_i = this.auxHourToLabel(last_block.hour+j);\n                            // console.log(\"-->\", j, label_i, block);\n\n                            // coninical ----------------------------\n                            var price = last_block.price.amount.toNumber();\n                            var aux = [label_i, price, price, price, price];\n                            market.blocklist.push(aux);\n                            // reverse ----------------------------\n                            var inverse = last_block.inverse.amount.toNumber();\n                            var aux = [label_i, inverse, inverse, inverse, inverse];\n                            market.reverseblocks.push(aux);\n                        }\n                    }\n                    var obj:any[];\n                    // coninical ----------------------------\n                    obj = [label];\n                    obj.push(block.max.amount.toNumber());\n                    obj.push(block.entrance.amount.toNumber());\n                    obj.push(block.price.amount.toNumber());\n                    obj.push(block.min.amount.toNumber());\n                    market.blocklist.push(obj);\n                    // reverse ----------------------------\n                    obj = [label];\n                    obj.push(1.0/block.max.amount.toNumber());\n                    obj.push(1.0/block.entrance.amount.toNumber());\n                    obj.push(1.0/block.price.amount.toNumber());\n                    obj.push(1.0/block.min.amount.toNumber());\n                    market.reverseblocks.push(obj);\n                    last_block = block;\n                }\n\n                if (last_block && hour != last_block.hour) {\n                    var dif = hour - last_block.hour;\n                    for (var j=1; j<=dif; j++) {\n                        var label_i = this.auxHourToLabel(last_block.hour+j);\n\n                        // coninical ----------------------------\n                        var price = last_block.price.amount.toNumber();\n                        var aux = [label_i, price, price, price, price];\n                        market.blocklist.push(aux);\n\n                        // reverse ----------------------------\n                        var inverse = last_block.inverse.amount.toNumber();\n                        var aux = [label_i, inverse, inverse, inverse, inverse];\n                        market.reverseblocks.push(aux);\n                    }\n                }\n\n                // // elapsed time\n                // var firstLevelTime:Date = new Date();\n                // diff = firstLevelTime.getTime() - fetchBlockHistoryTime.getTime();\n                // sec = diff / 1000;\n                // console.log(\"** VapaeeDEX.getBlockHistory() firstLevelTime sec: \", sec, \"(\",diff,\")\");                \n                \n                // console.log(\"---------------->\", market.blocklist);\n                // this.onBlocklistChange.next(market.blocklist);\n                return market;\n            }).then(market => {\n                // console.log(\"***************************************************************************\");\n                // // elapsed time\n                // var allLevelsStart:Date = new Date();                \n                \n                var limit = 256;\n                var levels = [market.blocklist];\n                var reverses = [market.reverseblocks];\n                for (var current = 0; levels[current].length > limit; current++) {\n                    // console.log(current ,levels[current].length);\n                    var newlevel:any[][] = [];\n                    var newreverse:any[][] = [];\n                    var merged:any[] = [];\n                    for (var i=0; i<levels[current].length; i+=2) {\n                        // canonical -----------------------------\n                        var v_1:any[] = levels[current][i];\n                        var v_2 = levels[current][i+1];\n                        var merged = [];\n                        for (var x=0; x<5; x++) merged[x] = v_1[x]; // clean copy\n                        if (v_2) {\n                            merged[0] = v_1[0].split(\"/\").length > 1 ? v_1[0] : v_2[0];\n                            merged[1] = Math.max(v_1[1], v_2[1]);\n                            merged[2] = v_1[2];\n                            merged[3] = v_2[3];\n                            merged[4] = Math.min(v_1[4], v_2[4]);\n                        }\n                        newlevel.push(merged);\n\n                        // reverse ------------------------------\n                        v_1 = reverses[current][i];\n                        v_2 = reverses[current][i+1];\n                        merged = [];\n                        for (var x=0; x<5; x++) merged[x] = v_1[x]; // clean copy\n                        if (v_2) {\n                            merged[0] = v_1[0].split(\"/\").length > 1 ? v_1[0] : v_2[0];\n                            merged[1] = Math.min(v_1[1], v_2[1]);\n                            merged[2] = v_1[2];\n                            merged[3] = v_2[3];\n                            merged[4] = Math.max(v_1[4], v_2[4]);\n                        }\n\n                        \n                        newreverse.push(merged);\n                    }\n\n                    levels.push(newlevel);\n                    reverses.push(newreverse);\n                }\n                \n\n                market.blocklevels = levels;\n                market.reverselevels = reverses;\n                \n                // ---------------------\n                // market.blocklevels = [market.blocklist];\n                // market.reverselevels = [market.reverseblocks];\n                \n\n                \n                // // elapsed time\n                // var allLevelsTime:Date = new Date();\n                // diff = allLevelsTime.getTime() - allLevelsStart.getTime();\n                // sec = diff / 1000;\n                // console.log(\"** VapaeeDEX.getBlockHistory() allLevelsTime sec: \", sec, \"(\",diff,\")\");   \n                // // console.log(\"***************************************************************************\", market.blocklevels);\n\n                return market.block;\n            }).catch(e => {\n                this.feed.setLoading(\"block-history.\"+scope, false);\n                throw e;\n            });\n        });\n\n        if (this.market(scope) && !force) {\n            result = this.market(scope).block;\n        } else {\n            result = aux;\n        }\n\n        this.onHistoryChange.next(result);\n\n        return result;\n    }\n\n    async getSellOrders(comodity:TokenDEX, currency:TokenDEX, force:boolean = false): Promise<any> {\n        var scope:string = this.getScopeFor(comodity, currency);\n        var canonical:string = this.canonicalScope(scope);\n        var reverse:string = this.inverseScope(canonical);\n        var aux = null;\n        var result = null;\n        this.feed.setLoading(\"sellorders\", true);\n        aux = this.waitTokensLoaded.then(async _ => {\n            var orders = await this.fetchOrders({scope:canonical, limit:100, index_position: \"2\", key_type: \"i64\"});\n            this._markets[canonical] = this.auxAssertScope(canonical);\n            // if(scope==\"vpe.tlos\" || scope==\"cnt.tlos\")console.log(\"-------------\");\n            // if(scope==\"vpe.tlos\" || scope==\"cnt.tlos\")console.log(\"Sell crudo:\", orders);\n            var sell: Order[] = this.auxProcessRowsToOrders(orders.rows);\n            sell.sort(function(a:Order, b:Order) {\n                if(a.price.amount.isLessThan(b.price.amount)) return -11;\n                if(a.price.amount.isGreaterThan(b.price.amount)) return 1;\n                return 0;\n            });\n            // if(scope==\"vpe.tlos\" || scope==\"cnt.tlos\")console.log(\"sorted:\", sell);\n            // grouping together orders with the same price.\n            var list: OrderRow[] = [];\n            var row: OrderRow;\n            if (sell.length > 0) {\n                for(var i=0; i<sell.length; i++) {\n                    var order: Order = sell[i];\n                    if (list.length > 0) {\n                        row = list[list.length-1];\n                        if (row.price.amount.eq(order.price.amount)) {\n                            row.total.amount = row.total.amount.plus(order.total.amount);\n                            row.telos.amount = row.telos.amount.plus(order.telos.amount);\n                            row.owners[order.owner] = true;\n                            row.orders.push(order);\n                            continue;\n                        }    \n                    }\n                    row = {\n                        str: order.price.toString(),\n                        price: order.price,\n                        orders: [],\n                        total: order.total.clone(),\n                        telos: order.telos.clone(),\n                        inverse: order.inverse,\n                        sum: null,\n                        sumtelos: null,\n                        owners: {}\n                    }\n\n                    row.owners[order.owner] = true;\n                    row.orders.push(order);\n                    list.push(row);\n                }\n            }\n\n            var sum = new BigNumber(0);\n            var sumtelos = new BigNumber(0);\n            for (var j in list) {\n                var order_row = list[j];\n                sumtelos = sumtelos.plus(order_row.telos.amount);\n                sum = sum.plus(order_row.total.amount);\n                order_row.sumtelos = new AssetDEX(sumtelos, order_row.telos.token);\n                order_row.sum = new AssetDEX(sum, order_row.total.token);\n            }\n\n            this._markets[canonical].orders.sell = list;\n            // if(scope==\"vpe.tlos\" || scope==\"cnt.tlos\")console.log(\"Sell final:\", this.scopes[scope].orders.sell);\n            // if(scope==\"vpe.tlos\" || scope==\"cnt.tlos\")console.log(\"-------------\");\n\n            this.feed.setLoading(\"sellorders\", false);            \n            return this._markets[canonical].orders.sell;\n        });\n\n        if (this._markets[canonical] && !force) {\n            result = this._markets[canonical].orders.sell;\n        } else {\n            result = aux;\n        }\n        return result;\n    }\n    \n    async getBuyOrders(comodity:TokenDEX, currency:TokenDEX, force:boolean = false): Promise<any> {\n        var scope:string = this.getScopeFor(comodity, currency);\n        var canonical:string = this.canonicalScope(scope);\n        var reverse:string = this.inverseScope(canonical);\n\n\n        var aux = null;\n        var result = null;\n        this.feed.setLoading(\"buyorders\", true);\n        aux = this.waitTokensLoaded.then(async _ => {\n            var orders = await await this.fetchOrders({scope:reverse, limit:50, index_position: \"2\", key_type: \"i64\"});\n            this._markets[canonical] = this.auxAssertScope(canonical);\n            // console.log(\"-------------\");\n            // console.log(\"Buy crudo:\", orders);            \n            var buy: Order[] = this.auxProcessRowsToOrders(orders.rows);\n            buy.sort(function(a:Order, b:Order){\n                if(a.price.amount.isLessThan(b.price.amount)) return 1;\n                if(a.price.amount.isGreaterThan(b.price.amount)) return -1;\n                return 0;\n            });\n\n            // console.log(\"buy sorteado:\", buy);\n\n            // grouping together orders with the same price.\n            var list: OrderRow[] = [];\n            var row: OrderRow;\n            if (buy.length > 0) {\n                for(var i=0; i<buy.length; i++) {\n                    var order: Order = buy[i];\n                    if (list.length > 0) {\n                        row = list[list.length-1];\n                        if (row.price.amount.eq(order.price.amount)) {\n                            row.total.amount = row.total.amount.plus(order.total.amount);\n                            row.telos.amount = row.telos.amount.plus(order.telos.amount);\n                            row.owners[order.owner] = true;\n                            row.orders.push(order);\n                            continue;\n                        }    \n                    }\n                    row = {\n                        str: order.price.toString(),\n                        price: order.price,\n                        orders: [],\n                        total: order.total.clone(),\n                        telos: order.telos.clone(),\n                        inverse: order.inverse,\n                        sum: null,\n                        sumtelos: null,\n                        owners: {}\n                    }\n\n                    row.owners[order.owner] = true;\n                    row.orders.push(order);\n                    list.push(row);\n                }\n            }            \n\n            var sum = new BigNumber(0);\n            var sumtelos = new BigNumber(0);\n            for (var j in list) {\n                var order_row = list[j];\n                sumtelos = sumtelos.plus(order_row.telos.amount);\n                sum = sum.plus(order_row.total.amount);\n                order_row.sumtelos = new AssetDEX(sumtelos, order_row.telos.token);\n                order_row.sum = new AssetDEX(sum, order_row.total.token);\n            }\n\n            this._markets[canonical].orders.buy = list;\n            // console.log(\"Buy final:\", this.scopes[scope].orders.buy);\n            // console.log(\"-------------\");\n            this.feed.setLoading(\"buyorders\", false);\n            return this._markets[canonical].orders.buy;\n        });\n\n        if (this._markets[canonical] && !force) {\n            result = this._markets[canonical].orders.buy;\n        } else {\n            result = aux;\n        }\n        return result;\n    }\n    \n    async getOrderSummary(): Promise<any> {\n        console.log(\"VapaeeDEX.getOrderSummary()\");\n        var tables = await this.fetchOrderSummary();\n\n        for (var i in tables.rows) {\n            var scope:string = tables.rows[i].table;\n            var canonical = this.canonicalScope(scope);\n            console.assert(scope == canonical, \"ERROR: scope is not canonical\", scope, [i, tables]);\n            var comodity = scope.split(\".\")[0].toUpperCase();\n            var currency = scope.split(\".\")[1].toUpperCase();\n            this._markets[scope] = this.auxAssertScope(scope);\n\n            // console.log(i, tables.rows[i]);\n\n            this._markets[scope].header.sell.total = new AssetDEX(tables.rows[i].supply.total, this);\n            this._markets[scope].header.sell.orders = tables.rows[i].supply.orders;\n            this._markets[scope].header.buy.total = new AssetDEX(tables.rows[i].demand.total, this);\n            this._markets[scope].header.buy.orders = tables.rows[i].demand.orders;\n            this._markets[scope].deals = tables.rows[i].deals;\n            this._markets[scope].blocks = tables.rows[i].blocks;\n        }\n        \n        this.setOrderSummary();\n    }\n\n    async getTableSummary(comodity:TokenDEX, currency:TokenDEX, force:boolean = false): Promise<MarketSummary> {\n        var scope:string = this.getScopeFor(comodity, currency);\n        var canonical:string = this.canonicalScope(scope);\n        var inverse:string = this.inverseScope(canonical);\n\n        var ZERO_COMODITY = \"0.00000000 \" + comodity.symbol;\n        var ZERO_CURRENCY = \"0.00000000 \" + currency.symbol;\n\n        this.feed.setLoading(\"summary.\"+canonical, true);\n        this.feed.setLoading(\"summary.\"+inverse, true);\n        var aux = null;\n        var result:MarketSummary = null;\n        aux = this.waitTokensLoaded.then(async _ => {\n            var summary = await this.fetchSummary(canonical);\n            // if(scope==\"olive.tlos\")console.log(scope, \"---------------------------------------------------\");\n            // if(scope==\"olive.tlos\")console.log(\"Summary crudo:\", summary.rows);\n\n            this._markets[canonical] = this.auxAssertScope(canonical);\n            this._markets[canonical].summary = {\n                scope: canonical,\n                price: new AssetDEX(new BigNumber(0), currency),\n                price_24h_ago: new AssetDEX(new BigNumber(0), currency),\n                inverse: new AssetDEX(new BigNumber(0), comodity),\n                inverse_24h_ago: new AssetDEX(new BigNumber(0), comodity),\n                volume: new AssetDEX(new BigNumber(0), currency),\n                amount: new AssetDEX(new BigNumber(0), comodity),\n                percent: 0.3,\n                records: summary.rows\n            };\n\n            var now:Date = new Date();\n            var now_sec: number = Math.floor(now.getTime() / 1000);\n            var now_hour: number = Math.floor(now_sec / 3600);\n            var start_hour = now_hour - 23;\n            // if(canonical==\"acorn.tlos\")console.log(\"now_hour:\", now_hour);\n            // if(canonical==\"acorn.tlos\")console.log(\"start_hour:\", start_hour);\n\n            // proceso los datos crudos \n            var price = ZERO_CURRENCY;\n            var inverse = ZERO_COMODITY;\n            var crude = {};\n            var last_hh = 0;\n            for (var i=0; i<summary.rows.length; i++) {\n                var hh = summary.rows[i].hour;\n                if (summary.rows[i].label == \"lastone\") {\n                    // price = summary.rows[i].price;\n                } else {\n                    crude[hh] = summary.rows[i];\n                    if (last_hh < hh && hh < start_hour) {\n                        last_hh = hh;\n                        price = (scope == canonical) ? summary.rows[i].price : summary.rows[i].inverse;\n                        inverse = (scope == canonical) ? summary.rows[i].inverse : summary.rows[i].price;\n                        // if(canonical==\"acorn.tlos\")console.log(\"hh:\", hh, \"last_hh:\", last_hh, \"price:\", price);\n                    }    \n                }\n                /*\n                */\n            }\n            // if(canonical==\"acorn.tlos\")console.log(\"crude:\", crude);\n            // if(canonical==\"acorn.tlos\")console.log(\"price:\", price);\n\n            // genero una entrada por cada una de las Ãºltimas 24 horas\n            var last_24h = {};\n            var volume = new AssetDEX(ZERO_CURRENCY, this);\n            var amount = new AssetDEX(ZERO_COMODITY, this);\n            var price_asset = new AssetDEX(price, this);\n            var inverse_asset = new AssetDEX(inverse, this);\n            // if(canonical==\"cnt.tlos\")console.log(\"price \", price);\n            var max_price = price_asset.clone();\n            var min_price = price_asset.clone();\n            var max_inverse = inverse_asset.clone();\n            var min_inverse = inverse_asset.clone();\n            var price_fst:AssetDEX = null;\n            var inverse_fst:AssetDEX = null;\n            for (var i=0; i<24; i++) {\n                var current = start_hour+i;\n                var current_date = new Date(current * 3600 * 1000);\n                var nuevo:any = crude[current];\n                if (nuevo) {\n                    var s_price = (scope == canonical) ? nuevo.price : nuevo.inverse;\n                    var s_inverse = (scope == canonical) ? nuevo.inverse : nuevo.price;\n                    var s_volume = (scope == canonical) ? nuevo.volume : nuevo.amount;\n                    var s_amount = (scope == canonical) ? nuevo.amount : nuevo.volume;\n                    nuevo.price = s_price;\n                    nuevo.inverse = s_inverse;\n                    nuevo.volume = s_volume;\n                    nuevo.amount = s_amount;\n                } else {\n                    nuevo = {\n                        label: this.auxGetLabelForHour(current % 24),\n                        price: price,\n                        inverse: inverse,\n                        volume: ZERO_CURRENCY,\n                        amount: ZERO_COMODITY,\n                        date: current_date.toISOString().split(\".\")[0],\n                        hour: current\n                    };\n                }\n                last_24h[current] = crude[current] || nuevo;\n                // if(canonical==\"acorn.tlos\")console.log(\"current_date:\", current_date.toISOString(), current, last_24h[current]);\n\n                // coninical ----------------------------\n                price = last_24h[current].price;\n                var vol = new AssetDEX(last_24h[current].volume, this);\n                console.assert(vol.token.symbol == volume.token.symbol, \"ERROR: different tokens\", vol.str, volume.str);\n                volume.amount = volume.amount.plus(vol.amount);\n                if (price != ZERO_CURRENCY && !price_fst) {\n                    price_fst = new AssetDEX(price, this);\n                }\n                price_asset = new AssetDEX(price, this);\n                console.assert(price_asset.token.symbol == max_price.token.symbol, \"ERROR: different tokens\", price_asset.str, max_price.str);\n                if (price_asset.amount.isGreaterThan(max_price.amount)) {\n                    max_price = price_asset.clone();\n                }\n                console.assert(price_asset.token.symbol == min_price.token.symbol, \"ERROR: different tokens\", price_asset.str, min_price.str);\n                if (min_price.amount.isEqualTo(0) || price_asset.amount.isLessThan(min_price.amount)) {\n                    min_price = price_asset.clone();\n                }\n\n                // reverse ----------------------------\n                inverse = last_24h[current].inverse;\n                var amo = new AssetDEX(last_24h[current].amount, this);\n                console.assert(amo.token.symbol == amount.token.symbol, \"ERROR: different tokens\", amo.str, amount.str);\n                amount.amount = amount.amount.plus(amo.amount);\n                if (inverse != ZERO_COMODITY && !inverse_fst) {\n                    inverse_fst = new AssetDEX(inverse, this);\n                }\n                inverse_asset = new AssetDEX(inverse, this);\n                console.assert(inverse_asset.token.symbol == max_inverse.token.symbol, \"ERROR: different tokens\", inverse_asset.str, max_inverse.str);\n                if (inverse_asset.amount.isGreaterThan(max_inverse.amount)) {\n                    max_inverse = inverse_asset.clone();\n                }\n                console.assert(inverse_asset.token.symbol == min_inverse.token.symbol, \"ERROR: different tokens\", inverse_asset.str, min_inverse.str);\n                if (min_inverse.amount.isEqualTo(0) || inverse_asset.amount.isLessThan(min_inverse.amount)) {\n                    min_inverse = inverse_asset.clone();\n                }\n            }            \n            // coninical ----------------------------\n            if (!price_fst) {\n                price_fst = new AssetDEX(last_24h[start_hour].price, this);\n            }\n            var last_price =  new AssetDEX(last_24h[now_hour].price, this);\n            var diff = last_price.clone();\n            // diff.amount \n            diff.amount = last_price.amount.minus(price_fst.amount);\n            var ratio:number = 0;\n            if (price_fst.amount.toNumber() != 0) {\n                ratio = diff.amount.dividedBy(price_fst.amount).toNumber();\n            }\n            var percent = Math.floor(ratio * 10000) / 100;\n\n            // reverse ----------------------------\n            if (!inverse_fst) {\n                inverse_fst = new AssetDEX(last_24h[start_hour].inverse, this);\n            }\n            var last_inverse =  new AssetDEX(last_24h[now_hour].inverse, this);\n            var idiff = last_inverse.clone();\n            // diff.amount \n            idiff.amount = last_inverse.amount.minus(inverse_fst.amount);\n            ratio = 0;\n            if (inverse_fst.amount.toNumber() != 0) {\n                ratio = diff.amount.dividedBy(inverse_fst.amount).toNumber();\n            }\n            var ipercent = Math.floor(ratio * 10000) / 100;\n            // if(canonical==\"acorn.tlos\")console.log(\"price_fst:\", price_fst.str);\n            // if(canonical==\"acorn.tlos\")console.log(\"inverse_fst:\", inverse_fst.str);\n\n            // if(canonical==\"acorn.tlos\")console.log(\"last_24h:\", [last_24h]);\n            // if(canonical==\"acorn.tlos\")console.log(\"diff:\", diff.toString(8));\n            // if(canonical==\"acorn.tlos\")console.log(\"percent:\", percent);\n            // if(canonical==\"acorn.tlos\")console.log(\"ratio:\", ratio);\n            // if(canonical==\"acorn.tlos\")console.log(\"volume:\", volume.str);\n\n            this._markets[canonical].summary.price = last_price;\n            this._markets[canonical].summary.inverse = last_inverse;\n            this._markets[canonical].summary.price_24h_ago = price_fst || last_price;\n            this._markets[canonical].summary.inverse_24h_ago = inverse_fst;\n            this._markets[canonical].summary.percent_str = (isNaN(percent) ? 0 : percent) + \"%\";\n            this._markets[canonical].summary.percent = isNaN(percent) ? 0 : percent;\n            this._markets[canonical].summary.ipercent_str = (isNaN(ipercent) ? 0 : ipercent) + \"%\";\n            this._markets[canonical].summary.ipercent = isNaN(ipercent) ? 0 : ipercent;\n            this._markets[canonical].summary.volume = volume;\n            this._markets[canonical].summary.amount = amount;\n            this._markets[canonical].summary.min_price = min_price;\n            this._markets[canonical].summary.max_price = max_price;\n            this._markets[canonical].summary.min_inverse = min_inverse;\n            this._markets[canonical].summary.max_inverse = max_inverse;\n\n            // if(canonical==\"acorn.tlos\")console.log(\"Summary final:\", this._markets[canonical].summary);\n            // if(canonical==\"acorn.tlos\")console.log(\"---------------------------------------------------\");\n            this.feed.setLoading(\"summary.\"+canonical, false);\n            this.feed.setLoading(\"summary.\"+inverse, false);\n            return this._markets[canonical].summary;\n        });\n\n        if (this._markets[canonical] && !force) {\n            result = this._markets[canonical].summary;\n        } else {\n            result = await aux;\n        }\n\n        this.setMarketSummary();\n        this.onMarketSummary.next(result);\n\n        return result;\n    }\n\n    async getAllTablesSumaries(): Promise<any> {\n        return this.waitOrderSummary.then(async _ => {\n            var promises = [];\n\n            for (var i in this._markets) {\n                if (i.indexOf(\".\") == -1) continue;\n                var p = this.getTableSummary(this._markets[i].comodity, this._markets[i].currency, true);\n                promises.push(p);\n            }\n\n            return Promise.all(promises).then(_ => {\n                this.updateTokensSummary();\n            });\n        })\n    }\n    \n\n    //\n    // --------------------------------------------------------------\n    // Aux functions\n    private auxProcessRowsToOrders(rows:any[]): Order[] {\n        var result: Order[] = [];\n        for (var i=0; i < rows.length; i++) {\n            var price = new AssetDEX(rows[i].price, this);\n            var inverse = new AssetDEX(rows[i].inverse, this);\n            var selling = new AssetDEX(rows[i].selling, this);\n            var total = new AssetDEX(rows[i].total, this);\n            var order:Order;\n\n            var scope = this.getScopeFor(price.token, inverse.token);\n            var canonical = this.canonicalScope(scope);\n            var reverse_scope = this.inverseScope(canonical);\n            \n\n            if (reverse_scope == scope) {\n                order = {\n                    id: rows[i].id,\n                    price: price,\n                    inverse: inverse,\n                    total: selling,\n                    deposit: selling,\n                    telos: total,\n                    owner: rows[i].owner\n                }\n            } else {\n                order = {\n                    id: rows[i].id,\n                    price: inverse,\n                    inverse: price,\n                    total: total,\n                    deposit: selling,\n                    telos: selling,\n                    owner: rows[i].owner\n                }\n            }\n            result.push(order);\n        }\n        return result;\n    }\n\n    private auxGetLabelForHour(hh:number): string {\n        var hours = [\n            \"h.zero\",\n            \"h.one\",\n            \"h.two\",\n            \"h.three\",\n            \"h.four\",\n            \"h.five\",\n            \"h.six\",\n            \"h.seven\",\n            \"h.eight\",\n            \"h.nine\",\n            \"h.ten\",\n            \"h.eleven\",\n            \"h.twelve\",\n            \"h.thirteen\",\n            \"h.fourteen\",\n            \"h.fifteen\",\n            \"h.sixteen\",\n            \"h.seventeen\",\n            \"h.eighteen\",\n            \"h.nineteen\",\n            \"h.twenty\",\n            \"h.twentyone\",\n            \"h.twentytwo\",\n            \"h.twentythree\"\n        ]\n        return hours[hh];\n    }\n\n    private auxAssertScope(scope:string): Market {\n        var comodity_sym = scope.split(\".\")[0].toUpperCase();\n        var currency_sym = scope.split(\".\")[1].toUpperCase();\n        var comodity = this.getTokenNow(comodity_sym);\n        var currency = this.getTokenNow(currency_sym);\n        var aux_asset_com = new AssetDEX(0, comodity);\n        var aux_asset_cur = new AssetDEX(0, currency);\n\n        var market_summary:MarketSummary = {\n            scope: scope,\n            price: aux_asset_cur,\n            price_24h_ago: aux_asset_cur,\n            inverse: aux_asset_com,\n            inverse_24h_ago: aux_asset_com,\n            max_inverse: aux_asset_com,\n            max_price: aux_asset_cur,\n            min_inverse: aux_asset_com,\n            min_price: aux_asset_cur,\n            records: [],\n            volume: aux_asset_cur,\n            amount: aux_asset_com,\n            percent: 0,\n            ipercent: 0,\n            percent_str: \"0%\",\n            ipercent_str: \"0%\",\n        }\n\n        return this._markets[scope] || {\n            scope: scope,\n            comodity: comodity,\n            currency: currency,\n            orders: { sell: [], buy: [] },\n            deals: 0,\n            history: [],\n            tx: {},\n            blocks: 0,\n            block: {},\n            blocklist: [],\n            blocklevels: [[]],\n            reverseblocks: [],\n            reverselevels: [[]],\n            summary: market_summary,\n            header: { \n                sell: {total:aux_asset_com, orders:0}, \n                buy: {total:aux_asset_cur, orders:0}\n            },\n        };        \n    }\n\n    private fetchDeposits(account): Promise<TableResult> {\n        return this.contract.getTable(\"deposits\", {scope:account}).then(result => {\n            return result;\n        });\n    }\n\n    private async fetchBalances(account): Promise<any> {\n        return this.waitTokensLoaded.then(async _ => {\n            var contracts = {};\n            var balances = [];\n            for (var i in this.tokens) {\n                if (this.tokens[i].offchain) continue;\n                contracts[this.tokens[i].contract] = true;\n            }\n            for (var contract in contracts) {\n                this.feed.setLoading(\"balances-\"+contract, true);\n            }            \n            for (var contract in contracts) {\n                var result = await this.contract.getTable(\"accounts\", {\n                    contract:contract,\n                    scope: account || this.current.name\n                });\n                for (var i in result.rows) {\n                    balances.push(new AssetDEX(result.rows[i].balance, this));\n                }\n                this.feed.setLoading(\"balances-\"+contract, false);\n            }\n            return balances;\n        });\n    }\n\n    private fetchOrders(params:TableParams): Promise<TableResult> {\n        return this.contract.getTable(\"sellorders\", params).then(result => {\n            return result;\n        });\n    }\n\n    private fetchOrderSummary(): Promise<TableResult> {\n        return this.contract.getTable(\"ordersummary\").then(result => {\n            return result;\n        });\n    }\n\n    private fetchBlockHistory(scope:string, page:number = 0, pagesize:number = 25): Promise<TableResult> {\n        var canonical:string = this.canonicalScope(scope);\n        var pages = this.getBlockHistoryTotalPagesFor(canonical, pagesize);\n        var id = page*pagesize;\n        // console.log(\"VapaeeDEX.fetchBlockHistory(\", scope, \",\",page,\",\",pagesize,\"): id:\", id, \"pages:\", pages);\n        if (page < pages) {\n            if (this._markets && this._markets[canonical] && this._markets[canonical].block[\"id-\" + id]) {\n                var result:TableResult = {more:false,rows:[]};\n                for (var i=0; i<pagesize; i++) {\n                    var id_i = id+i;\n                    var block = this._markets[canonical].block[\"id-\" + id_i];\n                    if (block) {\n                        result.rows.push(block);\n                    } else {\n                        break;\n                    }\n                }\n                if (result.rows.length == pagesize) {\n                    // we have the complete page in memory\n                    // console.log(\"VapaeeDEX.fetchHistory(\", scope, \",\",page,\",\",pagesize,\"): result:\", result.rows.map(({ id }) => id));\n                    return Promise.resolve(result);\n                }                \n            }\n        }\n\n        return this.contract.getTable(\"blockhistory\", {scope:canonical, limit:pagesize, lower_bound:\"\"+(page*pagesize)}).then(result => {\n            // console.log(\"**************\");\n            // console.log(\"block History crudo:\", result);\n            this._markets[canonical] = this.auxAssertScope(canonical);\n            this._markets[canonical].block = this._markets[canonical].block || {}; \n            // console.log(\"this._markets[scope].block:\", this._markets[scope].block);\n            for (var i=0; i < result.rows.length; i++) {\n                var block:HistoryBlock = {\n                    id: result.rows[i].id,\n                    hour: result.rows[i].hour,\n                    str: \"\",\n                    price: new AssetDEX(result.rows[i].price, this),\n                    inverse: new AssetDEX(result.rows[i].inverse, this),\n                    entrance: new AssetDEX(result.rows[i].entrance, this),\n                    max: new AssetDEX(result.rows[i].max, this),\n                    min: new AssetDEX(result.rows[i].min, this),\n                    volume: new AssetDEX(result.rows[i].volume, this),\n                    amount: new AssetDEX(result.rows[i].amount, this),\n                    date: new Date(result.rows[i].date)\n                }\n                block.str = JSON.stringify([block.max.str, block.entrance.str, block.price.str, block.min.str]);\n                this._markets[canonical].block[\"id-\" + block.id] = block;\n            }   \n            // console.log(\"block History final:\", this._markets[scope].block);\n            // console.log(\"-------------\");\n            return result;\n        });\n    }    \n\n    private fetchHistory(scope:string, page:number = 0, pagesize:number = 25): Promise<TableResult> {\n        var canonical:string = this.canonicalScope(scope);\n        var pages = this.getHistoryTotalPagesFor(canonical, pagesize);\n        var id = page*pagesize;\n        // console.log(\"VapaeeDEX.fetchHistory(\", scope, \",\",page,\",\",pagesize,\"): id:\", id, \"pages:\", pages);\n        if (page < pages) {\n            if (this._markets && this._markets[canonical] && this._markets[canonical].tx[\"id-\" + id]) {\n                var result:TableResult = {more:false,rows:[]};\n                for (var i=0; i<pagesize; i++) {\n                    var id_i = id+i;\n                    var trx = this._markets[canonical].tx[\"id-\" + id_i];\n                    if (trx) {\n                        result.rows.push(trx);\n                    } else {\n                        break;\n                    }\n                }\n                if (result.rows.length == pagesize) {\n                    // we have the complete page in memory\n                    // console.log(\"VapaeeDEX.fetchHistory(\", scope, \",\",page,\",\",pagesize,\"): result:\", result.rows.map(({ id }) => id));\n                    return Promise.resolve(result);\n                }                \n            }\n        }\n\n        return this.contract.getTable(\"history\", {scope:scope, limit:pagesize, lower_bound:\"\"+(page*pagesize)}).then(result => {\n\n            // console.log(\"**************\");\n            // console.log(\"History crudo:\", result);\n            \n            this._markets[canonical] = this.auxAssertScope(canonical);\n            this._markets[canonical].history = [];\n            this._markets[canonical].tx = this._markets[canonical].tx || {}; \n\n            // console.log(\"this.scopes[scope].tx:\", this.scopes[scope].tx);\n\n            for (var i=0; i < result.rows.length; i++) {\n                var transaction:HistoryTx = {\n                    id: result.rows[i].id,\n                    str: \"\",\n                    amount: new AssetDEX(result.rows[i].amount, this),\n                    payment: new AssetDEX(result.rows[i].payment, this),\n                    buyfee: new AssetDEX(result.rows[i].buyfee, this),\n                    sellfee: new AssetDEX(result.rows[i].sellfee, this),\n                    price: new AssetDEX(result.rows[i].price, this),\n                    inverse: new AssetDEX(result.rows[i].inverse, this),\n                    buyer: result.rows[i].buyer,\n                    seller: result.rows[i].seller,\n                    date: new Date(result.rows[i].date),\n                    isbuy: !!result.rows[i].isbuy\n                }\n                transaction.str = transaction.price.str + \" \" + transaction.amount.str;\n                this._markets[canonical].tx[\"id-\" + transaction.id] = transaction;\n            }\n\n            for (var j in this._markets[canonical].tx) {\n                this._markets[canonical].history.push(this._markets[canonical].tx[j]);\n            }\n\n            this._markets[canonical].history.sort(function(a:HistoryTx, b:HistoryTx){\n                if(a.date < b.date) return 1;\n                if(a.date > b.date) return -1;\n                if(a.id < b.id) return 1;\n                if(a.id > b.id) return -1;\n            });            \n\n            // console.log(\"History final:\", this.scopes[scope].history);\n            // console.log(\"-------------\");\n            return result;\n        });\n    }\n    \n    private async fetchActivity(page:number = 0, pagesize:number = 25) {\n        var id = page*pagesize+1;\n        // console.log(\"VapaeeDEX.fetchActivity(\", page,\",\",pagesize,\"): id:\", id);\n        \n        if (this.activity.events[\"id-\" + id]) {\n            var pageEvents = [];\n            for (var i=0; i<pagesize; i++) {\n                var id_i = id+i;\n                var event = this.activity.events[\"id-\" + id_i];\n                if (!event) {\n                    break;\n                }\n            }\n            if (pageEvents.length == pagesize) {\n                return;\n            }                \n        }        \n\n        return this.contract.getTable(\"events\", {limit:pagesize, lower_bound:\"\"+id}).then(result => {\n            // console.log(\"**************\");\n            // console.log(\"Activity crudo:\", result);\n            var list:EventLog[] = [];\n\n            for (var i=0; i < result.rows.length; i++) {\n                var id = result.rows[i].id;\n                var event:EventLog = <EventLog>result.rows[i];\n                if (!this.activity.events[\"id-\" + id]) {\n                    this.activity.events[\"id-\" + id] = event;\n                    list.push(event);\n                    // console.log(\"**************>>>>>\", id);\n                }\n            }\n\n            this.activity.list = [].concat(this.activity.list).concat(list);\n            this.activity.list.sort(function(a:EventLog, b:EventLog){\n                if(a.date < b.date) return 1;\n                if(a.date > b.date) return -1;\n                if(a.id < b.id) return 1;\n                if(a.id > b.id) return -1;\n            });\n\n        });\n\n    }\n\n    private fetchUserOrders(user:string): Promise<TableResult> {\n        return this.contract.getTable(\"userorders\", {scope:user, limit:200}).then(result => {\n            return result;\n        });\n    }\n    \n    private fetchSummary(scope): Promise<TableResult> {\n        return this.contract.getTable(\"tablesummary\", {scope:scope}).then(result => {\n            return result;\n        });\n    }\n\n    private fetchTokenStats(token): Promise<TableResult> {\n        this.feed.setLoading(\"token-stat-\"+token.symbol, true);\n        return this.contract.getTable(\"stat\", {contract:token.contract, scope:token.symbol}).then(result => {\n            token.stat = result.rows[0];\n            if (token.stat.issuers && token.stat.issuers[0] == \"everyone\") {\n                token.fake = true;\n            }\n            this.feed.setLoading(\"token-stat-\"+token.symbol, false);\n            return token;\n        });\n    }\n\n    private fetchTokensStats(extended: boolean = true) {\n        console.log(\"Vapaee.fetchTokens()\");\n        this.feed.setLoading(\"token-stats\", true);\n        return this.waitTokensLoaded.then(_ => {\n\n            var priomises = [];\n            for (var i in this.tokens) {\n                if (this.tokens[i].offchain) continue;\n                priomises.push(this.fetchTokenStats(this.tokens[i]));\n            }\n\n            return Promise.all<any>(priomises).then(result => {\n                this.setTokenStats(this.tokens);\n                this.feed.setLoading(\"token-stats\", false);\n                return this.tokens;\n            });            \n        });\n\n    }\n\n    private updateTokensMarkets() {\n        return Promise.all([\n            this.waitTokensLoaded,\n            this.waitMarketSummary\n        ]).then(_ => {\n            // a cada token le asigno un price que sale de verificar su price en el mercado principal XXX/TLOS\n            for (var i in this.tokens) {\n                if (this.tokens[i].offchain) continue; // discard tokens that are not on-chain\n                \n                var token = this.tokens[i];\n                var quantity:AssetDEX = new AssetDEX(0, token);\n                token.markets = [];\n\n                for (var scope in this._markets) {\n                    if (scope.indexOf(\".\") == -1) continue;\n                    var table:Market = this._markets[scope];\n\n                    if (table.currency.symbol == token.symbol) {\n                        table = this.market(this.inverseScope(scope));\n                    }\n\n                    if (table.comodity.symbol == token.symbol) {\n                        token.markets.push(table);\n                    }\n                }\n            }\n\n            token.markets.sort((a:Market, b:Market) => {\n                // push offchain tokens to the end of the token list\n                var a_vol = a.summary ? a.summary.volume : new AssetDEX();\n                var b_vol = b.summary ? b.summary.volume : new AssetDEX();\n    \n                if(a_vol.amount.isGreaterThan(b_vol.amount)) return -1;\n                if(a_vol.amount.isLessThan(b_vol.amount)) return 1;\n\n                return 0;\n            });\n\n        });   \n    }\n    \n    private updateTokensSummary(times: number = 20) {\n        if (times > 1) {\n            for (var i = times; i>0; i--) this.updateTokensSummary(1);\n            return;\n        } \n        return Promise.all([\n            this.waitTokensLoaded,\n            this.waitMarketSummary\n        ]).then(_ => {\n            // console.log(\"(ini) ---------------------------------------------\");\n            // console.log(\"Vapaee.updateTokensSummary()\"); \n\n            // mapping of how much (amount of) tokens have been traded agregated in all markets\n            var amount_map:{[key:string]:AssetDEX} = {};\n\n            // a cada token le asigno un price que sale de verificar su price en el mercado principal XXX/TLOS\n            for (var i in this.tokens) {\n                if (this.tokens[i].offchain) continue; // discard tokens that are not on-chain\n                \n                var token = this.tokens[i];\n                var quantity:AssetDEX = new AssetDEX(0, token);\n\n                for (var j in this._markets) {\n                    if (j.indexOf(\".\") == -1) continue;\n                    var table:Market = this._markets[j];\n                    \n                    if (table.comodity.symbol == token.symbol) {\n                        quantity = quantity.plus(table.summary.amount);\n                    }\n                    if (table.currency.symbol == token.symbol) {\n                        quantity = quantity.plus(table.summary.volume);\n                    }\n\n                    if (table.comodity.symbol == token.symbol && table.currency.symbol == this.telos.symbol) {\n                        if (token.summary && token.summary.price.amount.toNumber() == 0) {\n                            delete token.summary;\n                        }\n                        \n                        token.summary = token.summary || {\n                            price: table.summary.price.clone(),\n                            price_24h_ago: table.summary.price_24h_ago.clone(),\n                            volume: table.summary.volume.clone(),\n                            percent: table.summary.percent,\n                            percent_str: table.summary.percent_str,\n                        }\n                    }\n                }\n\n                amount_map[token.symbol] = quantity;\n            }\n\n            this.telos.summary = {\n                price: new AssetDEX(1, this.telos),\n                price_24h_ago: new AssetDEX(1, this.telos),\n                volume: new AssetDEX(-1, this.telos),\n                percent: 0,\n                percent_str: \"0%\"\n            }\n\n            // console.log(\"amount_map: \", amount_map);\n\n\n            \n            var ONE = new BigNumber(1);\n\n            for (var i in this.tokens) {\n                var token = this.tokens[i];\n                if (token.offchain) continue;\n                if (!token.summary) continue;\n                if (token.symbol == this.telos.symbol) continue;\n                // console.log(\"TOKEN: -------- \", token.symbol, token.summary.price.str, token.summary.price_24h_ago.str );\n                \n                var volume = new AssetDEX(0, this.telos);\n                var price = new AssetDEX(0, this.telos);\n                var price_init = new AssetDEX(0, this.telos);\n                var total_quantity = amount_map[token.symbol];\n\n                if (total_quantity.toNumber() == 0) continue;\n\n                // if (token.symbol == \"ACORN\") console.log(\"TOKEN: -------- \", token.symbol, token.summary.price.str, token.summary.price_24h_ago.str );\n                for (var j in this._markets) {\n                    if (j.indexOf(\".\") == -1) continue;\n                    var table = this._markets[j];\n                    var currency_price = table.currency.symbol == \"TLOS\" ? ONE : table.currency.summary.price.amount;\n                    var currency_price_24h_ago = table.currency.symbol == \"TLOS\" ? ONE : table.currency.summary.price_24h_ago.amount;\n                    if (table.comodity.symbol == token.symbol || table.currency.symbol == token.symbol) {\n\n                        // how much quantity is involved in this market\n                        var quantity = new AssetDEX();\n                        if (table.comodity.symbol == token.symbol) {\n                            quantity = table.summary.amount.clone();\n                        } else if (table.currency.symbol == token.symbol) {\n                            quantity = table.summary.volume.clone();\n                        }\n\n                        // calculate the influence-weight of this market over the token\n                        var weight = quantity.amount.dividedBy(total_quantity.amount);\n\n                        // calculate the price of this token in this market (expressed in TLOS)\n                        var price_amount;\n                        if (table.comodity.symbol == token.symbol) {\n                            price_amount = table.summary.price.amount.multipliedBy(table.currency.summary.price.amount);\n                        } else if (table.currency.symbol == token.symbol) {\n                            price_amount = table.summary.inverse.amount.multipliedBy(table.comodity.summary.price.amount);\n                        }\n\n                        // calculate this market token price multiplied by the wight of this market (ponderated price)\n                        var price_i = new AssetDEX(price_amount.multipliedBy(weight), this.telos);\n\n                        // calculate the price of this token in this market 24h ago (expressed in TLOS)\n                        var price_init_amount;\n                        if (table.comodity.symbol == token.symbol) {\n                            price_init_amount = table.summary.price_24h_ago.amount.multipliedBy(table.currency.summary.price_24h_ago.amount);\n                        } else if (table.currency.symbol == token.symbol) {\n                            price_init_amount = table.summary.inverse_24h_ago.amount.multipliedBy(table.comodity.summary.price_24h_ago.amount);\n                        }\n\n                        // calculate this market token price 24h ago multiplied by the weight of this market (ponderated init_price)\n                        var price_init_i = new AssetDEX(price_init_amount.multipliedBy(weight), this.telos);\n\n                        // how much volume is involved in this market\n                        var volume_i;\n                        if (table.comodity.symbol == token.symbol) {\n                            volume_i = table.summary.volume.clone();\n                        } else if (table.currency.symbol == token.symbol) {\n                            volume_i = table.summary.amount.clone();\n                        }\n\n                        // if this market does not mesure the volume in TLOS, then convert quantity to TLOS by multiplied By volume's token price\n                        if (volume_i.token.symbol != this.telos.symbol) {\n                            volume_i = new AssetDEX(quantity.amount.multipliedBy(quantity.token.summary.price.amount), this.telos);\n                        }\n                        \n\n                        price = price.plus(new AssetDEX(price_i, this.telos));\n                        price_init = price_init.plus(new AssetDEX(price_init_i, this.telos));\n                        volume = volume.plus(new AssetDEX(volume_i, this.telos));\n\n                        // console.log(\"-i\",i, table);\n                        // console.log(\"- weight:\", weight.toNumber());\n                        // console.log(\"- table.summary.price.str\", table.summary.price.str);\n                        // console.log(\"- table.summary.price.amount.multipliedBy(weight).toNumber()\", table.summary.price.amount.multipliedBy(weight).toNumber());\n                        // console.log(\"- currency_price.toNumber()\", currency_price.toNumber());\n                        // console.log(\"- price_i:\", price_i.toNumber());\n                        // console.log(\"- price ->\", price.str);\n                        // console.log(\"- currency_price_24h_ago:\", currency_price_24h_ago.toNumber());\n                        // console.log(\"- table.summary.price_24h_ago:\", table.summary.price_24h_ago.str);\n                        // console.log(\"- price_init_i:\", price_init_i.toNumber());\n                        // console.log(\"- price_init ->\", price_init.str);\n                        \n\n                    }\n                }\n\n                var diff = price.minus(price_init);\n                var ratio:number = 0;\n                if (price_init.amount.toNumber() != 0) {\n                    ratio = diff.amount.dividedBy(price_init.amount).toNumber();\n                }\n                var percent = Math.floor(ratio * 10000) / 100;\n                var percent_str = (isNaN(percent) ? 0 : percent) + \"%\";\n\n                // console.log(\"price\", price.str);\n                // console.log(\"price_24h_ago\", price_init.str);\n                // console.log(\"volume\", volume.str);\n                // console.log(\"percent\", percent);\n                // console.log(\"percent_str\", percent_str);\n                // console.log(\"ratio\", ratio);\n                // console.log(\"diff\", diff.str);\n\n                token.summary.price = price;\n                token.summary.price_24h_ago = price_init;\n                token.summary.percent = percent;\n                token.summary.percent_str = percent_str;\n                token.summary.volume = volume;\n\n            }\n            \n            // console.log(\"(end) ---------------------------------------------\");\n            this.resortTokens();\n            this.setTokenSummary();\n        });        \n    }\n\n    private fetchTokens(extended: boolean = true) {\n        console.log(\"Vapaee.fetchTokens()\");\n\n        return this.contract.getTable(\"tokens\").then(result => {\n            var data = {\n                tokens: <TokenDEX[]>result.rows\n            }\n\n            for (var i in data.tokens) {\n                data.tokens[i].scope = data.tokens[i].symbol.toLowerCase() + \".tlos\";\n                if (data.tokens[i].symbol == \"TLOS\") {\n                    this.telos = data.tokens[i];\n                }\n            }\n\n            return data;\n        });\n    }\n\n    private resortTokens() {\n        // console.log(\"(ini) ------------------------------------------------------------\");\n        // console.log(\"resortTokens()\");\n        // console.log(\"this.tokens[0]\", this.tokens[0].summary);\n        this.tokens.sort((a:TokenDEX, b:TokenDEX) => {\n            // push offchain tokens to the end of the token list\n            if (a.offchain) return 1;\n            if (b.offchain) return -1;\n\n            // console.log(\" --- \", a.symbol, \"-\", b.symbol, \" --- \");\n            // console.log(\"     \", a.summary ? a.summary.volume.str : \"0\", \"-\", b.summary ? b.summary.volume.str : \"0\");\n            \n            var a_vol = a.summary ? a.summary.volume : new AssetDEX();\n            var b_vol = b.summary ? b.summary.volume : new AssetDEX();\n\n            if(a_vol.amount.isGreaterThan(b_vol.amount)) return -1;\n            if(a_vol.amount.isLessThan(b_vol.amount)) return 1;\n\n            if(a.appname < b.appname) return -1;\n            if(a.appname > b.appname) return 1;\n            return 0;\n        }); \n\n        // console.log(\"resortTokens()\", this.tokens);\n        // console.log(\"(end) ------------------------------------------------------------\");\n\n        this.onTokensReady.next(this.tokens);        \n    }\n\n\n}\n\n\n\n","import { NgModule } from '@angular/core';\nimport { VapaeeDEX } from './dex.service'\n\n@NgModule({\n  imports: [\n  ],\n  declarations: [],\n  providers: [VapaeeDEX],\n  exports: []\n})\nexport class VapaeeDexModule { }\n"]}