{"version":3,"sources":["null","ng://@vapaee/dex/lib/token-dex.class.ts","ng://@vapaee/dex/lib/asset-dex.class.ts","ng://@vapaee/dex/lib/dex.service.ts","ng://@vapaee/dex/lib/dex.module.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","__generator","body","f","y","t","g","_","label","sent","trys","ops","verb","throw","return","Symbol","iterator","n","v","op","TypeError","call","pop","length","push","TokenDEX","_super","obj","_this","symbol","precision","contract","assign","toString","tslib_1.__extends","Token","AssetDEX","a","amount","token","parseDex","clone","plus","console","assert","str","minus","text","dex","sym","split","getTokenNow","amount_str","BigNumber","decimals","valueToString","toUpperCase","inverse","dividedBy","Asset","VapaeeDEX","scatter","cookies","datePipe","timer","Subject","setOrderSummary","setTokenStats","setMarketSummary","setTokenSummary","setTokensLoaded","_markets","_reverse","activity","total","events","list","current","default","contract_name","vapaeetokens","getSmartContract","feed","Feedback","onLogggedStateChange","subscribe","onLoggedChange","bind","updateLogState","fetchTokens","data","carbon","i","tokens","tdata","telos","currencies","appname","logo","logolg","scope","verified","website","zero_telos","fetchTokensStats","getOrderSummary","getAllTablesSumaries","onMarketSummary","summary","clearTimeout","setTimeout","updateTokensSummary","updateTokensMarkets","defineProperty","logged","account","name","login","setLoading","log","loading","logout","catch","onLogout","resetCurrentAccount","onLoggedAccountChange","delete","last_logged","onLogin","getDeposits","getBalances","getUserOrders","set","profile","_a","getAccountData","_b","error","balances","userorders","onCurrentAccountChange","updateCurrentUser","timer2","loginState","waitConnected","timer1","setInterval","clearInterval","queryAccountData","createOrder","type","price","excecute","owner","updateTrade","cancelOrder","comodity","currency","orders","deposit","quantity","setError","toLowerCase","from","to","memo","JSON","stringify","withdraw","addOffChainToken","offchain","waitTokensLoaded","stat","hasScopes","market","reverse","inverseScope","table","canonical","canonicalScope","reverse_scope","createReverseTableFor","marketFor","getScopeFor","tableFor","inverse_history","history","hTx","id","payment","buyer","seller","buyfee","sellfee","date","isbuy","inverse_orders","buy","sell","row_orders","row_order","row","j","newrow","owners","sum","sumtelos","block","blocklist","reverseblocks","blocklevels","reverselevels","blocks","deals","direct","header","price_24h_ago","inverse_24h_ago","max_inverse","max_price","min_inverse","min_price","records","volume","percent","ipercent","percent_str","ipercent_str","tx","parts","isCanonical","getBalance","getSomeFreeFakeTokens","_token","waitTokenStats","random","Math","fake","toNumber","monto","floor","getToken","deposits","fetchDeposits","rows","fetchBalances","_balances","getThisSellOrders","ids","gotit","fetchOrders","limit","lower_bound","res","_c","concat","fetchUserOrders","map","auxProcessRowsToOrders","updateActivity","pagesize","activityPagesize","getActivityTotalPages","pages","all","fetchActivity","loadMoreActivity","first","page","updateUser","chrono_key","startChrono","getTransactionHistory","setMarck","getBlockHistory","getSellOrders","getBuyOrders","getMarketSummary","r","resortTokens","resortTopMarkets","onTradeUpdated","getBlockHistoryTotalPagesFor","mod","getHistoryTotalPagesFor","getTable","params","parseInt","force","aux","waitOrderSummary","fetchHistory","onHistoryChange","auxHourToLabel","hour","Date","getHours","transform","promises","promise","fetchBlockHistory","now","getTime","last_block","ordered_blocks","sort","dif","label_i","max","entrance","min","levels","reverses","newlevel","newreverse","merged","v_1","v_2","x","index_position","key_type","auxAssertScope","isLessThan","isGreaterThan","order","eq","order_row","fetchOrderSummary","tables","supply","demand","ascurrency","token_a","token_b","auxGetComodityToken","auxGetCurrencyToken","ZERO_COMODITY","ZERO_CURRENCY","fetchSummary","now_sec","now_hour","start_hour","crude","last_hh","hh","last_24h","price_asset","inverse_asset","inverse_fst","price_fst","current_date","nuevo","auxGetLabelForHour","toISOString","vol","isEqualTo","amo","last_price","diff","ratio","last_inverse","isNaN","indexOf","selling","currency_sym","comodity_sym","aux_asset_com","aux_asset_cur","market_summary","contracts","balance","more","id_i","trx","transaction","pageEvents","event","user","fetchTokenStats","issuers","extended","priomises","waitMarketSummary","markets","a_amount","b_amount","times","amount_map","ONE","price_init","total_quantity","price_amount","weight","multipliedBy","price_init_amount","price_i","volume_i","price_init_i","a_vol","b_vol","onTokensReady","waitTokenSummary","topmarkets","onTopMarketsReady","Injectable","args","providedIn","VapaeeScatter","CookieService","DatePipe","VapaeeDexModule","NgModule","imports","declarations","providers","exports"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Token } from '@vapaee/scatter';\nimport { AssetDEX } from \"./asset-dex.class\";\nimport { Market } from './types-dex';\n\n/*\nexport interface Token {\n    symbol: string,\n    precision?: number,\n    contract?: string,\n    appname?: string,\n    website?: string,\n    logo?: string,\n    logolg?: string,\n    verified?: boolean,\n    fake?: boolean,\n    offchain?: boolean,\n    scope?: string,\n    stat?: {\n        supply: string,\n        max_supply: string,\n        issuer?: string,\n        owner?: string,\n        issuers?: string[]\n    },\n    summary?: {\n        volume: Asset,\n        price: Asset,\n        price_24h_ago: Asset,\n        percent?:number,\n        percent_str?:string\n    }\n\n}\n*/\nexport class TokenDEX extends Token {\n    // private _str: string;\n    // private _symbol: string;\n    // private _precision: number;\n    // private _contract: string;\n\n    public appname: string;\n    public website: string;\n    public logo: string;\n    public logolg: string;\n    public verified: boolean;\n    public fake: boolean;\n    public offchain: boolean;\n    public scope: string;\n\n    stat?: {\n        supply: string,\n        max_supply: string,\n        issuer?: string,\n        owner?: string,\n        issuers?: string[]\n    };\n\n    summary?: {\n        volume: AssetDEX,\n        price: AssetDEX,\n        price_24h_ago: AssetDEX,\n        percent?:number,\n        percent_str?:string\n    }\n    \n    markets: Market[];\n\n    constructor(obj:any = null) {\n        super(obj);\n        if (typeof obj == \"object\") {\n            delete obj.symbol;\n            delete obj.precision;\n            delete obj.contract;\n            Object.assign(this, obj);\n        }\n        this.toString();\n    }\n\n\n}","import BigNumber from 'bignumber.js';\nimport { TokenDEX } from './token-dex.class';\nimport { Asset } from '@vapaee/scatter';\n\nexport interface IVapaeeDEX {\n    getTokenNow(symbol:string): TokenDEX;\n}\n\nexport class AssetDEX extends Asset {\n    amount:BigNumber;\n    token:TokenDEX;\n    \n    constructor(a: any = null, b: any = null) {\n        super(a,b);\n\n        if (a instanceof AssetDEX) {\n            this.amount = a.amount;\n            this.token = b;\n            return;\n        }\n\n        if (!!b && b['getTokenNow']) {\n            this.parseDex(a,b);\n        }\n\n    }\n\n    clone(): AssetDEX {\n        return new AssetDEX(this.amount, this.token);\n    }\n\n    plus(b:AssetDEX) {\n        console.assert(!!b, \"ERROR: b is not an Asset\", b, this.str);\n        console.assert(b.token.symbol == this.token.symbol, \"ERROR: trying to sum assets with different tokens: \" + this.str + \" and \" + b.str);\n        var amount = this.amount.plus(b.amount);\n        return new AssetDEX(amount, this.token);\n    }\n\n    minus(b:AssetDEX) {\n        console.assert(!!b, \"ERROR: b is not an Asset\", b, this.str);\n        console.assert(b.token.symbol == this.token.symbol, \"ERROR: trying to substract assets with different tokens: \" + this.str + \" and \" + b.str);\n        var amount = this.amount.minus(b.amount);\n        return new AssetDEX(amount, this.token);\n    }    \n\n    parseDex(text: string, dex: IVapaeeDEX) {\n        if (text == \"\") return;\n        var sym = text.split(\" \")[1];\n        this.token = dex.getTokenNow(sym);\n        var amount_str = text.split(\" \")[0];\n        this.amount = new BigNumber(amount_str);\n    }\n\n    \n    toString(decimals:number = -1): string {\n        if (!this.token) return \"0.0000\";\n        return this.valueToString(decimals) + \" \" + this.token.symbol.toUpperCase();\n    }\n\n    inverse(token: TokenDEX): AssetDEX {\n        var result = new BigNumber(1).dividedBy(this.amount);\n        var asset =  new AssetDEX(result, token);\n        return asset;\n    }\n}","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport BigNumber from \"bignumber.js\";\nimport { CookieService } from 'ngx-cookie-service';\nimport { DatePipe } from '@angular/common';\nimport { TokenDEX } from './token-dex.class';\nimport { AssetDEX } from './asset-dex.class';\nimport { Feedback } from '@vapaee/feedback';\nimport { VapaeeScatter, Account, AccountData, SmartContract, TableResult, TableParams } from '@vapaee/scatter';\nimport { MarketMap, UserOrdersMap, MarketSummary, EventLog, Market, HistoryTx, TokenOrders, Order, UserOrders, OrderRow, HistoryBlock } from './types-dex';\n\n\n@Injectable({\n    providedIn: \"root\"\n})\nexport class VapaeeDEX {\n\n    public loginState: string;\n    /*\n    public loginState: string;\n    - 'no-scatter': Scatter no detected\n    - 'no-logged': Scatter detected but user is not logged\n    - 'account-ok': user logger with scatter\n    */\n    private _markets: MarketMap;\n    private _reverse: MarketMap;\n    public topmarkets: Market[];\n\n    public zero_telos: AssetDEX;\n    public telos: TokenDEX;\n    public tokens: TokenDEX[];\n    public currencies: TokenDEX[];\n    public contract: SmartContract;\n    public feed: Feedback;\n    public current: Account;\n    public last_logged: string;\n    public contract_name: string;   \n    public deposits: AssetDEX[];\n    public balances: AssetDEX[];\n    public userorders: UserOrdersMap;\n    public onLoggedAccountChange:Subject<string> = new Subject();\n    public onCurrentAccountChange:Subject<string> = new Subject();\n    public onHistoryChange:Subject<string> = new Subject();\n    public onMarketSummary:Subject<MarketSummary> = new Subject();\n    // public onBlocklistChange:Subject<any[][]> = new Subject();\n    public onTokensReady:Subject<TokenDEX[]> = new Subject();\n    public onTopMarketsReady:Subject<Market[]> = new Subject();\n    public onTradeUpdated:Subject<any> = new Subject();\n    vapaeetokens:string = \"vapaeetokens\";\n\n    activityPagesize:number = 10;\n    \n    activity:{\n        total:number;\n        events:{[id:string]:EventLog};\n        list:EventLog[];\n    };\n    \n    private setOrderSummary: Function;\n    public waitOrderSummary: Promise<any> = new Promise((resolve) => {\n        this.setOrderSummary = resolve;\n    });\n\n    private setTokenStats: Function;\n    public waitTokenStats: Promise<any> = new Promise((resolve) => {\n        this.setTokenStats = resolve;\n    });\n\n    private setMarketSummary: Function;\n    public waitMarketSummary: Promise<any> = new Promise((resolve) => {\n        this.setMarketSummary = resolve;\n    });\n\n    private setTokenSummary: Function;\n    public waitTokenSummary: Promise<any> = new Promise((resolve) => {\n        this.setTokenSummary = resolve;\n    });\n\n    private setTokensLoaded: Function;\n    public waitTokensLoaded: Promise<any> = new Promise((resolve) => {\n        this.setTokensLoaded = resolve;\n    });\n    constructor(\n        private scatter: VapaeeScatter,\n        private cookies: CookieService,\n        private datePipe: DatePipe\n    ) {\n        this._markets = {};\n        this._reverse = {};\n        this.activity = {total:0, events:{}, list:[]};\n        this.current = this.default;\n        this.contract_name = this.vapaeetokens;\n        this.contract = this.scatter.getSmartContract(this.contract_name);\n        this.feed = new Feedback();\n        this.scatter.onLogggedStateChange.subscribe(this.onLoggedChange.bind(this));\n        this.updateLogState();\n        this.fetchTokens().then(data => {\n            this.tokens = [];\n            let carbon;\n            for (let i in data.tokens) {\n                let tdata = data.tokens[i];\n                let token = new TokenDEX(tdata);\n                this.tokens.push(token);\n                if (token.symbol == \"TLOS\") {\n                    this.telos = token;\n                }\n                if (token.symbol == \"CUSD\") {\n                    carbon = token;\n                }                \n            }\n\n            // hardoded temporary inserted tokens ------------------------------\n            /*\n            let carbon = new TokenDEX({\n                appname: \"Carbon\",\n                contract: \"stablecarbon\",\n                logo: \"/assets/logos/carbon.svg\",\n                logolg: \"/assets/logos/carbon.svg\",\n                precision: 2,\n                scope: \"cusd.tlos\",\n                symbol: \"CUSD\",\n                verified: false,\n                website: \"https://www.carbon.money\"\n            });\n            this.tokens.push(carbon);\n            */\n\n            // TODO: make this dynamic and not hardcoded ----------------\n            this.currencies = [ this.telos, carbon ];\n            // ----------------------------------------------------------\n\n            \n            this.tokens.push(new TokenDEX({\n                appname: \"Viitasphere\",\n                contract: \"viitasphere1\",\n                logo: \"/assets/logos/viitasphere.png\",\n                logolg: \"/assets/logos/viitasphere-lg.png\",\n                precision: 4,\n                scope: \"viitct.tlos\",\n                symbol: \"VIITA\",\n                verified: false,\n                website: \"https://viitasphere.com\"\n            }));\n            this.tokens.push(new TokenDEX({\n                appname: \"Viitasphere\",\n                contract: \"viitasphere1\",\n                logo: \"/assets/logos/viitasphere.png\",\n                logolg: \"/assets/logos/viitasphere-lg.png\",\n                precision: 0,\n                scope: \"viitct.tlos\",\n                symbol: \"VIICT\",\n                verified: false,\n                website: \"https://viitasphere.com\"\n            }));\n            this.zero_telos = new AssetDEX(\"0.0000 TLOS\", this);\n            this.setTokensLoaded();\n            this.fetchTokensStats();\n            this.getOrderSummary();\n            this.getAllTablesSumaries();\n        });\n\n        // this.waitTokensLoaded.then(_ => {\n        // })\n\n\n        var timer;\n        this.onMarketSummary.subscribe(summary => {\n            clearTimeout(timer);\n            timer = setTimeout(_ => {\n                this.updateTokensSummary();\n                this.updateTokensMarkets();\n            }, 100);\n        });\n    }\n\n    // getters -------------------------------------------------------------\n    get default(): Account {\n        return this.scatter.default;\n    }\n\n    get logged() {\n        if (this.scatter.logged && !this.scatter.account) {\n            /*\n            console.error(\"WARNING!!!\");\n            console.log(this.scatter);\n            console.log(this.scatter.username);\n            console.error(\"*******************\");\n            */\n        }\n        return this.scatter.logged ?\n            (this.scatter.account ? this.scatter.account.name : this.scatter.default.name) :\n            null;\n    }\n\n    get account() {\n        return this.scatter.logged ? \n        this.scatter.account :\n        this.scatter.default;\n    }\n\n    // -- User Log State ---------------------------------------------------\n    login() {\n        this.feed.setLoading(\"login\", true);\n        this.feed.setLoading(\"log-state\", true);\n        console.log(\"VapaeeDEX.login() this.feed.loading('log-state')\", this.feed.loading('log-state'));\n        this.logout();\n        this.updateLogState();\n        console.log(\"VapaeeDEX.login() this.feed.loading('log-state')\", this.feed.loading('log-state'));\n        this.feed.setLoading(\"logout\", false);\n        return this.scatter.login().then(() => {\n            this.updateLogState();\n            this.feed.setLoading(\"login\", false);\n        }).catch(e => {\n            this.feed.setLoading(\"login\", false);\n            throw e;\n        });\n    }\n\n    logout() {\n        this.feed.setLoading(\"logout\", true);\n        this.scatter.logout();\n    }\n\n    onLogout() {\n        this.feed.setLoading(\"logout\", false);\n        console.log(\"VapaeeDEX.onLogout()\");\n        this.resetCurrentAccount(this.default.name);\n        this.updateLogState();\n        this.onLoggedAccountChange.next(this.logged);\n        this.cookies.delete(\"login\");\n        setTimeout(_  => { this.last_logged = this.logged; }, 400);\n    }\n    \n    onLogin(name:string) {\n        console.log(\"VapaeeDEX.onLogin()\", name);\n        this.resetCurrentAccount(name);\n        this.getDeposits();\n        this.getBalances();\n        this.updateLogState();\n        this.getUserOrders();\n        this.onLoggedAccountChange.next(this.logged);\n        this.last_logged = this.logged;\n        this.cookies.set(\"login\", this.logged);\n    }\n\n    onLoggedChange() {\n        console.log(\"VapaeeDEX.onLoggedChange()\");\n        if (this.scatter.logged) {\n            this.onLogin(this.scatter.account.name);\n        } else {\n            this.onLogout();\n        }\n    }\n\n    async resetCurrentAccount(profile:string) {\n        console.log(\"VapaeeDEX.resetCurrentAccount()\", this.current.name, \"->\", profile);\n        if (this.current.name != profile && (this.current.name == this.last_logged || profile != \"guest\")) {\n            this.feed.setLoading(\"account\", true);\n            this.current = this.default;\n            this.current.name = profile;\n            if (profile != \"guest\") {\n                this.current.data = await this.getAccountData(this.current.name);\n            } else {\n                console.error(\"------------------------------------------\");\n                console.error(\"------------------------------------------\");\n                console.error(\"WARNING!!! current is guest\", [profile, this.account, this.current]);\n                console.error(\"------------------------------------------\");\n                console.error(\"------------------------------------------\");\n            }\n            // this.scopes = {};\n            this.balances = [];\n            this.userorders = {};            \n            // console.log(\"this.onCurrentAccountChange.next(this.current.name) !!!!!!\");\n            this.onCurrentAccountChange.next(this.current.name);\n            this.updateCurrentUser();\n            this.feed.setLoading(\"account\", false);\n        }       \n    }\n\n    private updateLogState() {\n        this.loginState = \"no-scatter\";\n        this.feed.setLoading(\"log-state\", true);\n        console.log(\"VapaeeDEX.updateLogState() \", this.loginState, this.feed.loading(\"log-state\"));\n        this.scatter.waitConnected.then(() => {\n            this.loginState = \"no-logged\";\n            // console.log(\"VapaeeDEX.updateLogState()   \", this.loginState);\n            if (this.scatter.logged) {\n                this.loginState = \"account-ok\";\n                // console.log(\"VapaeeDEX.updateLogState()     \", this.loginState);\n            }\n            this.feed.setLoading(\"log-state\", false);\n            console.log(\"VapaeeDEX.updateLogState() \", this.loginState, this.feed.loading(\"log-state\"));\n        });\n\n        var timer2;\n        var timer1 = setInterval(_ => {\n            if (!this.scatter.feed.loading(\"connect\")) {\n                this.feed.setLoading(\"log-state\", false);\n                clearInterval(timer1);\n                clearInterval(timer2);\n            }\n        }, 200);\n\n        timer2 = setTimeout(_ => {\n            clearInterval(timer1);\n            this.feed.setLoading(\"log-state\", false);\n        }, 6000);\n        \n    }\n\n    private async getAccountData(name: string): Promise<AccountData>  {\n        return this.scatter.queryAccountData(name).catch(async _ => {\n            return this.default.data;\n        });\n    }\n\n    // Actions --------------------------------------------------------------\n    createOrder(type:string, amount:AssetDEX, price:AssetDEX) {\n        // \"alice\", \"buy\", \"2.50000000 CNT\", \"0.40000000 TLOS\"\n        // name owner, name type, const asset & total, const asset & price\n        this.feed.setLoading(\"order-\"+type, true);\n        return this.contract.excecute(\"order\", {\n            owner:  this.scatter.account.name,\n            type: type,\n            total: amount.toString(8),\n            price: price.toString(8)\n        }).then(async result => {\n            this.updateTrade(amount.token, price.token);\n            this.feed.setLoading(\"order-\"+type, false);\n            return result;\n        }).catch(e => {\n            this.feed.setLoading(\"order-\"+type, false);\n            console.error(e);\n            throw e;\n        });\n    }\n\n    cancelOrder(type:string, comodity:TokenDEX, currency:TokenDEX, orders:number[]) {\n        // '[\"alice\", \"buy\", \"CNT\", \"TLOS\", [1,0]]'\n        // name owner, name type, const asset & total, const asset & price\n        this.feed.setLoading(\"cancel-\"+type, true);\n        for (var i in orders) { this.feed.setLoading(\"cancel-\"+type+\"-\"+orders[i], true); }\n        return this.contract.excecute(\"cancel\", {\n            owner:  this.scatter.account.name,\n            type: type,\n            comodity: comodity.symbol,\n            currency: currency.symbol,\n            orders: orders\n        }).then(async result => {\n            this.updateTrade(comodity, currency);\n            this.feed.setLoading(\"cancel-\"+type, false);\n            for (var i in orders) { this.feed.setLoading(\"cancel-\"+type+\"-\"+orders[i], false); }    \n            return result;\n        }).catch(e => {\n            this.feed.setLoading(\"cancel-\"+type, false);\n            for (var i in orders) { this.feed.setLoading(\"cancel-\"+type+\"-\"+orders[i], false); }    \n            console.error(e);\n            throw e;\n        });\n    }\n\n    deposit(quantity:AssetDEX) {\n        // name owner, name type, const asset & total, const asset & price\n        var contract = this.scatter.getSmartContract(quantity.token.contract);\n        this.feed.setError(\"deposit\", null);\n        this.feed.setLoading(\"deposit\", true);\n        this.feed.setLoading(\"deposit-\"+quantity.token.symbol.toLowerCase(), true);\n        return contract.excecute(\"transfer\", {\n            from:  this.scatter.account.name,\n            to: this.vapaeetokens,\n            quantity: quantity.toString(),\n            memo: \"deposit\"\n        }).then(async result => {\n            this.feed.setLoading(\"deposit\", false);\n            this.feed.setLoading(\"deposit-\"+quantity.token.symbol.toLowerCase(), false);    \n            /*await*/ this.getDeposits();\n            /*await*/ this.getBalances();\n            return result;\n        }).catch(e => {\n            this.feed.setLoading(\"deposit\", false);\n            this.feed.setLoading(\"deposit-\"+quantity.token.symbol.toLowerCase(), false);\n            this.feed.setError(\"deposit\", typeof e == \"string\" ? e : JSON.stringify(e,null,4));\n            console.error(e);\n            throw e;\n        });\n    }    \n\n    withdraw(quantity:AssetDEX) {\n        this.feed.setError(\"withdraw\", null);\n        this.feed.setLoading(\"withdraw\", true);\n        this.feed.setLoading(\"withdraw-\"+quantity.token.symbol.toLowerCase(), true);   \n        return this.contract.excecute(\"withdraw\", {\n            owner:  this.scatter.account.name,\n            quantity: quantity.toString()\n        }).then(async result => {\n            this.feed.setLoading(\"withdraw\", false);\n            this.feed.setLoading(\"withdraw-\"+quantity.token.symbol.toLowerCase(), false);\n            /*await*/ this.getDeposits();\n            /*await*/ this.getBalances();\n            return result;\n        }).catch(e => {\n            this.feed.setLoading(\"withdraw\", false);\n            this.feed.setLoading(\"withdraw-\"+quantity.token.symbol.toLowerCase(), false);\n            this.feed.setError(\"withdraw\", typeof e == \"string\" ? e : JSON.stringify(e,null,4));\n            throw e;\n        });\n    }\n\n    // Tokens --------------------------------------------------------------\n    addOffChainToken(offchain: TokenDEX) {\n        this.waitTokensLoaded.then(_ => {\n            this.tokens.push(new TokenDEX({\n                symbol: offchain.symbol,\n                precision: offchain.precision || 4,\n                contract: \"nocontract\",\n                appname: offchain.appname,\n                website: \"\",\n                logo:\"\",\n                logolg: \"\",\n                scope: \"\",\n                stat: null,\n                verified: false,\n                offchain: true\n            }));\n        });\n    }\n\n\n    // --------------------------------------------------------------\n    // Scopes / Tables \n    public hasScopes() {\n        return !!this._markets;\n    }\n\n    public market(scope:string): Market {\n        if (this._markets[scope]) return this._markets[scope];        // ---> direct\n        var reverse = this.inverseScope(scope);\n        if (this._reverse[reverse]) return this._reverse[reverse];    // ---> reverse\n        if (!this._markets[reverse]) return null;                     // ---> table does not exist (or has not been loaded yet)\n        return this.reverse(scope);\n    }\n\n    public table(scope:string): Market {\n        //console.error(\"table(\"+scope+\") DEPRECATED\");\n        return this.market(scope);\n    }    \n\n    private reverse(scope:string): Market {\n        var canonical = this.canonicalScope(scope);\n        var reverse_scope = this.inverseScope(canonical);\n        console.assert(canonical != reverse_scope, \"ERROR: \", canonical, reverse_scope);\n        var reverse_table:Market = this._reverse[reverse_scope];\n        if (!reverse_table && this._markets[canonical]) {\n            this._reverse[reverse_scope] = this.createReverseTableFor(reverse_scope);\n        }\n        return this._reverse[reverse_scope];\n    }\n\n    public marketFor(comodity:TokenDEX, currency:TokenDEX): Market {\n        var scope = this.getScopeFor(comodity, currency);\n        return this.table(scope);\n    }\n\n    public tableFor(comodity:TokenDEX, currency:TokenDEX): Market {\n        console.error(\"tableFor()\",comodity.symbol,currency.symbol,\" DEPRECATED\");\n        return this.marketFor(comodity, currency);\n    }\n\n    public createReverseTableFor(scope:string): Market {\n        // console.log(\"******************************************\", scope);\n        var canonical = this.canonicalScope(scope);\n        var reverse_scope = this.inverseScope(canonical);\n        var table:Market = this._markets[canonical];\n\n        var inverse_history:HistoryTx[] = [];\n\n        for (var i in table.history) {\n            var hTx:HistoryTx = {\n                id: table.history[i].id,\n                str: \"\",\n                price: table.history[i].inverse.clone(),\n                inverse: table.history[i].price.clone(),\n                amount: table.history[i].payment.clone(),\n                payment: table.history[i].amount.clone(),\n                buyer: table.history[i].seller,\n                seller: table.history[i].buyer,\n                buyfee: table.history[i].sellfee.clone(),\n                sellfee: table.history[i].buyfee.clone(),\n                date: table.history[i].date,\n                isbuy: !table.history[i].isbuy,\n            };\n            hTx.str = hTx.price.str + \" \" + hTx.amount.str;\n            inverse_history.push(hTx);\n        }\n        \n    \n        var inverse_orders:TokenOrders = {\n            buy: [], sell: []\n        };\n\n        for (var type in {buy:\"buy\", sell:\"sell\"}) {\n            var row_orders:Order[];\n            var row_order:Order;\n\n            for (var i in table.orders[type]) {\n                var row = table.orders[type][i];\n\n                row_orders = [];\n                for (var j=0; j<row.orders.length; j++) {\n                    row_order = {\n                        deposit: row.orders[j].deposit.clone(),\n                        id: row.orders[j].id,\n                        inverse: row.orders[j].price.clone(),\n                        price: row.orders[j].inverse.clone(),\n                        owner: row.orders[j].owner,\n                        telos: row.orders[j].total,\n                        total: row.orders[j].telos\n                    }\n                    row_orders.push(row_order);\n                }\n\n                var newrow:OrderRow = {\n                    inverse: row.price.clone(),\n                    orders: row_orders,\n                    owners: row.owners,\n                    price: row.inverse.clone(),\n                    str: row.inverse.str,\n                    sum: row.sumtelos.clone(),\n                    sumtelos: row.sum.clone(),\n                    telos: row.total.clone(),\n                    total: row.telos.clone(),\n                    // amount: row.sumtelos.total(), // <-- extra\n                };\n                inverse_orders[type].push(newrow);\n            }\n        }\n\n        var reverse:Market = {\n            scope: reverse_scope,\n            comodity: table.currency,\n            currency: table.comodity,\n            block: table.block,\n            blocklist: table.reverseblocks,\n            reverseblocks: table.blocklist,\n            blocklevels: table.reverselevels,\n            reverselevels: table.blocklevels,\n            blocks: table.blocks,\n            deals: table.deals,\n            direct: table.inverse,\n            inverse: table.direct,\n            header: {\n                sell: {\n                    total:table.header.buy.total.clone(),\n                    orders:table.header.buy.orders\n                },\n                buy: {\n                    total:table.header.sell.total.clone(),\n                    orders:table.header.sell.orders\n                }\n            },\n            history: inverse_history,\n            orders: {\n                sell: inverse_orders.buy,  // <<-- esto funciona asÃ­ como estÃ¡?\n                buy: inverse_orders.sell   // <<-- esto funciona asÃ­ como estÃ¡?\n            },\n            summary: {\n                scope: this.inverseScope(table.summary.scope),\n                price: table.summary.inverse,\n                price_24h_ago: table.summary.inverse_24h_ago,\n                inverse: table.summary.price,\n                inverse_24h_ago: table.summary.price_24h_ago,\n                max_inverse: table.summary.max_price,\n                max_price: table.summary.max_inverse,\n                min_inverse: table.summary.min_price,\n                min_price: table.summary.min_inverse,\n                records: table.summary.records,\n                volume: table.summary.amount,\n                amount: table.summary.volume,\n                percent: table.summary.ipercent,\n                ipercent: table.summary.percent,\n                percent_str: table.summary.ipercent_str,\n                ipercent_str: table.summary.percent_str,\n            },\n            tx: table.tx\n        }\n        return reverse;\n    }\n\n    public getScopeFor(comodity:TokenDEX, currency:TokenDEX) {\n        if (!comodity || !currency) return \"\";\n        return comodity.symbol.toLowerCase() + \".\" + currency.symbol.toLowerCase();\n    }\n\n    public inverseScope(scope:string) {\n        if (!scope) return scope;\n        console.assert(typeof scope ==\"string\", \"ERROR: string scope expected, got \", typeof scope, scope);\n        var parts = scope.split(\".\");\n        console.assert(parts.length == 2, \"ERROR: scope format expected is xxx.yyy, got: \", typeof scope, scope);\n        var inverse = parts[1] + \".\" + parts[0];\n        return inverse;\n    }\n\n    public canonicalScope(scope:string) {\n        if (!scope) return scope;\n        console.assert(typeof scope ==\"string\", \"ERROR: string scope expected, got \", typeof scope, scope);\n        var parts = scope.split(\".\");\n        console.assert(parts.length == 2, \"ERROR: scope format expected is xxx.yyy, got: \", typeof scope, scope);\n        var inverse = parts[1] + \".\" + parts[0];\n        if (parts[1] == \"tlos\") {\n            return scope;\n        }\n        if (parts[0] == \"tlos\") {\n            return inverse;\n        }\n        if (parts[0] < parts[1]) {\n            return scope;\n        } else {\n            return inverse;\n        }\n    }\n\n    public isCanonical(scope:string) {\n        return this.canonicalScope(scope) == scope;\n    }\n\n    \n    \n    // --------------------------------------------------------------\n    // Getters \n\n    getBalance(token:TokenDEX) {\n        for (var i in this.balances) {\n            if (this.balances[i].token.symbol == token.symbol) {\n                return this.balances[i];\n            }\n        }\n        return new AssetDEX(\"0 \" + token.symbol, this);\n    }\n\n    async getSomeFreeFakeTokens(symbol:string = null) {\n        console.log(\"VapaeeDEX.getSomeFreeFakeTokens()\");\n        var _token = symbol;    \n        this.feed.setLoading(\"freefake-\"+_token || \"token\", true);\n        return this.waitTokenStats.then(_ => {\n            var token = null;\n            var counts = 0;\n            for (var i=0; i<100; i++) {\n                if (symbol) {\n                    if (this.tokens[i].symbol == symbol) {\n                        token = this.tokens[i];\n                    }\n                }                \n\n                var random = Math.random();\n                // console.log(i, \"Random: \", random);\n                if (!token && random > 0.5) {\n                    token = this.tokens[i % this.tokens.length];\n                    if (token.fake) {\n                        random = Math.random();\n                        if (random > 0.5) {\n                            token = this.telos;\n                        }\n                    } else {\n                        token = null;\n                    }\n                }\n\n                if (i<100 && token && this.getBalance(token).amount.toNumber() > 0) {\n                    token = null;\n                }\n\n                // console.log(i, \"token: \", token);\n\n                if (token) {\n                    random = Math.random();\n                    var monto = Math.floor(10000 * random) / 100;\n                    var quantity = new AssetDEX(\"\" + monto + \" \" + token.symbol ,this);\n                    var memo = \"you get \" + quantity.valueToString()+ \" free fake \" + token.symbol + \" tokens to play on vapaee.io DEX\";\n                    return this.contract.excecute(\"issue\", {\n                        to:  this.scatter.account.name,\n                        quantity: quantity.toString(),\n                        memo: memo\n                    }).then(_ => {\n                        this.getBalances();\n                        this.feed.setLoading(\"freefake-\"+_token || \"token\", false);\n                        return memo;\n                    }).catch(e => {\n                        this.feed.setLoading(\"freefake-\"+_token || \"token\", false);\n                        throw e;\n                    });                \n                }               \n            }\n        })\n    }\n\n    getTokenNow(sym:string): TokenDEX {\n        if (!sym) return null;\n        for (var i in this.tokens) {\n            // there's a little bug. This is a justa  work arround\n            if (this.tokens[i].symbol.toUpperCase() == \"TLOS\" && this.tokens[i].offchain) {\n                // this solves attaching wrong tlos token to asset\n                continue;\n            }\n             \n            if (this.tokens[i].symbol.toUpperCase() == sym.toUpperCase()) {\n                return this.tokens[i];\n            }\n        }\n        return null;\n    }\n\n    async getToken(sym:string): Promise<TokenDEX> {\n        return this.waitTokensLoaded.then(_ => {\n            return this.getTokenNow(sym);\n        });\n    }\n\n    async getDeposits(account:string = null): Promise<any> {\n        console.log(\"VapaeeDEX.getDeposits()\");\n        this.feed.setLoading(\"deposits\", true);\n        return this.waitTokensLoaded.then(async _ => {\n            var deposits: AssetDEX[] = [];\n            if (!account && this.current.name) {\n                account = this.current.name;\n            }\n            if (account) {\n                var result = await this.fetchDeposits(account);\n                for (var i in result.rows) {\n                    deposits.push(new AssetDEX(result.rows[i].amount, this));\n                }\n            }\n            this.deposits = deposits;\n            this.feed.setLoading(\"deposits\", false);\n            return this.deposits;\n        });\n    }\n\n    async getBalances(account:string = null): Promise<any> {\n        console.log(\"VapaeeDEX.getBalances()\");\n        this.feed.setLoading(\"balances\", true);\n        return this.waitTokensLoaded.then(async _ => {\n            var _balances: AssetDEX[];\n            if (!account && this.current.name) {\n                account = this.current.name;\n            }            \n            if (account) {\n                _balances = await this.fetchBalances(account);\n            }\n            this.balances = _balances;\n            // console.log(\"VapaeeDEX balances updated\");\n            this.feed.setLoading(\"balances\", false);\n            return this.balances;\n        });\n    }\n\n    async getThisSellOrders(table:string, ids:number[]): Promise<any[]> {\n        this.feed.setLoading(\"thisorders\", true);\n        return this.waitTokensLoaded.then(async _ => {\n            var result = [];\n            for (var i in ids) {\n                var id = ids[i];\n                var gotit = false;\n                for (var j in result) {\n                    if (result[j].id == id) {\n                        gotit = true;\n                        break;\n                    }\n                }\n                if (gotit) {\n                    continue;\n                }\n                var res:TableResult = await this.fetchOrders({scope:table, limit:1, lower_bound:id.toString()});\n\n                result = result.concat(res.rows);\n            }\n            this.feed.setLoading(\"thisorders\", false);\n            return result;\n        });    \n    }\n\n    async getUserOrders(account:string = null) {\n        console.log(\"VapaeeDEX.getUserOrders()\");\n        this.feed.setLoading(\"userorders\", true);\n        return this.waitTokensLoaded.then(async _ => {\n            var userorders: TableResult;\n            if (!account && this.current.name) {\n                account = this.current.name;\n            }            \n            if (account) {\n                userorders = await this.fetchUserOrders(account);\n            }\n            var list: UserOrders[] = <UserOrders[]>userorders.rows;\n            var map: UserOrdersMap = {};\n            for (var i=0; i<list.length; i++) {\n                var ids = list[i].ids;\n                var table = list[i].table;\n                var orders = await this.getThisSellOrders(table, ids);\n                map[table] = {\n                    table: table,\n                    orders: this.auxProcessRowsToOrders(orders),\n                    ids:ids\n                };\n            }\n            this.userorders = map;\n            // console.log(this.userorders);\n            this.feed.setLoading(\"userorders\", false);\n            return this.userorders;\n        });\n                \n    }\n\n    async updateActivity() {\n        this.feed.setLoading(\"activity\", true);\n        var pagesize = this.activityPagesize;\n        var pages = await this.getActivityTotalPages(pagesize);\n        await Promise.all([\n            this.fetchActivity(pages-2, pagesize),\n            this.fetchActivity(pages-1, pagesize),\n            this.fetchActivity(pages-0, pagesize)\n        ]);\n        this.feed.setLoading(\"activity\", false);\n    }\n\n    async loadMoreActivity() {\n        if (this.activity.list.length == 0) return;\n        this.feed.setLoading(\"activity\", true);\n        var pagesize = this.activityPagesize;\n        var first = this.activity.list[this.activity.list.length-1];\n        var id = first.id - pagesize;\n        var page = Math.floor((id-1) / pagesize);\n\n        await this.fetchActivity(page, pagesize);\n        this.feed.setLoading(\"activity\", false);\n    }\n\n    async updateTrade(comodity:TokenDEX, currency:TokenDEX, updateUser:boolean = true): Promise<any> {\n        console.log(\"VapaeeDEX.updateTrade()\");\n        var chrono_key = \"updateTrade\";\n        this.feed.startChrono(chrono_key);\n\n        if(updateUser) this.updateCurrentUser();\n        return Promise.all([\n            this.getTransactionHistory(comodity, currency, -1, -1, true).then(_ => this.feed.setMarck(chrono_key, \"getTransactionHistory()\")),\n            this.getBlockHistory(comodity, currency, -1, -1, true).then(_ => this.feed.setMarck(chrono_key, \"getBlockHistory()\")),\n            this.getSellOrders(comodity, currency, true).then(_ => this.feed.setMarck(chrono_key, \"getSellOrders()\")),\n            this.getBuyOrders(comodity, currency, true).then(_ => this.feed.setMarck(chrono_key, \"getBuyOrders()\")),\n            this.getMarketSummary(comodity, currency, true).then(_ => this.feed.setMarck(chrono_key, \"getMarketSummary()\")),\n            this.getOrderSummary().then(_ => this.feed.setMarck(chrono_key, \"getOrderSummary()\")),\n        ]).then(r => {\n            this._reverse = {};\n            this.resortTokens();\n            this.resortTopMarkets();\n            // this.feed.printChrono(chrono_key);\n            this.onTradeUpdated.next(null);\n            return r;\n        });\n    }\n\n    async updateCurrentUser(): Promise<any> {\n        // console.log(\"VapaeeDEX.updateCurrentUser()\");\n        this.feed.setLoading(\"current\", true);        \n        return Promise.all([\n            this.getUserOrders(),\n            this.getDeposits(),\n            this.getBalances()\n        ]).then(_ => {\n            this.feed.setLoading(\"current\", false);\n            return _;\n        }).catch(e => {\n            this.feed.setLoading(\"current\", false);\n            throw e;\n        });\n    }\n\n    private getBlockHistoryTotalPagesFor(scope:string, pagesize: number) {\n        if (!this._markets) return 0;\n        var market = this.market(scope);\n        if (!market) return 0;\n        var total = market.blocks;\n        var mod = total % pagesize;\n        var dif = total - mod;\n        var pages = dif / pagesize;\n        if (mod > 0) {\n            pages +=1;\n        }\n        // console.log(\"getBlockHistoryTotalPagesFor() total:\", total, \" pages:\", pages);\n        return pages;\n    }\n\n    private getHistoryTotalPagesFor(scope:string, pagesize: number) {\n        if (!this._markets) return 0;\n        var market = this.market(scope);\n        if (!market) return 0;\n        var total = market.deals;\n        var mod = total % pagesize;\n        var dif = total - mod;\n        var pages = dif / pagesize;\n        if (mod > 0) {\n            pages +=1;\n        }\n        return pages;\n    }\n\n    private async getActivityTotalPages(pagesize: number) {\n        return this.contract.getTable(\"events\", {\n            limit: 1\n        }).then(result => {\n            var params = result.rows[0].params;\n            var total = parseInt(params.split(\" \")[0])-1;\n            var mod = total % pagesize;\n            var dif = total - mod;\n            var pages = dif / pagesize;\n            if (mod > 0) {\n                pages +=1;\n            }\n            this.activity.total = total;\n            console.log(\"VapaeeDEX.getActivityTotalPages() total: \", total, \" pages: \", pages);\n            return pages;\n        });\n    }\n\n    async getTransactionHistory(comodity:TokenDEX, currency:TokenDEX, page:number = -1, pagesize:number = -1, force:boolean = false): Promise<any> {\n        var scope:string = this.canonicalScope(this.getScopeFor(comodity, currency));\n        var aux = null;\n        var result = null;\n        this.feed.setLoading(\"history.\"+scope, true);\n        aux = this.waitOrderSummary.then(async _ => {\n            if (pagesize == -1) {\n                pagesize = 10;                \n            }\n            if (page == -1) {\n                var pages = this.getHistoryTotalPagesFor(scope, pagesize);\n                page = pages-3;\n                if (page < 0) page = 0;\n            }\n\n            return Promise.all([\n                this.fetchHistory(scope, page+0, pagesize),\n                this.fetchHistory(scope, page+1, pagesize),\n                this.fetchHistory(scope, page+2, pagesize)\n            ]).then(_ => {\n                this.feed.setLoading(\"history.\"+scope, false);\n                return this.market(scope).history;\n            }).catch(e => {\n                this.feed.setLoading(\"history.\"+scope, false);\n                throw e;\n            });\n        });\n\n        if (this.market(scope) && !force) {\n            result = this.market(scope).history;\n        } else {\n            result = aux;\n        }\n\n        this.onHistoryChange.next(result);\n\n        return result;\n    }\n\n    private auxHourToLabel(hour:number): string {\n        var d = new Date(hour * 1000 * 60 * 60);\n        var label = d.getHours() == 0 ? this.datePipe.transform(d, 'dd/MM') : d.getHours() + \"h\";\n        \n        return label;\n    }\n\n    async getBlockHistory(comodity:TokenDEX, currency:TokenDEX, page:number = -1, pagesize:number = -1, force:boolean = false): Promise<any> {\n        console.log(\"VapaeeDEX.getBlockHistory()\", comodity.symbol, page, pagesize);\n        // // elapsed time\n        // var startTime:Date = new Date();\n        // var diff:number;\n        // var sec:number;\n\n        var scope:string = this.canonicalScope(this.getScopeFor(comodity, currency));\n        var aux = null;\n        var result = null;\n        this.feed.setLoading(\"block-history.\"+scope, true);\n\n        aux = this.waitOrderSummary.then(async _ => {\n            var fetchBlockHistoryStart:Date = new Date();\n\n            if (pagesize == -1) {\n                pagesize = 10;\n            }\n            if (page == -1) {\n                var pages = this.getBlockHistoryTotalPagesFor(scope, pagesize);\n                page = pages-3;\n                if (page < 0) page = 0;\n            }\n            var promises = [];\n            for (var i=0; i<=pages; i++) {\n                var promise = this.fetchBlockHistory(scope, i, pagesize);\n                promises.push(promise);\n            }\n\n            return Promise.all(promises).then(_ => {\n                // // elapsed time\n                // var fetchBlockHistoryTime:Date = new Date();\n                // diff = fetchBlockHistoryTime.getTime() - fetchBlockHistoryStart.getTime();\n                // sec = diff / 1000;\n                // console.log(\"** VapaeeDEX.getBlockHistory() fetchBlockHistoryTime sec: \", sec, \"(\",diff,\")\");\n\n\n                this.feed.setLoading(\"block-history.\"+scope, false);\n                var market: Market = this.market(scope);\n                market.blocklist = [];\n                market.reverseblocks = [];\n                var now = new Date();\n                var hora = 1000 * 60 * 60;\n                var hour = Math.floor(now.getTime()/hora);\n                // console.log(\"->\", hour);\n                var last_block = null;\n                var last_hour = null;\n\n                var ordered_blocks = [];\n                for (var i in market.block) {\n                    ordered_blocks.push(market.block[i]);\n                }\n\n                ordered_blocks.sort(function(a:HistoryBlock, b:HistoryBlock) {\n                    if(a.hour < b.hour) return -11;\n                    return 1;\n                });\n\n\n\n                for (var i in ordered_blocks) {\n                    var block:HistoryBlock = ordered_blocks[i];\n                    var label = this.auxHourToLabel(block.hour);\n                    /*\n                    // console.log(\"->\", i, label, block);\n                    var date = block.date;\n                    var dif = now.getTime() - block.date.getTime();\n                    var mes = 30 * 24 * hora;\n                    var elapsed_months = dif / mes;\n                    if (elapsed_months > 3) {\n                        console.log(\"dropping block too old\", [block, block.date.toUTCString()]);\n                        continue;\n                    }\n                    */\n\n                    if (last_block) {\n                        var dif = block.hour - last_block.hour;\n                        for (var j=1; j<dif; j++) {\n                            var label_i = this.auxHourToLabel(last_block.hour+j);\n                            // console.log(\"-->\", j, label_i, block);\n\n                            // coninical ----------------------------\n                            var price = last_block.price.amount.toNumber();\n                            var aux = [label_i, price, price, price, price];\n                            market.blocklist.push(aux);\n                            // reverse ----------------------------\n                            var inverse = last_block.inverse.amount.toNumber();\n                            var aux = [label_i, inverse, inverse, inverse, inverse];\n                            market.reverseblocks.push(aux);\n                        }\n                    }\n                    var obj:any[];\n                    // coninical ----------------------------\n                    obj = [label];\n                    obj.push(block.max.amount.toNumber());\n                    obj.push(block.entrance.amount.toNumber());\n                    obj.push(block.price.amount.toNumber());\n                    obj.push(block.min.amount.toNumber());\n                    market.blocklist.push(obj);\n                    // reverse ----------------------------\n                    obj = [label];\n                    obj.push(1.0/block.max.amount.toNumber());\n                    obj.push(1.0/block.entrance.amount.toNumber());\n                    obj.push(1.0/block.price.amount.toNumber());\n                    obj.push(1.0/block.min.amount.toNumber());\n                    market.reverseblocks.push(obj);\n                    last_block = block;\n                }\n\n                if (last_block && hour != last_block.hour) {\n                    var dif = hour - last_block.hour;\n                    for (var j=1; j<=dif; j++) {\n                        var label_i = this.auxHourToLabel(last_block.hour+j);\n\n                        // coninical ----------------------------\n                        var price = last_block.price.amount.toNumber();\n                        var aux = [label_i, price, price, price, price];\n                        market.blocklist.push(aux);\n\n                        // reverse ----------------------------\n                        var inverse = last_block.inverse.amount.toNumber();\n                        var aux = [label_i, inverse, inverse, inverse, inverse];\n                        market.reverseblocks.push(aux);\n                    }\n                }\n\n                // // elapsed time\n                // var firstLevelTime:Date = new Date();\n                // diff = firstLevelTime.getTime() - fetchBlockHistoryTime.getTime();\n                // sec = diff / 1000;\n                // console.log(\"** VapaeeDEX.getBlockHistory() firstLevelTime sec: \", sec, \"(\",diff,\")\");                \n                \n                // console.log(\"---------------->\", market.blocklist);\n                // this.onBlocklistChange.next(market.blocklist);\n                return market;\n            }).then(market => {\n                // console.log(\"***************************************************************************\");\n                // // elapsed time\n                // var allLevelsStart:Date = new Date();                \n                \n                var limit = 256;\n                var levels = [market.blocklist];\n                var reverses = [market.reverseblocks];\n                for (var current = 0; levels[current].length > limit; current++) {\n                    // console.log(current ,levels[current].length);\n                    var newlevel:any[][] = [];\n                    var newreverse:any[][] = [];\n                    var merged:any[] = [];\n                    for (var i=0; i<levels[current].length; i+=2) {\n                        // canonical -----------------------------\n                        var v_1:any[] = levels[current][i];\n                        var v_2 = levels[current][i+1];\n                        var merged = [];\n                        for (var x=0; x<5; x++) merged[x] = v_1[x]; // clean copy\n                        if (v_2) {\n                            merged[0] = v_1[0].split(\"/\").length > 1 ? v_1[0] : v_2[0];\n                            merged[1] = Math.max(v_1[1], v_2[1]);\n                            merged[2] = v_1[2];\n                            merged[3] = v_2[3];\n                            merged[4] = Math.min(v_1[4], v_2[4]);\n                        }\n                        newlevel.push(merged);\n\n                        // reverse ------------------------------\n                        v_1 = reverses[current][i];\n                        v_2 = reverses[current][i+1];\n                        merged = [];\n                        for (var x=0; x<5; x++) merged[x] = v_1[x]; // clean copy\n                        if (v_2) {\n                            merged[0] = v_1[0].split(\"/\").length > 1 ? v_1[0] : v_2[0];\n                            merged[1] = Math.min(v_1[1], v_2[1]);\n                            merged[2] = v_1[2];\n                            merged[3] = v_2[3];\n                            merged[4] = Math.max(v_1[4], v_2[4]);\n                        }\n\n                        \n                        newreverse.push(merged);\n                    }\n\n                    levels.push(newlevel);\n                    reverses.push(newreverse);\n                }\n                \n\n                market.blocklevels = levels;\n                market.reverselevels = reverses;\n                \n                // ---------------------\n                // market.blocklevels = [market.blocklist];\n                // market.reverselevels = [market.reverseblocks];\n                \n\n                \n                // // elapsed time\n                // var allLevelsTime:Date = new Date();\n                // diff = allLevelsTime.getTime() - allLevelsStart.getTime();\n                // sec = diff / 1000;\n                // console.log(\"** VapaeeDEX.getBlockHistory() allLevelsTime sec: \", sec, \"(\",diff,\")\");   \n                // // console.log(\"***************************************************************************\", market.blocklevels);\n\n                return market.block;\n            }).catch(e => {\n                this.feed.setLoading(\"block-history.\"+scope, false);\n                throw e;\n            });\n        });\n\n        if (this.market(scope) && !force) {\n            result = this.market(scope).block;\n        } else {\n            result = aux;\n        }\n\n        this.onHistoryChange.next(result);\n\n        return result;\n    }\n\n    async getSellOrders(comodity:TokenDEX, currency:TokenDEX, force:boolean = false): Promise<any> {\n        var scope:string = this.getScopeFor(comodity, currency);\n        var canonical:string = this.canonicalScope(scope);\n        var reverse:string = this.inverseScope(canonical);\n        var aux = null;\n        var result = null;\n        this.feed.setLoading(\"sellorders\", true);\n        aux = this.waitTokensLoaded.then(async _ => {\n            var orders = await this.fetchOrders({scope:canonical, limit:100, index_position: \"2\", key_type: \"i64\"});\n            this._markets[canonical] = this.auxAssertScope(canonical);\n            // if(scope==\"vpe.tlos\" || scope==\"cnt.tlos\")console.log(\"-------------\");\n            // if(scope==\"vpe.tlos\" || scope==\"cnt.tlos\")console.log(\"Sell crudo:\", orders);\n            var sell: Order[] = this.auxProcessRowsToOrders(orders.rows);\n            sell.sort(function(a:Order, b:Order) {\n                if(a.price.amount.isLessThan(b.price.amount)) return -11;\n                if(a.price.amount.isGreaterThan(b.price.amount)) return 1;\n                return 0;\n            });\n            // if(scope==\"vpe.tlos\" || scope==\"cnt.tlos\")console.log(\"sorted:\", sell);\n            // grouping together orders with the same price.\n            var list: OrderRow[] = [];\n            var row: OrderRow;\n            if (sell.length > 0) {\n                for(var i=0; i<sell.length; i++) {\n                    var order: Order = sell[i];\n                    if (list.length > 0) {\n                        row = list[list.length-1];\n                        if (row.price.amount.eq(order.price.amount)) {\n                            row.total.amount = row.total.amount.plus(order.total.amount);\n                            row.telos.amount = row.telos.amount.plus(order.telos.amount);\n                            row.owners[order.owner] = true;\n                            row.orders.push(order);\n                            continue;\n                        }    \n                    }\n                    row = {\n                        str: order.price.toString(),\n                        price: order.price,\n                        orders: [],\n                        total: order.total.clone(),\n                        telos: order.telos.clone(),\n                        inverse: order.inverse,\n                        sum: null,\n                        sumtelos: null,\n                        owners: {}\n                    }\n\n                    row.owners[order.owner] = true;\n                    row.orders.push(order);\n                    list.push(row);\n                }\n            }\n\n            var sum = new BigNumber(0);\n            var sumtelos = new BigNumber(0);\n            for (var j in list) {\n                var order_row = list[j];\n                sumtelos = sumtelos.plus(order_row.telos.amount);\n                sum = sum.plus(order_row.total.amount);\n                order_row.sumtelos = new AssetDEX(sumtelos, order_row.telos.token);\n                order_row.sum = new AssetDEX(sum, order_row.total.token);\n            }\n\n            this._markets[canonical].orders.sell = list;\n            // if(scope==\"vpe.tlos\" || scope==\"cnt.tlos\")console.log(\"Sell final:\", this.scopes[scope].orders.sell);\n            // if(scope==\"vpe.tlos\" || scope==\"cnt.tlos\")console.log(\"-------------\");\n\n            this.feed.setLoading(\"sellorders\", false);            \n            return this._markets[canonical].orders.sell;\n        });\n\n        if (this._markets[canonical] && !force) {\n            result = this._markets[canonical].orders.sell;\n        } else {\n            result = aux;\n        }\n        return result;\n    }\n    \n    async getBuyOrders(comodity:TokenDEX, currency:TokenDEX, force:boolean = false): Promise<any> {\n        var scope:string = this.getScopeFor(comodity, currency);\n        var canonical:string = this.canonicalScope(scope);\n        var reverse:string = this.inverseScope(canonical);\n\n\n        var aux = null;\n        var result = null;\n        this.feed.setLoading(\"buyorders\", true);\n        aux = this.waitTokensLoaded.then(async _ => {\n            var orders = await await this.fetchOrders({scope:reverse, limit:50, index_position: \"2\", key_type: \"i64\"});\n            this._markets[canonical] = this.auxAssertScope(canonical);\n            // console.log(\"-------------\");\n            // console.log(\"Buy crudo:\", orders);            \n            var buy: Order[] = this.auxProcessRowsToOrders(orders.rows);\n            buy.sort(function(a:Order, b:Order){\n                if(a.price.amount.isLessThan(b.price.amount)) return 1;\n                if(a.price.amount.isGreaterThan(b.price.amount)) return -1;\n                return 0;\n            });\n\n            // console.log(\"buy sorteado:\", buy);\n\n            // grouping together orders with the same price.\n            var list: OrderRow[] = [];\n            var row: OrderRow;\n            if (buy.length > 0) {\n                for(var i=0; i<buy.length; i++) {\n                    var order: Order = buy[i];\n                    if (list.length > 0) {\n                        row = list[list.length-1];\n                        if (row.price.amount.eq(order.price.amount)) {\n                            row.total.amount = row.total.amount.plus(order.total.amount);\n                            row.telos.amount = row.telos.amount.plus(order.telos.amount);\n                            row.owners[order.owner] = true;\n                            row.orders.push(order);\n                            continue;\n                        }    \n                    }\n                    row = {\n                        str: order.price.toString(),\n                        price: order.price,\n                        orders: [],\n                        total: order.total.clone(),\n                        telos: order.telos.clone(),\n                        inverse: order.inverse,\n                        sum: null,\n                        sumtelos: null,\n                        owners: {}\n                    }\n\n                    row.owners[order.owner] = true;\n                    row.orders.push(order);\n                    list.push(row);\n                }\n            }            \n\n            var sum = new BigNumber(0);\n            var sumtelos = new BigNumber(0);\n            for (var j in list) {\n                var order_row = list[j];\n                sumtelos = sumtelos.plus(order_row.telos.amount);\n                sum = sum.plus(order_row.total.amount);\n                order_row.sumtelos = new AssetDEX(sumtelos, order_row.telos.token);\n                order_row.sum = new AssetDEX(sum, order_row.total.token);\n            }\n\n            this._markets[canonical].orders.buy = list;\n            // console.log(\"Buy final:\", this.scopes[scope].orders.buy);\n            // console.log(\"-------------\");\n            this.feed.setLoading(\"buyorders\", false);\n            return this._markets[canonical].orders.buy;\n        });\n\n        if (this._markets[canonical] && !force) {\n            result = this._markets[canonical].orders.buy;\n        } else {\n            result = aux;\n        }\n        return result;\n    }\n    \n    async getOrderSummary(): Promise<any> {\n        console.log(\"VapaeeDEX.getOrderSummary()\");\n        var tables = await this.fetchOrderSummary();\n\n        for (var i in tables.rows) {\n            var scope:string = tables.rows[i].table;\n            var canonical = this.canonicalScope(scope);\n            console.assert(scope == canonical, \"ERROR: scope is not canonical\", scope, [i, tables]);\n            this._markets[canonical] = this.auxAssertScope(canonical);\n\n            // console.log(i, tables.rows[i]);\n\n            this._markets[canonical].header.sell.total = new AssetDEX(tables.rows[i].supply.total, this);\n            this._markets[canonical].header.sell.orders = tables.rows[i].supply.orders;\n            this._markets[canonical].header.buy.total = new AssetDEX(tables.rows[i].demand.total, this);\n            this._markets[canonical].header.buy.orders = tables.rows[i].demand.orders;\n            this._markets[canonical].deals = tables.rows[i].deals;\n            this._markets[canonical].blocks = tables.rows[i].blocks;\n            this._markets[canonical].direct = tables.rows[i].demand.ascurrency;\n            this._markets[canonical].inverse = tables.rows[i].supply.ascurrency;\n        }\n        \n        this.setOrderSummary();\n    }\n\n    async getMarketSummary(token_a:TokenDEX, token_b:TokenDEX, force:boolean = false): Promise<MarketSummary> {\n        var scope:string = this.getScopeFor(token_a, token_b);\n        var canonical:string = this.canonicalScope(scope);\n        var inverse:string = this.inverseScope(canonical);\n\n        var comodity = this.auxGetComodityToken(canonical); \n        var currency = this.auxGetCurrencyToken(canonical);\n\n        var ZERO_COMODITY = \"0.00000000 \" + comodity.symbol;\n        var ZERO_CURRENCY = \"0.00000000 \" + currency.symbol;\n\n        this.feed.setLoading(\"summary.\"+canonical, true);\n        this.feed.setLoading(\"summary.\"+inverse, true);\n        var aux = null;\n        var result:MarketSummary = null;\n        aux = this.waitTokensLoaded.then(async _ => {\n            var summary = await this.fetchSummary(canonical);\n            // if(scope==\"olive.tlos\")console.log(scope, \"---------------------------------------------------\");\n            // if(scope==\"olive.tlos\")console.log(\"Summary crudo:\", summary.rows);\n\n            this._markets[canonical] = this.auxAssertScope(canonical);\n            this._markets[canonical].summary = {\n                scope: canonical,\n                price: new AssetDEX(new BigNumber(0), currency),\n                price_24h_ago: new AssetDEX(new BigNumber(0), currency),\n                inverse: new AssetDEX(new BigNumber(0), comodity),\n                inverse_24h_ago: new AssetDEX(new BigNumber(0), comodity),\n                volume: new AssetDEX(new BigNumber(0), currency),\n                amount: new AssetDEX(new BigNumber(0), comodity),\n                percent: 0.3,\n                records: summary.rows\n            };\n\n            var now:Date = new Date();\n            var now_sec: number = Math.floor(now.getTime() / 1000);\n            var now_hour: number = Math.floor(now_sec / 3600);\n            var start_hour = now_hour - 23;\n            // if(canonical==\"acorn.tlos\")console.log(\"now_hour:\", now_hour);\n            // if(canonical==\"acorn.tlos\")console.log(\"start_hour:\", start_hour);\n\n            // proceso los datos crudos \n            var price = ZERO_CURRENCY;\n            var inverse = ZERO_COMODITY;\n            var crude = {};\n            var last_hh = 0;\n            for (var i=0; i<summary.rows.length; i++) {\n                var hh = summary.rows[i].hour;\n                if (summary.rows[i].label == \"lastone\") {\n                    // price = summary.rows[i].price;\n                } else {\n                    crude[hh] = summary.rows[i];\n                    if (last_hh < hh && hh < start_hour) {\n                        last_hh = hh;\n                        price = summary.rows[i].price;\n                        inverse = summary.rows[i].inverse;\n\n                        // price = (scope == canonical) ? summary.rows[i].price : summary.rows[i].inverse;\n                        // inverse = (scope == canonical) ? summary.rows[i].inverse : summary.rows[i].price;\n                        // if(canonical==\"acorn.tlos\")console.log(\"hh:\", hh, \"last_hh:\", last_hh, \"price:\", price);\n                    }    \n                }\n                /*\n                */\n            }\n            // if(canonical==\"acorn.tlos\")console.log(\"crude:\", crude);\n            // if(canonical==\"acorn.tlos\")console.log(\"price:\", price);\n\n            // genero una entrada por cada una de las Ãºltimas 24 horas\n            var last_24h = {};\n            var volume = new AssetDEX(ZERO_CURRENCY, this);\n            var amount = new AssetDEX(ZERO_COMODITY, this);\n            var price_asset = new AssetDEX(price, this);\n            var inverse_asset = new AssetDEX(inverse, this);\n            // if(canonical==\"cnt.tlos\")console.log(\"price \", price);\n            var max_price = price_asset.clone();\n            var min_price = price_asset.clone();\n            var max_inverse = inverse_asset.clone();\n            var min_inverse = inverse_asset.clone();\n            var price_fst:AssetDEX = null;\n            var inverse_fst:AssetDEX = null;\n            for (var i=0; i<24; i++) {\n                var current = start_hour+i;\n                var current_date = new Date(current * 3600 * 1000);\n                var nuevo:any = crude[current];\n                if (nuevo) {\n                    \n                } else {\n                    nuevo = {\n                        label: this.auxGetLabelForHour(current % 24),\n                        price: price,\n                        inverse: inverse,\n                        volume: ZERO_CURRENCY,\n                        amount: ZERO_COMODITY,\n                        date: current_date.toISOString().split(\".\")[0],\n                        hour: current\n                    };\n                }\n                last_24h[current] = crude[current] || nuevo;\n                // if(canonical==\"acorn.tlos\")console.log(\"current_date:\", current_date.toISOString(), current, last_24h[current]);\n\n                // coninical ----------------------------\n                price = last_24h[current].price;\n                var vol = new AssetDEX(last_24h[current].volume, this);\n                console.assert(vol.token.symbol == volume.token.symbol, \"ERROR: different tokens\", vol.str, volume.str);\n                volume.amount = volume.amount.plus(vol.amount);\n                if (price != ZERO_CURRENCY && !price_fst) {\n                    price_fst = new AssetDEX(price, this);\n                }\n                price_asset = new AssetDEX(price, this);\n                console.assert(price_asset.token.symbol == max_price.token.symbol, \"ERROR: different tokens\", price_asset.str, max_price.str);\n                if (price_asset.amount.isGreaterThan(max_price.amount)) {\n                    max_price = price_asset.clone();\n                }\n                console.assert(price_asset.token.symbol == min_price.token.symbol, \"ERROR: different tokens\", price_asset.str, min_price.str);\n                if (min_price.amount.isEqualTo(0) || price_asset.amount.isLessThan(min_price.amount)) {\n                    min_price = price_asset.clone();\n                }\n\n                // reverse ----------------------------\n                inverse = last_24h[current].inverse;\n                var amo = new AssetDEX(last_24h[current].amount, this);\n                console.assert(amo.token.symbol == amount.token.symbol, \"ERROR: different tokens\", amo.str, amount.str);\n                amount.amount = amount.amount.plus(amo.amount);\n                if (inverse != ZERO_COMODITY && !inverse_fst) {\n                    inverse_fst = new AssetDEX(inverse, this);\n                }\n                inverse_asset = new AssetDEX(inverse, this);\n                console.assert(inverse_asset.token.symbol == max_inverse.token.symbol, \"ERROR: different tokens\", inverse_asset.str, max_inverse.str);\n                if (inverse_asset.amount.isGreaterThan(max_inverse.amount)) {\n                    max_inverse = inverse_asset.clone();\n                }\n                console.assert(inverse_asset.token.symbol == min_inverse.token.symbol, \"ERROR: different tokens\", inverse_asset.str, min_inverse.str);\n                if (min_inverse.amount.isEqualTo(0) || inverse_asset.amount.isLessThan(min_inverse.amount)) {\n                    min_inverse = inverse_asset.clone();\n                }\n            }            \n            // coninical ----------------------------\n            if (!price_fst) {\n                price_fst = new AssetDEX(last_24h[start_hour].price, this);\n            }\n            var last_price =  new AssetDEX(last_24h[now_hour].price, this);\n            var diff = last_price.clone();\n            // diff.amount \n            diff.amount = last_price.amount.minus(price_fst.amount);\n            var ratio:number = 0;\n            if (price_fst.amount.toNumber() != 0) {\n                ratio = diff.amount.dividedBy(price_fst.amount).toNumber();\n            }\n            var percent = Math.floor(ratio * 10000) / 100;\n\n            // reverse ----------------------------\n            if (!inverse_fst) {\n                inverse_fst = new AssetDEX(last_24h[start_hour].inverse, this);\n            }\n            var last_inverse =  new AssetDEX(last_24h[now_hour].inverse, this);\n            var idiff = last_inverse.clone();\n            // diff.amount \n            idiff.amount = last_inverse.amount.minus(inverse_fst.amount);\n            ratio = 0;\n            if (inverse_fst.amount.toNumber() != 0) {\n                ratio = diff.amount.dividedBy(inverse_fst.amount).toNumber();\n            }\n            var ipercent = Math.floor(ratio * 10000) / 100;\n            // if(canonical==\"acorn.tlos\")console.log(\"price_fst:\", price_fst.str);\n            // if(canonical==\"acorn.tlos\")console.log(\"inverse_fst:\", inverse_fst.str);\n\n            // if(canonical==\"acorn.tlos\")console.log(\"last_24h:\", [last_24h]);\n            // if(canonical==\"acorn.tlos\")console.log(\"diff:\", diff.toString(8));\n            // if(canonical==\"acorn.tlos\")console.log(\"percent:\", percent);\n            // if(canonical==\"acorn.tlos\")console.log(\"ratio:\", ratio);\n            // if(canonical==\"acorn.tlos\")console.log(\"volume:\", volume.str);\n\n            this._markets[canonical].summary.price = last_price;\n            this._markets[canonical].summary.inverse = last_inverse;\n            this._markets[canonical].summary.price_24h_ago = price_fst || last_price;\n            this._markets[canonical].summary.inverse_24h_ago = inverse_fst;\n            this._markets[canonical].summary.percent_str = (isNaN(percent) ? 0 : percent) + \"%\";\n            this._markets[canonical].summary.percent = isNaN(percent) ? 0 : percent;\n            this._markets[canonical].summary.ipercent_str = (isNaN(ipercent) ? 0 : ipercent) + \"%\";\n            this._markets[canonical].summary.ipercent = isNaN(ipercent) ? 0 : ipercent;\n            this._markets[canonical].summary.volume = volume;\n            this._markets[canonical].summary.amount = amount;\n            this._markets[canonical].summary.min_price = min_price;\n            this._markets[canonical].summary.max_price = max_price;\n            this._markets[canonical].summary.min_inverse = min_inverse;\n            this._markets[canonical].summary.max_inverse = max_inverse;\n\n            // if(canonical==\"acorn.tlos\")console.log(\"Summary final:\", this._markets[canonical].summary);\n            // if(canonical==\"acorn.tlos\")console.log(\"---------------------------------------------------\");\n            this.feed.setLoading(\"summary.\"+canonical, false);\n            this.feed.setLoading(\"summary.\"+inverse, false);\n            return this._markets[canonical].summary;\n        });\n\n        if (this._markets[canonical] && !force) {\n            result = this._markets[canonical].summary;\n        } else {\n            result = await aux;\n        }\n\n        this.resortTopMarkets();\n        this.setMarketSummary();\n        this.onMarketSummary.next(result);\n\n        return result;\n    }\n\n    async getAllTablesSumaries(): Promise<any> {\n        return this.waitOrderSummary.then(async _ => {\n            var promises = [];\n\n            for (var i in this._markets) {\n                if (i.indexOf(\".\") == -1) continue;\n                var p = this.getMarketSummary(this._markets[i].comodity, this._markets[i].currency, true);\n                promises.push(p);\n            }\n\n            return Promise.all(promises).then(_ => {\n                this.updateTokensSummary();\n            });\n        })\n    }\n    \n\n    //\n    // --------------------------------------------------------------\n    // Aux functions\n    private auxProcessRowsToOrders(rows:any[]): Order[] {\n        var result: Order[] = [];\n        for (var i=0; i < rows.length; i++) {\n            var price = new AssetDEX(rows[i].price, this);\n            var inverse = new AssetDEX(rows[i].inverse, this);\n            var selling = new AssetDEX(rows[i].selling, this);\n            var total = new AssetDEX(rows[i].total, this);\n            var order:Order;\n\n            var scope = this.getScopeFor(price.token, inverse.token);\n            var canonical = this.canonicalScope(scope);\n            var reverse_scope = this.inverseScope(canonical);\n            \n\n            if (reverse_scope == scope) {\n                order = {\n                    id: rows[i].id,\n                    price: price,\n                    inverse: inverse,\n                    total: selling,\n                    deposit: selling,\n                    telos: total,\n                    owner: rows[i].owner\n                }\n            } else {\n                order = {\n                    id: rows[i].id,\n                    price: inverse,\n                    inverse: price,\n                    total: total,\n                    deposit: selling,\n                    telos: selling,\n                    owner: rows[i].owner\n                }\n            }\n            result.push(order);\n        }\n        return result;\n    }\n\n    private auxGetLabelForHour(hh:number): string {\n        var hours = [\n            \"h.zero\",\n            \"h.one\",\n            \"h.two\",\n            \"h.three\",\n            \"h.four\",\n            \"h.five\",\n            \"h.six\",\n            \"h.seven\",\n            \"h.eight\",\n            \"h.nine\",\n            \"h.ten\",\n            \"h.eleven\",\n            \"h.twelve\",\n            \"h.thirteen\",\n            \"h.fourteen\",\n            \"h.fifteen\",\n            \"h.sixteen\",\n            \"h.seventeen\",\n            \"h.eighteen\",\n            \"h.nineteen\",\n            \"h.twenty\",\n            \"h.twentyone\",\n            \"h.twentytwo\",\n            \"h.twentythree\"\n        ]\n        return hours[hh];\n    }\n\n    private auxGetCurrencyToken(scope: string) {\n        console.assert(!!scope, \"ERROR: invalid scope: '\"+ scope +\"'\");\n        console.assert(scope.split(\".\").length == 2, \"ERROR: invalid scope: '\"+ scope +\"'\");\n        var currency_sym = scope.split(\".\")[1].toUpperCase();\n        var currency = this.getTokenNow(currency_sym);\n        return currency;\n    }\n\n    private auxGetComodityToken(scope: string) {\n        console.assert(!!scope, \"ERROR: invalid scope: '\"+ scope +\"'\");\n        console.assert(scope.split(\".\").length == 2, \"ERROR: invalid scope: '\"+ scope +\"'\");\n        var comodity_sym = scope.split(\".\")[0].toUpperCase();\n        var comodity = this.getTokenNow(comodity_sym);\n        return comodity;        \n    }\n\n    private auxAssertScope(scope:string): Market {\n        var comodity = this.auxGetComodityToken(scope);\n        var currency = this.auxGetCurrencyToken(scope);\n        var aux_asset_com = new AssetDEX(0, comodity);\n        var aux_asset_cur = new AssetDEX(0, currency);\n\n        var market_summary:MarketSummary = {\n            scope: scope,\n            price: aux_asset_cur,\n            price_24h_ago: aux_asset_cur,\n            inverse: aux_asset_com,\n            inverse_24h_ago: aux_asset_com,\n            max_inverse: aux_asset_com,\n            max_price: aux_asset_cur,\n            min_inverse: aux_asset_com,\n            min_price: aux_asset_cur,\n            records: [],\n            volume: aux_asset_cur,\n            amount: aux_asset_com,\n            percent: 0,\n            ipercent: 0,\n            percent_str: \"0%\",\n            ipercent_str: \"0%\",\n        }\n\n        return this._markets[scope] || {\n            scope: scope,\n            comodity: comodity,\n            currency: currency,\n            orders: { sell: [], buy: [] },\n            deals: 0,\n            direct: 0,\n            inverse: 0,\n            history: [],\n            tx: {},\n            blocks: 0,\n            block: {},\n            blocklist: [],\n            blocklevels: [[]],\n            reverseblocks: [],\n            reverselevels: [[]],\n            summary: market_summary,\n            header: { \n                sell: {total:aux_asset_com, orders:0}, \n                buy: {total:aux_asset_cur, orders:0}\n            },\n        };        \n    }\n\n    private fetchDeposits(account): Promise<TableResult> {\n        return this.contract.getTable(\"deposits\", {scope:account}).then(result => {\n            return result;\n        });\n    }\n\n    private async fetchBalances(account): Promise<any> {\n        return this.waitTokensLoaded.then(async _ => {\n            var contracts = {};\n            var balances = [];\n            for (var i in this.tokens) {\n                if (this.tokens[i].offchain) continue;\n                contracts[this.tokens[i].contract] = true;\n            }\n            for (var contract in contracts) {\n                this.feed.setLoading(\"balances-\"+contract, true);\n            }            \n            for (var contract in contracts) {\n                var result = await this.contract.getTable(\"accounts\", {\n                    contract:contract,\n                    scope: account || this.current.name\n                });\n                for (var i in result.rows) {\n                    balances.push(new AssetDEX(result.rows[i].balance, this));\n                }\n                this.feed.setLoading(\"balances-\"+contract, false);\n            }\n            return balances;\n        });\n    }\n\n    private fetchOrders(params:TableParams): Promise<TableResult> {\n        return this.contract.getTable(\"sellorders\", params).then(result => {\n            return result;\n        });\n    }\n\n    private fetchOrderSummary(): Promise<TableResult> {\n        return this.contract.getTable(\"ordersummary\").then(result => {\n            return result;\n        });\n    }\n\n    private fetchBlockHistory(scope:string, page:number = 0, pagesize:number = 25): Promise<TableResult> {\n        var canonical:string = this.canonicalScope(scope);\n        var pages = this.getBlockHistoryTotalPagesFor(canonical, pagesize);\n        var id = page*pagesize;\n        // console.log(\"VapaeeDEX.fetchBlockHistory(\", scope, \",\",page,\",\",pagesize,\"): id:\", id, \"pages:\", pages);\n        if (page < pages) {\n            if (this._markets && this._markets[canonical] && this._markets[canonical].block[\"id-\" + id]) {\n                var result:TableResult = {more:false,rows:[]};\n                for (var i=0; i<pagesize; i++) {\n                    var id_i = id+i;\n                    var block = this._markets[canonical].block[\"id-\" + id_i];\n                    if (block) {\n                        result.rows.push(block);\n                    } else {\n                        break;\n                    }\n                }\n                if (result.rows.length == pagesize) {\n                    // we have the complete page in memory\n                    // console.log(\"VapaeeDEX.fetchHistory(\", scope, \",\",page,\",\",pagesize,\"): result:\", result.rows.map(({ id }) => id));\n                    return Promise.resolve(result);\n                }                \n            }\n        }\n\n        return this.contract.getTable(\"blockhistory\", {scope:canonical, limit:pagesize, lower_bound:\"\"+(page*pagesize)}).then(result => {\n            // console.log(\"**************\");\n            // console.log(\"block History crudo:\", result);\n            this._markets[canonical] = this.auxAssertScope(canonical);\n            this._markets[canonical].block = this._markets[canonical].block || {}; \n            // console.log(\"this._markets[scope].block:\", this._markets[scope].block);\n            for (var i=0; i < result.rows.length; i++) {\n                var block:HistoryBlock = {\n                    id: result.rows[i].id,\n                    hour: result.rows[i].hour,\n                    str: \"\",\n                    price: new AssetDEX(result.rows[i].price, this),\n                    inverse: new AssetDEX(result.rows[i].inverse, this),\n                    entrance: new AssetDEX(result.rows[i].entrance, this),\n                    max: new AssetDEX(result.rows[i].max, this),\n                    min: new AssetDEX(result.rows[i].min, this),\n                    volume: new AssetDEX(result.rows[i].volume, this),\n                    amount: new AssetDEX(result.rows[i].amount, this),\n                    date: new Date(result.rows[i].date)\n                }\n                block.str = JSON.stringify([block.max.str, block.entrance.str, block.price.str, block.min.str]);\n                this._markets[canonical].block[\"id-\" + block.id] = block;\n            }   \n            // console.log(\"block History final:\", this._markets[scope].block);\n            // console.log(\"-------------\");\n            return result;\n        });\n    }    \n\n    private fetchHistory(scope:string, page:number = 0, pagesize:number = 25): Promise<TableResult> {\n        var canonical:string = this.canonicalScope(scope);\n        var pages = this.getHistoryTotalPagesFor(canonical, pagesize);\n        var id = page*pagesize;\n        // console.log(\"VapaeeDEX.fetchHistory(\", scope, \",\",page,\",\",pagesize,\"): id:\", id, \"pages:\", pages);\n        if (page < pages) {\n            if (this._markets && this._markets[canonical] && this._markets[canonical].tx[\"id-\" + id]) {\n                var result:TableResult = {more:false,rows:[]};\n                for (var i=0; i<pagesize; i++) {\n                    var id_i = id+i;\n                    var trx = this._markets[canonical].tx[\"id-\" + id_i];\n                    if (trx) {\n                        result.rows.push(trx);\n                    } else {\n                        break;\n                    }\n                }\n                if (result.rows.length == pagesize) {\n                    // we have the complete page in memory\n                    // console.log(\"VapaeeDEX.fetchHistory(\", scope, \",\",page,\",\",pagesize,\"): result:\", result.rows.map(({ id }) => id));\n                    return Promise.resolve(result);\n                }                \n            }\n        }\n\n        return this.contract.getTable(\"history\", {scope:scope, limit:pagesize, lower_bound:\"\"+(page*pagesize)}).then(result => {\n\n            // console.log(\"**************\");\n            // console.log(\"History crudo:\", result);\n            \n            this._markets[canonical] = this.auxAssertScope(canonical);\n            this._markets[canonical].history = [];\n            this._markets[canonical].tx = this._markets[canonical].tx || {}; \n\n            // console.log(\"this.scopes[scope].tx:\", this.scopes[scope].tx);\n\n            for (var i=0; i < result.rows.length; i++) {\n                var transaction:HistoryTx = {\n                    id: result.rows[i].id,\n                    str: \"\",\n                    amount: new AssetDEX(result.rows[i].amount, this),\n                    payment: new AssetDEX(result.rows[i].payment, this),\n                    buyfee: new AssetDEX(result.rows[i].buyfee, this),\n                    sellfee: new AssetDEX(result.rows[i].sellfee, this),\n                    price: new AssetDEX(result.rows[i].price, this),\n                    inverse: new AssetDEX(result.rows[i].inverse, this),\n                    buyer: result.rows[i].buyer,\n                    seller: result.rows[i].seller,\n                    date: new Date(result.rows[i].date),\n                    isbuy: !!result.rows[i].isbuy\n                }\n                transaction.str = transaction.price.str + \" \" + transaction.amount.str;\n                this._markets[canonical].tx[\"id-\" + transaction.id] = transaction;\n            }\n\n            for (var j in this._markets[canonical].tx) {\n                this._markets[canonical].history.push(this._markets[canonical].tx[j]);\n            }\n\n            this._markets[canonical].history.sort(function(a:HistoryTx, b:HistoryTx){\n                if(a.date < b.date) return 1;\n                if(a.date > b.date) return -1;\n                if(a.id < b.id) return 1;\n                if(a.id > b.id) return -1;\n            });            \n\n            // console.log(\"History final:\", this.scopes[scope].history);\n            // console.log(\"-------------\");\n            return result;\n        });\n    }\n    \n    private async fetchActivity(page:number = 0, pagesize:number = 25) {\n        var id = page*pagesize+1;\n        // console.log(\"VapaeeDEX.fetchActivity(\", page,\",\",pagesize,\"): id:\", id);\n        \n        if (this.activity.events[\"id-\" + id]) {\n            var pageEvents = [];\n            for (var i=0; i<pagesize; i++) {\n                var id_i = id+i;\n                var event = this.activity.events[\"id-\" + id_i];\n                if (!event) {\n                    break;\n                }\n            }\n            if (pageEvents.length == pagesize) {\n                return;\n            }                \n        }        \n\n        return this.contract.getTable(\"events\", {limit:pagesize, lower_bound:\"\"+id}).then(result => {\n            // console.log(\"**************\");\n            // console.log(\"Activity crudo:\", result);\n            var list:EventLog[] = [];\n\n            for (var i=0; i < result.rows.length; i++) {\n                var id = result.rows[i].id;\n                var event:EventLog = <EventLog>result.rows[i];\n                if (!this.activity.events[\"id-\" + id]) {\n                    this.activity.events[\"id-\" + id] = event;\n                    list.push(event);\n                    // console.log(\"**************>>>>>\", id);\n                }\n            }\n\n            this.activity.list = [].concat(this.activity.list).concat(list);\n            this.activity.list.sort(function(a:EventLog, b:EventLog){\n                if(a.date < b.date) return 1;\n                if(a.date > b.date) return -1;\n                if(a.id < b.id) return 1;\n                if(a.id > b.id) return -1;\n            });\n\n        });\n\n    }\n\n    private fetchUserOrders(user:string): Promise<TableResult> {\n        return this.contract.getTable(\"userorders\", {scope:user, limit:200}).then(result => {\n            return result;\n        });\n    }\n    \n    private fetchSummary(scope): Promise<TableResult> {\n        return this.contract.getTable(\"tablesummary\", {scope:scope}).then(result => {\n            return result;\n        });\n    }\n\n    private fetchTokenStats(token): Promise<TableResult> {\n        this.feed.setLoading(\"token-stat-\"+token.symbol, true);\n        return this.contract.getTable(\"stat\", {contract:token.contract, scope:token.symbol}).then(result => {\n            token.stat = result.rows[0];\n            if (token.stat.issuers && token.stat.issuers[0] == \"everyone\") {\n                token.fake = true;\n            }\n            this.feed.setLoading(\"token-stat-\"+token.symbol, false);\n            return token;\n        });\n    }\n\n    private fetchTokensStats(extended: boolean = true) {\n        console.log(\"Vapaee.fetchTokens()\");\n        this.feed.setLoading(\"token-stats\", true);\n        return this.waitTokensLoaded.then(_ => {\n\n            var priomises = [];\n            for (var i in this.tokens) {\n                if (this.tokens[i].offchain) continue;\n                priomises.push(this.fetchTokenStats(this.tokens[i]));\n            }\n\n            return Promise.all<any>(priomises).then(result => {\n                this.setTokenStats(this.tokens);\n                this.feed.setLoading(\"token-stats\", false);\n                return this.tokens;\n            });            \n        });\n\n    }\n\n    // for each tokens this sorts its markets based on volume\n    private updateTokensMarkets() {\n        return Promise.all([\n            this.waitTokensLoaded,\n            this.waitMarketSummary\n        ]).then(_ => {\n            // a cada token le asigno un price que sale de verificar su price en el mercado principal XXX/TLOS\n            for (var i in this.tokens) {\n                if (this.tokens[i].offchain) continue; // discard tokens that are not on-chain\n                \n                var token = this.tokens[i];\n                var quantity:AssetDEX = new AssetDEX(0, token);\n                token.markets = [];\n\n                for (var scope in this._markets) {\n                    if (scope.indexOf(\".\") == -1) continue;\n                    var table:Market = this._markets[scope];\n\n                    if (table.currency.symbol == token.symbol) {\n                        table = this.market(this.inverseScope(scope));\n                    }\n\n                    if (table.comodity.symbol == token.symbol) {\n                        token.markets.push(table);\n                    }\n                }\n            }\n\n            token.markets.sort((a:Market, b:Market) => {\n                // push offchain tokens to the end of the token list\n                var a_amount = a.summary ? a.summary.amount : new AssetDEX();\n                var b_amount = b.summary ? b.summary.amount : new AssetDEX();\n    \n                console.assert(a_amount.token.symbol == b_amount.token.symbol, \"ERROR: comparing two different tokens \" + a_amount.str + \", \" + b_amount.str)\n                if(a_amount.amount.isGreaterThan(b_amount.amount)) return -1;\n                if(a_amount.amount.isLessThan(b_amount.amount)) return 1;\n\n                return 0;\n            });\n\n        });   \n    }\n    \n    private updateTokensSummary(times: number = 20) {\n        if (times > 1) {\n            for (var i = times; i>0; i--) this.updateTokensSummary(1);\n            this.resortTokens();\n            return;\n        }\n        return Promise.all([\n            this.waitTokensLoaded,\n            this.waitMarketSummary\n        ]).then(_ => {\n            // console.log(\"(ini) ---------------------------------------------\");\n            // console.log(\"Vapaee.updateTokensSummary()\"); \n\n            // mapping of how much (amount of) tokens have been traded agregated in all markets\n            var amount_map:{[key:string]:AssetDEX} = {};\n\n            // a cada token le asigno un price que sale de verificar su price en el mercado principal XXX/TLOS\n            for (var i in this.tokens) {\n                if (this.tokens[i].offchain) continue; // discard tokens that are not on-chain\n                \n                var token = this.tokens[i];\n                var quantity:AssetDEX = new AssetDEX(0, token);\n\n                for (var j in this._markets) {\n                    if (j.indexOf(\".\") == -1) continue;\n                    var table:Market = this._markets[j];\n                    \n                    if (table.comodity.symbol == token.symbol) {\n                        quantity = quantity.plus(table.summary.amount);\n                    }\n                    if (table.currency.symbol == token.symbol) {\n                        quantity = quantity.plus(table.summary.volume);\n                    }\n\n                    if (table.comodity.symbol == token.symbol && table.currency.symbol == this.telos.symbol) {\n                        if (token.summary && token.summary.price.amount.toNumber() == 0) {\n                            delete token.summary;\n                        }\n                        \n                        token.summary = token.summary || {\n                            price: table.summary.price.clone(),\n                            price_24h_ago: table.summary.price_24h_ago.clone(),\n                            volume: table.summary.volume.clone(),\n                            percent: table.summary.percent,\n                            percent_str: table.summary.percent_str,\n                        }\n                    }\n                }\n\n                token.summary = token.summary || {\n                    price: new AssetDEX(0, this.telos),\n                    price_24h_ago: new AssetDEX(0, this.telos),\n                    volume: new AssetDEX(0, this.telos),\n                    percent: 0,\n                    percent_str: \"0%\",\n                }\n\n                amount_map[token.symbol] = quantity;\n            }\n\n            this.telos.summary = {\n                price: new AssetDEX(1, this.telos),\n                price_24h_ago: new AssetDEX(1, this.telos),\n                volume: new AssetDEX(-1, this.telos),\n                percent: 0,\n                percent_str: \"0%\"\n            }\n\n            // console.log(\"amount_map: \", amount_map);\n\n\n            \n            var ONE = new BigNumber(1);\n\n            for (var i in this.tokens) {\n                var token = this.tokens[i];\n                if (token.offchain) continue;\n                if (!token.summary) continue;\n                if (token.symbol == this.telos.symbol) continue;\n                // console.log(\"TOKEN: -------- \", token.symbol, token.summary.price.str, token.summary.price_24h_ago.str );\n                \n                var volume = new AssetDEX(0, this.telos);\n                var price = new AssetDEX(0, this.telos);\n                var price_init = new AssetDEX(0, this.telos);\n                var total_quantity = amount_map[token.symbol];\n\n                if (total_quantity.toNumber() == 0) continue;\n\n                // if (token.symbol == \"ACORN\") console.log(\"TOKEN: -------- \", token.symbol, token.summary.price.str, token.summary.price_24h_ago.str );\n                for (var j in this._markets) {\n                    if (j.indexOf(\".\") == -1) continue;\n                    var table = this._markets[j];\n                    var currency_price = table.currency.symbol == \"TLOS\" ? ONE : table.currency.summary.price.amount;\n                    var currency_price_24h_ago = table.currency.symbol == \"TLOS\" ? ONE : table.currency.summary.price_24h_ago.amount;\n                    if (table.comodity.symbol == token.symbol || table.currency.symbol == token.symbol) {\n\n                        // how much quantity is involved in this market\n                        var quantity = new AssetDEX();\n                        if (table.comodity.symbol == token.symbol) {\n                            quantity = table.summary.amount.clone();\n                        } else if (table.currency.symbol == token.symbol) {\n                            quantity = table.summary.volume.clone();\n                        }\n\n                        // calculate the influence-weight of this market over the token\n                        var weight = quantity.amount.dividedBy(total_quantity.amount);\n\n                        // calculate the price of this token in this market (expressed in TLOS)\n                        var price_amount;\n                        if (table.comodity.symbol == token.symbol) {\n                            price_amount = table.summary.price.amount.multipliedBy(table.currency.summary.price.amount);\n                        } else if (table.currency.symbol == token.symbol) {\n                            price_amount = table.summary.inverse.amount.multipliedBy(table.comodity.summary.price.amount);\n                        }\n\n                        // calculate this market token price multiplied by the wight of this market (ponderated price)\n                        var price_i = new AssetDEX(price_amount.multipliedBy(weight), this.telos);\n\n                        // calculate the price of this token in this market 24h ago (expressed in TLOS)\n                        var price_init_amount;\n                        if (table.comodity.symbol == token.symbol) {\n                            price_init_amount = table.summary.price_24h_ago.amount.multipliedBy(table.currency.summary.price_24h_ago.amount);\n                        } else if (table.currency.symbol == token.symbol) {\n                            price_init_amount = table.summary.inverse_24h_ago.amount.multipliedBy(table.comodity.summary.price_24h_ago.amount);\n                        }\n\n                        // calculate this market token price 24h ago multiplied by the weight of this market (ponderated init_price)\n                        var price_init_i = new AssetDEX(price_init_amount.multipliedBy(weight), this.telos);\n\n                        // how much volume is involved in this market\n                        var volume_i;\n                        if (table.comodity.symbol == token.symbol) {\n                            volume_i = table.summary.volume.clone();\n                        } else if (table.currency.symbol == token.symbol) {\n                            volume_i = table.summary.amount.clone();\n                        }\n\n                        // if this market does not mesure the volume in TLOS, then convert quantity to TLOS by multiplied By volume's token price\n                        if (volume_i.token.symbol != this.telos.symbol) {\n                            volume_i = new AssetDEX(quantity.amount.multipliedBy(quantity.token.summary.price.amount), this.telos);\n                        }\n                        \n\n                        price = price.plus(new AssetDEX(price_i, this.telos));\n                        price_init = price_init.plus(new AssetDEX(price_init_i, this.telos));\n                        volume = volume.plus(new AssetDEX(volume_i, this.telos));\n\n                        // console.log(\"-i\",i, table);\n                        // console.log(\"- weight:\", weight.toNumber());\n                        // console.log(\"- table.summary.price.str\", table.summary.price.str);\n                        // console.log(\"- table.summary.price.amount.multipliedBy(weight).toNumber()\", table.summary.price.amount.multipliedBy(weight).toNumber());\n                        // console.log(\"- currency_price.toNumber()\", currency_price.toNumber());\n                        // console.log(\"- price_i:\", price_i.toNumber());\n                        // console.log(\"- price ->\", price.str);\n                        // console.log(\"- currency_price_24h_ago:\", currency_price_24h_ago.toNumber());\n                        // console.log(\"- table.summary.price_24h_ago:\", table.summary.price_24h_ago.str);\n                        // console.log(\"- price_init_i:\", price_init_i.toNumber());\n                        // console.log(\"- price_init ->\", price_init.str);\n                        \n\n                    }\n                }\n\n                var diff = price.minus(price_init);\n                var ratio:number = 0;\n                if (price_init.amount.toNumber() != 0) {\n                    ratio = diff.amount.dividedBy(price_init.amount).toNumber();\n                }\n                var percent = Math.floor(ratio * 10000) / 100;\n                var percent_str = (isNaN(percent) ? 0 : percent) + \"%\";\n\n                // console.log(\"price\", price.str);\n                // console.log(\"price_24h_ago\", price_init.str);\n                // console.log(\"volume\", volume.str);\n                // console.log(\"percent\", percent);\n                // console.log(\"percent_str\", percent_str);\n                // console.log(\"ratio\", ratio);\n                // console.log(\"diff\", diff.str);\n\n                token.summary.price = price;\n                token.summary.price_24h_ago = price_init;\n                token.summary.percent = percent;\n                token.summary.percent_str = percent_str;\n                token.summary.volume = volume;\n\n            }\n            \n            // console.log(\"(end) ---------------------------------------------\");\n            this.setTokenSummary();\n        });\n    }\n\n    private fetchTokens(extended: boolean = true) {\n        console.log(\"Vapaee.fetchTokens()\");\n\n        return this.contract.getTable(\"tokens\").then(result => {\n            var data = {\n                tokens: <TokenDEX[]>result.rows\n            }\n\n            for (var i in data.tokens) {\n                data.tokens[i].scope = data.tokens[i].symbol.toLowerCase() + \".tlos\";\n            }\n\n            return data;\n        });\n    }\n\n    private resortTokens() {\n        // console.log(\"(ini) ------------------------------------------------------------\");\n        // console.log(\"resortTokens()\");\n        // console.log(\"this.tokens[0]\", this.tokens[0].summary);\n        this.tokens.sort((a:TokenDEX, b:TokenDEX) => {\n            // push offchain tokens to the end of the token list\n            if (a.offchain || !a.verified) return 1;\n            if (b.offchain || !b.verified) return -1;\n\n            // console.log(\" --- \", a.symbol, \"-\", b.symbol, \" --- \");\n            // console.log(\"     \", a.summary ? a.summary.volume.str : \"0\", \"-\", b.summary ? b.summary.volume.str : \"0\");\n            \n            var a_vol = a.summary ? a.summary.volume : new AssetDEX();\n            var b_vol = b.summary ? b.summary.volume : new AssetDEX();\n\n            if(a_vol.amount.isGreaterThan(b_vol.amount)) return -1;\n            if(a_vol.amount.isLessThan(b_vol.amount)) return 1;\n\n            if(a.appname < b.appname) return -1;\n            if(a.appname > b.appname) return 1;\n            return 0;\n        }); \n\n        // console.log(\"resortTokens()\", this.tokens);\n        // console.log(\"(end) ------------------------------------------------------------\");\n\n        this.onTokensReady.next(this.tokens);        \n    }\n\n    private resortTopMarkets() {\n        this.waitTokenSummary.then(_ => {\n\n            this.topmarkets = [];\n            var inverse: string;\n            var market:Market;\n            for (var scope in this._markets) {\n                market = this._markets[scope];\n                if (market.direct >= market.inverse) {\n                    this.topmarkets.push(market);\n                } else {\n                    inverse = this.inverseScope(scope);\n                    market = this.market(inverse);\n                    this.topmarkets.push(market);\n                }\n            }\n\n            this.topmarkets.sort((a:Market, b:Market) => {\n                \n                var a_vol = a.summary ? a.summary.volume : new AssetDEX();\n                var b_vol = b.summary ? b.summary.volume : new AssetDEX();\n\n                if (a_vol.token != this.telos) {\n                    a_vol = new AssetDEX(a_vol.amount.multipliedBy(a_vol.token.summary.price.amount),this.telos);\n                }\n                if (b_vol.token != this.telos) {\n                    b_vol = new AssetDEX(b_vol.amount.multipliedBy(b_vol.token.summary.price.amount),this.telos);\n                }\n\n                console.assert(b_vol.token == this.telos, \"ERROR: volume misscalculated\");\n                console.assert(a_vol.token == this.telos, \"ERROR: volume misscalculated\");\n\n                if(a_vol.amount.isGreaterThan(b_vol.amount)) return -1;\n                if(a_vol.amount.isLessThan(b_vol.amount)) return 1;\n\n                if(a.currency == this.telos && b.currency != this.telos) return -1;\n                if(b.currency == this.telos && a.currency != this.telos) return 1;\n\n                if(a.comodity.appname < b.comodity.appname) return -1;\n                if(a.comodity.appname > b.comodity.appname) return 1;\n    \n            });\n\n            this.onTopMarketsReady.next(this.topmarkets); \n        });\n\n    }\n\n\n}\n\n\n\n","import { NgModule } from '@angular/core';\nimport { VapaeeDEX } from './dex.service'\n\n@NgModule({\n  imports: [\n  ],\n  declarations: [],\n  providers: [VapaeeDEX],\n  exports: []\n})\nexport class VapaeeDexModule { }\n"]}