{"version":3,"file":"vapaee-dex.js.map","sources":["ng://@vapaee/dex/lib/token-dex.class.ts","ng://@vapaee/dex/lib/asset-dex.class.ts","ng://@vapaee/dex/lib/dex.service.ts","ng://@vapaee/dex/lib/dex.module.ts"],"sourcesContent":["import { Token } from '@vapaee/scatter';\nimport { AssetDEX } from \"./asset-dex.class\";\n\n/*\nexport interface Token {\n    symbol: string,\n    precision?: number,\n    contract?: string,\n    appname?: string,\n    website?: string,\n    logo?: string,\n    logolg?: string,\n    verified?: boolean,\n    fake?: boolean,\n    offchain?: boolean,\n    scope?: string,\n    stat?: {\n        supply: string,\n        max_supply: string,\n        issuer?: string,\n        owner?: string,\n        issuers?: string[]\n    },\n    summary?: {\n        volume: Asset,\n        price: Asset,\n        price_24h_ago: Asset,\n        percent?:number,\n        percent_str?:string\n    }\n\n}\n*/\nexport class TokenDEX extends Token {\n    // private _str: string;\n    // private _symbol: string;\n    // private _precision: number;\n    // private _contract: string;\n\n    public appname: string;\n    public website: string;\n    public logo: string;\n    public logolg: string;\n    public verified: boolean;\n    public fake: boolean;\n    public offchain: boolean;\n    public scope: string;\n\n    stat?: {\n        supply: string,\n        max_supply: string,\n        issuer?: string,\n        owner?: string,\n        issuers?: string[]\n    };\n\n    summary?: {\n        volume: AssetDEX,\n        price: AssetDEX,\n        price_24h_ago: AssetDEX,\n        percent?:number,\n        percent_str?:string\n    }    \n\n    constructor(obj:any = null) {\n        super(obj);\n        if (typeof obj == \"object\") {\n            delete obj.symbol;\n            delete obj.precision;\n            delete obj.contract;\n            Object.assign(this, obj);\n        }\n        this.toString();\n    }\n\n\n}","import BigNumber from 'bignumber.js';\nimport { TokenDEX } from './token-dex.class';\nimport { Asset } from '@vapaee/scatter';\n\nexport interface IVapaeeDEX {\n    getTokenNow(symbol:string): TokenDEX;\n}\n\nexport class AssetDEX extends Asset {\n    amount:BigNumber;\n    token:TokenDEX;\n    \n    constructor(a: any = null, b: any = null) {\n        super(a,b);\n\n        if (a instanceof AssetDEX) {\n            this.amount = a.amount;\n            this.token = b;\n            return;\n        }\n\n        if (!!b && b['getTokenNow']) {\n            this.parseDex(a,b);\n        }\n\n    }\n\n    clone(): AssetDEX {\n        return new AssetDEX(this.amount, this.token);\n    }\n\n    plus(b:AssetDEX) {\n        console.assert(!!b, \"ERROR: b is not an Asset\", b, this.str);\n        console.assert(b.token.symbol == this.token.symbol, \"ERROR: trying to sum assets with different tokens: \" + this.str + \" and \" + b.str);\n        var amount = this.amount.plus(b.amount);\n        return new AssetDEX(amount, this.token);\n    }\n\n    minus(b:AssetDEX) {\n        console.assert(!!b, \"ERROR: b is not an Asset\", b, this.str);\n        console.assert(b.token.symbol == this.token.symbol, \"ERROR: trying to substract assets with different tokens: \" + this.str + \" and \" + b.str);\n        var amount = this.amount.minus(b.amount);\n        return new AssetDEX(amount, this.token);\n    }    \n\n    parseDex(text: string, dex: IVapaeeDEX) {\n        if (text == \"\") return;\n        var sym = text.split(\" \")[1];\n        this.token = dex.getTokenNow(sym);\n        var amount_str = text.split(\" \")[0];\n        this.amount = new BigNumber(amount_str);\n    }\n\n    \n    toString(decimals:number = -1): string {\n        if (!this.token) return \"0.0000\";\n        return this.valueToString(decimals) + \" \" + this.token.symbol.toUpperCase();\n    }\n\n    inverse(token: TokenDEX): AssetDEX {\n        var result = new BigNumber(1).dividedBy(this.amount);\n        var asset =  new AssetDEX(result, token);\n        return asset;\n    }\n}","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport BigNumber from \"bignumber.js\";\nimport { CookieService } from 'ngx-cookie-service';\nimport { DatePipe } from '@angular/common';\nimport { TokenDEX } from './token-dex.class';\nimport { AssetDEX } from './asset-dex.class';\nimport { Feedback } from '@vapaee/feedback';\nimport { VapaeeScatter, Account, AccountData, SmartContract, TableResult, TableParams } from '@vapaee/scatter';\n\n@Injectable({\n    providedIn: \"root\"\n})\nexport class VapaeeDEX {\n\n    public loginState: string;\n    /*\n    public loginState: string;\n    - 'no-scatter': Scatter no detected\n    - 'no-logged': Scatter detected but user is not logged\n    - 'account-ok': user logger with scatter\n    */\n    private _markets: MarketMap;\n    private _reverse: MarketMap;\n\n    public zero_telos: AssetDEX;\n    public telos: TokenDEX;\n    public tokens: TokenDEX[];\n    public contract: SmartContract;\n    public feed: Feedback;\n    public current: Account;\n    public last_logged: string;\n    public contract_name: string;   \n    public deposits: AssetDEX[];\n    public balances: AssetDEX[];\n    public userorders: UserOrdersMap;\n    public onLoggedAccountChange:Subject<string> = new Subject();\n    public onCurrentAccountChange:Subject<string> = new Subject();\n    public onHistoryChange:Subject<string> = new Subject();\n    public onMarketSummary:Subject<MarketSummary> = new Subject();\n    // public onBlocklistChange:Subject<any[][]> = new Subject();\n    public onTokensReady:Subject<TokenDEX[]> = new Subject();\n    public onMarketReady:Subject<TokenDEX[]> = new Subject();\n    public onTradeUpdated:Subject<any> = new Subject();\n    vapaeetokens:string = \"vapaeetokens\";\n\n    activityPagesize:number = 10;\n    \n    activity:{\n        total:number;\n        events:{[id:string]:EventLog};\n        list:EventLog[];\n    };\n    \n    private setOrderSummary: Function;\n    public waitOrderSummary: Promise<any> = new Promise((resolve) => {\n        this.setOrderSummary = resolve;\n    });\n\n    private setTokenStats: Function;\n    public waitTokenStats: Promise<any> = new Promise((resolve) => {\n        this.setTokenStats = resolve;\n    });\n\n    private setMarketSummary: Function;\n    public waitMarketSummary: Promise<any> = new Promise((resolve) => {\n        this.setMarketSummary = resolve;\n    });\n\n    private setTokenSummary: Function;\n    public waitTokenSummary: Promise<any> = new Promise((resolve) => {\n        this.setTokenSummary = resolve;\n    });\n\n    private setTokensLoaded: Function;\n    public waitTokensLoaded: Promise<any> = new Promise((resolve) => {\n        this.setTokensLoaded = resolve;\n    });\n    constructor(\n        private scatter: VapaeeScatter,\n        private cookies: CookieService,\n        private datePipe: DatePipe\n    ) {\n        this._markets = {};\n        this._reverse = {};\n        this.activity = {total:0, events:{}, list:[]};\n        this.current = this.default;\n        this.contract_name = this.vapaeetokens;\n        this.contract = this.scatter.getSmartContract(this.contract_name);\n        this.feed = new Feedback();\n        this.scatter.onLogggedStateChange.subscribe(this.onLoggedChange.bind(this));\n        this.updateLogState();\n        this.fetchTokens().then(data => {\n            this.tokens = data.tokens;\n            this.tokens.push(new TokenDEX({\n                appname: \"Viitasphere\",\n                contract: \"viitasphere1\",\n                logo: \"/assets/logos/viitasphere.png\",\n                logolg: \"/assets/logos/viitasphere-lg.png\",\n                precision: 4,\n                scope: \"viitct.tlos\",\n                symbol: \"VIITA\",\n                verified: false,\n                website: \"https://viitasphere.com\"\n            }));\n            this.tokens.push(new TokenDEX({\n                appname: \"Viitasphere\",\n                contract: \"viitasphere1\",\n                logo: \"/assets/logos/viitasphere.png\",\n                logolg: \"/assets/logos/viitasphere-lg.png\",\n                precision: 0,\n                scope: \"viitct.tlos\",\n                symbol: \"VIICT\",\n                verified: false,\n                website: \"https://viitasphere.com\"\n            }));\n            this.zero_telos = new AssetDEX(\"0.0000 TLOS\", this);\n            this.setTokensLoaded();\n            this.fetchTokensStats();\n            this.getOrderSummary();\n            this.getAllTablesSumaries();\n        });\n\n        // this.waitTokensLoaded.then(_ => {\n        // })\n\n\n        var timer;\n        this.onMarketSummary.subscribe(summary => {\n            clearTimeout(timer);\n            timer = setTimeout(_ => {\n                this.updateTokensSummary();\n            }, 100);\n        });    \n\n\n\n    }\n\n    // getters -------------------------------------------------------------\n    get default(): Account {\n        return this.scatter.default;\n    }\n\n    get logged() {\n        if (this.scatter.logged && !this.scatter.account) {\n            /*\n            console.error(\"WARNING!!!\");\n            console.log(this.scatter);\n            console.log(this.scatter.username);\n            console.error(\"*******************\");\n            */\n        }\n        return this.scatter.logged ?\n            (this.scatter.account ? this.scatter.account.name : this.scatter.default.name) :\n            null;\n    }\n\n    get account() {\n        return this.scatter.logged ? \n        this.scatter.account :\n        this.scatter.default;\n    }\n\n    // -- User Log State ---------------------------------------------------\n    login() {\n        this.feed.setLoading(\"login\", true);\n        this.feed.setLoading(\"log-state\", true);\n        console.log(\"VapaeeDEX.login() this.feed.loading('log-state')\", this.feed.loading('log-state'));\n        this.logout();\n        this.updateLogState();\n        console.log(\"VapaeeDEX.login() this.feed.loading('log-state')\", this.feed.loading('log-state'));\n        this.feed.setLoading(\"logout\", false);\n        return this.scatter.login().then(() => {\n            this.updateLogState();\n            this.feed.setLoading(\"login\", false);\n        }).catch(e => {\n            this.feed.setLoading(\"login\", false);\n            throw e;\n        });\n    }\n\n    logout() {\n        this.feed.setLoading(\"logout\", true);\n        this.scatter.logout();\n    }\n\n    onLogout() {\n        this.feed.setLoading(\"logout\", false);\n        console.log(\"VapaeeDEX.onLogout()\");\n        this.resetCurrentAccount(this.default.name);\n        this.updateLogState();\n        this.onLoggedAccountChange.next(this.logged);\n        this.cookies.delete(\"login\");\n        setTimeout(_  => { this.last_logged = this.logged; }, 400);\n    }\n    \n    onLogin(name:string) {\n        console.log(\"VapaeeDEX.onLogin()\", name);\n        this.resetCurrentAccount(name);\n        this.getDeposits();\n        this.getBalances();\n        this.updateLogState();\n        this.getUserOrders();\n        this.onLoggedAccountChange.next(this.logged);\n        this.last_logged = this.logged;\n        this.cookies.set(\"login\", this.logged);\n    }\n\n    onLoggedChange() {\n        console.log(\"VapaeeDEX.onLoggedChange()\");\n        if (this.scatter.logged) {\n            this.onLogin(this.scatter.account.name);\n        } else {\n            this.onLogout();\n        }\n    }\n\n    async resetCurrentAccount(profile:string) {\n        console.log(\"VapaeeDEX.resetCurrentAccount()\", this.current.name, \"->\", profile);\n        if (this.current.name != profile && (this.current.name == this.last_logged || profile != \"guest\")) {\n            this.feed.setLoading(\"account\", true);\n            this.current = this.default;\n            this.current.name = profile;\n            if (profile != \"guest\") {\n                this.current.data = await this.getAccountData(this.current.name);\n            } else {\n                console.error(\"------------------------------------------\");\n                console.error(\"------------------------------------------\");\n                console.error(\"WARNING!!! current is guest\", [profile, this.account, this.current]);\n                console.error(\"------------------------------------------\");\n                console.error(\"------------------------------------------\");\n            }\n            // this.scopes = {};\n            this.balances = [];\n            this.userorders = {};            \n            // console.log(\"this.onCurrentAccountChange.next(this.current.name) !!!!!!\");\n            this.onCurrentAccountChange.next(this.current.name);\n            this.updateCurrentUser();\n            this.feed.setLoading(\"account\", false);\n        }       \n    }\n\n    private updateLogState() {\n        this.loginState = \"no-scatter\";\n        this.feed.setLoading(\"log-state\", true);\n        console.log(\"VapaeeDEX.updateLogState() \", this.loginState, this.feed.loading(\"log-state\"));\n        this.scatter.waitConnected.then(() => {\n            this.loginState = \"no-logged\";\n            // console.log(\"VapaeeDEX.updateLogState()   \", this.loginState);\n            if (this.scatter.logged) {\n                this.loginState = \"account-ok\";\n                // console.log(\"VapaeeDEX.updateLogState()     \", this.loginState);\n            }\n            this.feed.setLoading(\"log-state\", false);\n            console.log(\"VapaeeDEX.updateLogState() \", this.loginState, this.feed.loading(\"log-state\"));\n        });\n\n        var timer2;\n        var timer1 = setInterval(_ => {\n            if (!this.scatter.feed.loading(\"connect\")) {\n                this.feed.setLoading(\"log-state\", false);\n                clearInterval(timer1);\n                clearInterval(timer2);\n            }\n        }, 200);\n\n        timer2 = setTimeout(_ => {\n            clearInterval(timer1);\n            this.feed.setLoading(\"log-state\", false);\n        }, 6000);\n        \n    }\n\n    private async getAccountData(name: string): Promise<AccountData>  {\n        return this.scatter.queryAccountData(name).catch(async _ => {\n            return this.default.data;\n        });\n    }\n\n    // Actions --------------------------------------------------------------\n    createOrder(type:string, amount:AssetDEX, price:AssetDEX) {\n        // \"alice\", \"buy\", \"2.50000000 CNT\", \"0.40000000 TLOS\"\n        // name owner, name type, const asset & total, const asset & price\n        this.feed.setLoading(\"order-\"+type, true);\n        return this.contract.excecute(\"order\", {\n            owner:  this.scatter.account.name,\n            type: type,\n            total: amount.toString(8),\n            price: price.toString(8)\n        }).then(async result => {\n            this.updateTrade(amount.token, price.token);\n            this.feed.setLoading(\"order-\"+type, false);\n            return result;\n        }).catch(e => {\n            this.feed.setLoading(\"order-\"+type, false);\n            console.error(e);\n            throw e;\n        });\n    }\n\n    cancelOrder(type:string, comodity:TokenDEX, currency:TokenDEX, orders:number[]) {\n        // '[\"alice\", \"buy\", \"CNT\", \"TLOS\", [1,0]]'\n        // name owner, name type, const asset & total, const asset & price\n        this.feed.setLoading(\"cancel-\"+type, true);\n        for (var i in orders) { this.feed.setLoading(\"cancel-\"+type+\"-\"+orders[i], true); }\n        return this.contract.excecute(\"cancel\", {\n            owner:  this.scatter.account.name,\n            type: type,\n            comodity: comodity.symbol,\n            currency: currency.symbol,\n            orders: orders\n        }).then(async result => {\n            this.updateTrade(comodity, currency);\n            this.feed.setLoading(\"cancel-\"+type, false);\n            for (var i in orders) { this.feed.setLoading(\"cancel-\"+type+\"-\"+orders[i], false); }    \n            return result;\n        }).catch(e => {\n            this.feed.setLoading(\"cancel-\"+type, false);\n            for (var i in orders) { this.feed.setLoading(\"cancel-\"+type+\"-\"+orders[i], false); }    \n            console.error(e);\n            throw e;\n        });\n    }\n\n    deposit(quantity:AssetDEX) {\n        // name owner, name type, const asset & total, const asset & price\n        var contract = this.scatter.getSmartContract(quantity.token.contract);\n        this.feed.setError(\"deposit\", null);\n        this.feed.setLoading(\"deposit\", true);\n        this.feed.setLoading(\"deposit-\"+quantity.token.symbol.toLowerCase(), true);\n        return contract.excecute(\"transfer\", {\n            from:  this.scatter.account.name,\n            to: this.vapaeetokens,\n            quantity: quantity.toString(),\n            memo: \"deposit\"\n        }).then(async result => {\n            this.feed.setLoading(\"deposit\", false);\n            this.feed.setLoading(\"deposit-\"+quantity.token.symbol.toLowerCase(), false);    \n            /*await*/ this.getDeposits();\n            /*await*/ this.getBalances();\n            return result;\n        }).catch(e => {\n            this.feed.setLoading(\"deposit\", false);\n            this.feed.setLoading(\"deposit-\"+quantity.token.symbol.toLowerCase(), false);\n            this.feed.setError(\"deposit\", typeof e == \"string\" ? e : JSON.stringify(e,null,4));\n            console.error(e);\n            throw e;\n        });\n    }    \n\n    withdraw(quantity:AssetDEX) {\n        this.feed.setError(\"withdraw\", null);\n        this.feed.setLoading(\"withdraw\", true);\n        this.feed.setLoading(\"withdraw-\"+quantity.token.symbol.toLowerCase(), true);   \n        return this.contract.excecute(\"withdraw\", {\n            owner:  this.scatter.account.name,\n            quantity: quantity.toString()\n        }).then(async result => {\n            this.feed.setLoading(\"withdraw\", false);\n            this.feed.setLoading(\"withdraw-\"+quantity.token.symbol.toLowerCase(), false);\n            /*await*/ this.getDeposits();\n            /*await*/ this.getBalances();\n            return result;\n        }).catch(e => {\n            this.feed.setLoading(\"withdraw\", false);\n            this.feed.setLoading(\"withdraw-\"+quantity.token.symbol.toLowerCase(), false);\n            this.feed.setError(\"withdraw\", typeof e == \"string\" ? e : JSON.stringify(e,null,4));\n            throw e;\n        });\n    }\n\n    // Tokens --------------------------------------------------------------\n    addOffChainToken(offchain: TokenDEX) {\n        this.waitTokensLoaded.then(_ => {\n            this.tokens.push(new TokenDEX({\n                symbol: offchain.symbol,\n                precision: offchain.precision || 4,\n                contract: \"nocontract\",\n                appname: offchain.appname,\n                website: \"\",\n                logo:\"\",\n                logolg: \"\",\n                scope: \"\",\n                stat: null,\n                verified: false,\n                offchain: true\n            }));\n        });\n    }\n\n\n    // --------------------------------------------------------------\n    // Scopes / Tables \n    public hasScopes() {\n        return !!this._markets;\n    }\n\n    public market(scope:string): Market {\n        if (this._markets[scope]) return this._markets[scope];        // ---> direct\n        var reverse = this.inverseScope(scope);\n        if (this._reverse[reverse]) return this._reverse[reverse];  // ---> reverse\n        if (!this._markets[reverse]) return null;                    // ---> table does not exist (or has not been loaded yet)\n        return this._markets[scope] || this.reverse(scope);\n    }\n\n    public table(scope:string): Market {\n        //console.error(\"table(\"+scope+\") DEPRECATED\");\n        return this.market(scope);\n    }    \n\n    private reverse(scope:string): Market {\n        var canonical = this.canonicalScope(scope);\n        var reverse_scope = this.inverseScope(canonical);\n        console.assert(canonical != reverse_scope, \"ERROR: \", canonical, reverse_scope);\n        var reverse_table:Market = this._reverse[reverse_scope];\n        if (!reverse_table && this._markets[canonical]) {\n            this._reverse[reverse_scope] = this.createReverseTableFor(reverse_scope);\n        }\n        return this._reverse[reverse_scope];\n    }\n\n    public marketFor(comodity:TokenDEX, currency:TokenDEX): Market {\n        var scope = this.getScopeFor(comodity, currency);\n        return this.table(scope);\n    }\n\n    public tableFor(comodity:TokenDEX, currency:TokenDEX): Market {\n        console.error(\"tableFor()\",comodity.symbol,currency.symbol,\" DEPRECATED\");\n        return this.marketFor(comodity, currency);\n    }\n\n    public createReverseTableFor(scope:string): Market {\n        // console.log(\"******************************************\", scope);\n        var canonical = this.canonicalScope(scope);\n        var reverse_scope = this.inverseScope(canonical);\n        var table:Market = this._markets[canonical];\n\n        var inverse_history:HistoryTx[] = [];\n\n        for (var i in table.history) {\n            var hTx:HistoryTx = {\n                id: table.history[i].id,\n                str: \"\",\n                price: table.history[i].inverse.clone(),\n                inverse: table.history[i].price.clone(),\n                amount: table.history[i].payment.clone(),\n                payment: table.history[i].amount.clone(),\n                buyer: table.history[i].seller,\n                seller: table.history[i].buyer,\n                buyfee: table.history[i].sellfee.clone(),\n                sellfee: table.history[i].buyfee.clone(),\n                date: table.history[i].date,\n                isbuy: !table.history[i].isbuy,\n            };\n            hTx.str = hTx.price.str + \" \" + hTx.amount.str;\n            inverse_history.push(hTx);\n        }\n        \n    \n        var inverse_orders:TokenOrders = {\n            buy: [], sell: []\n        };\n\n        for (var type in {buy:\"buy\", sell:\"sell\"}) {\n            var row_orders:Order[];\n            var row_order:Order;\n\n            for (var i in table.orders[type]) {\n                var row = table.orders[type][i];\n\n                row_orders = [];\n                for (var j=0; j<row.orders.length; j++) {\n                    row_order = {\n                        deposit: row.orders[j].deposit.clone(),\n                        id: row.orders[j].id,\n                        inverse: row.orders[j].price.clone(),\n                        price: row.orders[j].inverse.clone(),\n                        owner: row.orders[j].owner,\n                        telos: row.orders[j].total,\n                        total: row.orders[j].telos\n                    }\n                    row_orders.push(row_order);\n                }\n\n                var newrow:OrderRow = {\n                    inverse: row.price.clone(),\n                    orders: row_orders,\n                    owners: row.owners,\n                    price: row.inverse.clone(),\n                    str: row.inverse.str,\n                    sum: row.sumtelos.clone(),\n                    sumtelos: row.sum.clone(),\n                    telos: row.total.clone(),\n                    total: row.telos.clone(),\n                    // amount: row.sumtelos.total(), // <-- extra\n                };\n                inverse_orders[type].push(newrow);\n            }\n        }\n\n        var reverse:Market = {\n            scope: reverse_scope,\n            comodity: table.currency,\n            currency: table.comodity,\n            block: table.block,\n            blocklist: table.reverseblocks,\n            reverseblocks: table.blocklist,\n            blocklevels: table.reverselevels,\n            reverselevels: table.blocklevels,\n            blocks: table.blocks,\n            deals: table.deals,\n            header: {\n                sell: {\n                    total:table.header.buy.total.clone(),\n                    orders:table.header.buy.orders\n                },\n                buy: {\n                    total:table.header.sell.total.clone(),\n                    orders:table.header.sell.orders\n                }\n            },\n            history: inverse_history,\n            orders: {\n                sell: inverse_orders.buy,  // <<-- esto funciona asÃ­ como estÃ¡?\n                buy: inverse_orders.sell   // <<-- esto funciona asÃ­ como estÃ¡?\n            },\n            summary: {\n                scope: this.inverseScope(table.summary.scope),\n                price: table.summary.inverse,\n                price_24h_ago: table.summary.inverse_24h_ago,\n                inverse: table.summary.price,\n                inverse_24h_ago: table.summary.price_24h_ago,\n                max_inverse: table.summary.max_price,\n                max_price: table.summary.max_inverse,\n                min_inverse: table.summary.min_price,\n                min_price: table.summary.min_inverse,\n                records: table.summary.records,\n                volume: table.summary.amount,\n                amount: table.summary.volume,\n                percent: table.summary.ipercent,\n                ipercent: table.summary.percent,\n                percent_str: table.summary.ipercent_str,\n                ipercent_str: table.summary.percent_str,\n            },\n            tx: table.tx\n        }\n        return reverse;\n    }\n\n    public getScopeFor(comodity:TokenDEX, currency:TokenDEX) {\n        if (!comodity || !currency) return \"\";\n        return comodity.symbol.toLowerCase() + \".\" + currency.symbol.toLowerCase();\n    }\n\n    public inverseScope(scope:string) {\n        if (!scope) return scope;\n        console.assert(typeof scope ==\"string\", \"ERROR: string scope expected, got \", typeof scope, scope);\n        var parts = scope.split(\".\");\n        console.assert(parts.length == 2, \"ERROR: scope format expected is xxx.yyy, got: \", typeof scope, scope);\n        var inverse = parts[1] + \".\" + parts[0];\n        return inverse;\n    }\n\n    public canonicalScope(scope:string) {\n        if (!scope) return scope;\n        console.assert(typeof scope ==\"string\", \"ERROR: string scope expected, got \", typeof scope, scope);\n        var parts = scope.split(\".\");\n        console.assert(parts.length == 2, \"ERROR: scope format expected is xxx.yyy, got: \", typeof scope, scope);\n        var inverse = parts[1] + \".\" + parts[0];\n        if (parts[1] == \"tlos\") {\n            return scope;\n        }\n        if (parts[0] == \"tlos\") {\n            return inverse;\n        }\n        if (parts[0] < parts[1]) {\n            return scope;\n        } else {\n            return inverse;\n        }\n    }\n    \n\n    public isCanonical(scope:string) {\n        return this.canonicalScope(scope) == scope;\n    }\n\n    \n    \n    // --------------------------------------------------------------\n    // Getters \n\n    getBalance(token:TokenDEX) {\n        for (var i in this.balances) {\n            if (this.balances[i].token.symbol == token.symbol) {\n                return this.balances[i];\n            }\n        }\n        return new AssetDEX(\"0 \" + token.symbol, this);\n    }\n\n    async getSomeFreeFakeTokens(symbol:string = null) {\n        console.log(\"VapaeeDEX.getSomeFreeFakeTokens()\");\n        var _token = symbol;    \n        this.feed.setLoading(\"freefake-\"+_token || \"token\", true);\n        return this.waitTokenStats.then(_ => {\n            var token = null;\n            var counts = 0;\n            for (var i=0; i<100; i++) {\n                if (symbol) {\n                    if (this.tokens[i].symbol == symbol) {\n                        token = this.tokens[i];\n                    }\n                }                \n\n                var random = Math.random();\n                // console.log(i, \"Random: \", random);\n                if (!token && random > 0.5) {\n                    token = this.tokens[i % this.tokens.length];\n                    if (token.fake) {\n                        random = Math.random();\n                        if (random > 0.5) {\n                            token = this.telos;\n                        }\n                    } else {\n                        token = null;\n                    }\n                }\n\n                if (i<100 && token && this.getBalance(token).amount.toNumber() > 0) {\n                    token = null;\n                }\n\n                // console.log(i, \"token: \", token);\n\n                if (token) {\n                    random = Math.random();\n                    var monto = Math.floor(10000 * random) / 100;\n                    var quantity = new AssetDEX(\"\" + monto + \" \" + token.symbol ,this);\n                    var memo = \"you get \" + quantity.valueToString()+ \" free fake \" + token.symbol + \" tokens to play on vapaee.io DEX\";\n                    return this.contract.excecute(\"issue\", {\n                        to:  this.scatter.account.name,\n                        quantity: quantity.toString(),\n                        memo: memo\n                    }).then(_ => {\n                        this.getBalances();\n                        this.feed.setLoading(\"freefake-\"+_token || \"token\", false);\n                        return memo;\n                    }).catch(e => {\n                        this.feed.setLoading(\"freefake-\"+_token || \"token\", false);\n                        throw e;\n                    });                \n                }               \n            }\n        })\n    }\n\n    getTokenNow(sym:string): TokenDEX {\n        if (!sym) return null;\n        for (var i in this.tokens) {\n            // there's a little bug. This is a justa  work arround\n            if (this.tokens[i].symbol.toUpperCase() == \"TLOS\" && this.tokens[i].offchain) {\n                // this solves attaching wrong tlos token to asset\n                continue;\n            }\n             \n            if (this.tokens[i].symbol.toUpperCase() == sym.toUpperCase()) {\n                return this.tokens[i];\n            }\n        }\n        return null;\n    }\n\n    async getToken(sym:string): Promise<TokenDEX> {\n        return this.waitTokensLoaded.then(_ => {\n            return this.getTokenNow(sym);\n        });\n    }\n\n    async getDeposits(account:string = null): Promise<any> {\n        console.log(\"VapaeeDEX.getDeposits()\");\n        this.feed.setLoading(\"deposits\", true);\n        return this.waitTokensLoaded.then(async _ => {\n            var deposits: AssetDEX[] = [];\n            if (!account && this.current.name) {\n                account = this.current.name;\n            }\n            if (account) {\n                var result = await this.fetchDeposits(account);\n                for (var i in result.rows) {\n                    deposits.push(new AssetDEX(result.rows[i].amount, this));\n                }\n            }\n            this.deposits = deposits;\n            this.feed.setLoading(\"deposits\", false);\n            return this.deposits;\n        });\n    }\n\n    async getBalances(account:string = null): Promise<any> {\n        console.log(\"VapaeeDEX.getBalances()\");\n        this.feed.setLoading(\"balances\", true);\n        return this.waitTokensLoaded.then(async _ => {\n            var _balances: AssetDEX[];\n            if (!account && this.current.name) {\n                account = this.current.name;\n            }            \n            if (account) {\n                _balances = await this.fetchBalances(account);\n            }\n            this.balances = _balances;\n            // console.log(\"VapaeeDEX balances updated\");\n            this.feed.setLoading(\"balances\", false);\n            return this.balances;\n        });\n    }\n\n    async getThisSellOrders(table:string, ids:number[]): Promise<any[]> {\n        this.feed.setLoading(\"thisorders\", true);\n        return this.waitTokensLoaded.then(async _ => {\n            var result = [];\n            for (var i in ids) {\n                var id = ids[i];\n                var gotit = false;\n                for (var j in result) {\n                    if (result[j].id == id) {\n                        gotit = true;\n                        break;\n                    }\n                }\n                if (gotit) {\n                    continue;\n                }\n                var res:TableResult = await this.fetchOrders({scope:table, limit:1, lower_bound:id.toString()});\n\n                result = result.concat(res.rows);\n            }\n            this.feed.setLoading(\"thisorders\", false);\n            return result;\n        });    \n    }\n\n    async getUserOrders(account:string = null) {\n        console.log(\"VapaeeDEX.getUserOrders()\");\n        this.feed.setLoading(\"userorders\", true);\n        return this.waitTokensLoaded.then(async _ => {\n            var userorders: TableResult;\n            if (!account && this.current.name) {\n                account = this.current.name;\n            }            \n            if (account) {\n                userorders = await this.fetchUserOrders(account);\n            }\n            var list: UserOrders[] = <UserOrders[]>userorders.rows;\n            var map: UserOrdersMap = {};\n            for (var i=0; i<list.length; i++) {\n                var ids = list[i].ids;\n                var table = list[i].table;\n                var orders = await this.getThisSellOrders(table, ids);\n                map[table] = {\n                    table: table,\n                    orders: this.auxProcessRowsToOrders(orders),\n                    ids:ids\n                };\n            }\n            this.userorders = map;\n            // console.log(this.userorders);\n            this.feed.setLoading(\"userorders\", false);\n            return this.userorders;\n        });\n                \n    }\n\n    async updateActivity() {\n        this.feed.setLoading(\"activity\", true);\n        var pagesize = this.activityPagesize;\n        var pages = await this.getActivityTotalPages(pagesize);\n        await Promise.all([\n            this.fetchActivity(pages-2, pagesize),\n            this.fetchActivity(pages-1, pagesize),\n            this.fetchActivity(pages-0, pagesize)\n        ]);\n        this.feed.setLoading(\"activity\", false);\n    }\n\n    async loadMoreActivity() {\n        if (this.activity.list.length == 0) return;\n        this.feed.setLoading(\"activity\", true);\n        var pagesize = this.activityPagesize;\n        var first = this.activity.list[this.activity.list.length-1];\n        var id = first.id - pagesize;\n        var page = Math.floor((id-1) / pagesize);\n\n        await this.fetchActivity(page, pagesize);\n        this.feed.setLoading(\"activity\", false);\n    }\n\n    async updateTrade(comodity:TokenDEX, currency:TokenDEX, updateUser:boolean = true): Promise<any> {\n        console.log(\"VapaeeDEX.updateTrade()\");\n        var chrono_key = \"updateTrade\";\n        this.feed.startChrono(chrono_key);\n\n        if(updateUser) this.updateCurrentUser();\n        return Promise.all([\n            this.getTransactionHistory(comodity, currency, -1, -1, true).then(_ => this.feed.setMarck(chrono_key, \"getTransactionHistory()\")),\n            this.getBlockHistory(comodity, currency, -1, -1, true).then(_ => this.feed.setMarck(chrono_key, \"getBlockHistory()\")),\n            this.getSellOrders(comodity, currency, true).then(_ => this.feed.setMarck(chrono_key, \"getSellOrders()\")),\n            this.getBuyOrders(comodity, currency, true).then(_ => this.feed.setMarck(chrono_key, \"getBuyOrders()\")),\n            this.getTableSummary(comodity, currency, true).then(_ => this.feed.setMarck(chrono_key, \"getTableSummary()\")),\n            this.getOrderSummary().then(_ => this.feed.setMarck(chrono_key, \"getOrderSummary()\")),\n        ]).then(r => {\n            this._reverse = {};\n            this.resortTokens();\n            // this.feed.printChrono(chrono_key);\n            this.onTradeUpdated.next(null);\n            return r;\n        });\n    }\n\n    async updateCurrentUser(): Promise<any> {\n        // console.log(\"VapaeeDEX.updateCurrentUser()\");\n        this.feed.setLoading(\"current\", true);        \n        return Promise.all([\n            this.getUserOrders(),\n            this.getDeposits(),\n            this.getBalances()\n        ]).then(_ => {\n            this.feed.setLoading(\"current\", false);\n            return _;\n        }).catch(e => {\n            this.feed.setLoading(\"current\", false);\n            throw e;\n        });\n    }\n\n    private getBlockHistoryTotalPagesFor(scope:string, pagesize: number) {\n        if (!this._markets) return 0;\n        var market = this.market(scope);\n        if (!market) return 0;\n        var total = market.blocks;\n        var mod = total % pagesize;\n        var dif = total - mod;\n        var pages = dif / pagesize;\n        if (mod > 0) {\n            pages +=1;\n        }\n        // console.log(\"getBlockHistoryTotalPagesFor() total:\", total, \" pages:\", pages);\n        return pages;\n    }\n\n    private getHistoryTotalPagesFor(scope:string, pagesize: number) {\n        if (!this._markets) return 0;\n        var market = this.market(scope);\n        if (!market) return 0;\n        var total = market.deals;\n        var mod = total % pagesize;\n        var dif = total - mod;\n        var pages = dif / pagesize;\n        if (mod > 0) {\n            pages +=1;\n        }\n        return pages;\n    }\n\n    private async getActivityTotalPages(pagesize: number) {\n        return this.contract.getTable(\"events\", {\n            limit: 1\n        }).then(result => {\n            var params = result.rows[0].params;\n            var total = parseInt(params.split(\" \")[0])-1;\n            var mod = total % pagesize;\n            var dif = total - mod;\n            var pages = dif / pagesize;\n            if (mod > 0) {\n                pages +=1;\n            }\n            this.activity.total = total;\n            console.log(\"VapaeeDEX.getActivityTotalPages() total: \", total, \" pages: \", pages);\n            return pages;\n        });\n    }\n\n    async getTransactionHistory(comodity:TokenDEX, currency:TokenDEX, page:number = -1, pagesize:number = -1, force:boolean = false): Promise<any> {\n        var scope:string = this.canonicalScope(this.getScopeFor(comodity, currency));\n        var aux = null;\n        var result = null;\n        this.feed.setLoading(\"history.\"+scope, true);\n        aux = this.waitOrderSummary.then(async _ => {\n            if (pagesize == -1) {\n                pagesize = 10;                \n            }\n            if (page == -1) {\n                var pages = this.getHistoryTotalPagesFor(scope, pagesize);\n                page = pages-3;\n                if (page < 0) page = 0;\n            }\n\n            return Promise.all([\n                this.fetchHistory(scope, page+0, pagesize),\n                this.fetchHistory(scope, page+1, pagesize),\n                this.fetchHistory(scope, page+2, pagesize)\n            ]).then(_ => {\n                this.feed.setLoading(\"history.\"+scope, false);\n                return this.market(scope).history;\n            }).catch(e => {\n                this.feed.setLoading(\"history.\"+scope, false);\n                throw e;\n            });\n        });\n\n        if (this.market(scope) && !force) {\n            result = this.market(scope).history;\n        } else {\n            result = aux;\n        }\n\n        this.onHistoryChange.next(result);\n\n        return result;\n    }\n\n    private auxHourToLabel(hour:number): string {\n        var d = new Date(hour * 1000 * 60 * 60);\n        var label = d.getHours() == 0 ? this.datePipe.transform(d, 'dd/MM') : d.getHours() + \"h\";\n        \n        return label;\n    }\n\n    async getBlockHistory(comodity:TokenDEX, currency:TokenDEX, page:number = -1, pagesize:number = -1, force:boolean = false): Promise<any> {\n        console.log(\"VapaeeDEX.getBlockHistory()\", comodity.symbol, page, pagesize);\n        // // elapsed time\n        // var startTime:Date = new Date();\n        // var diff:number;\n        // var sec:number;\n\n        var scope:string = this.canonicalScope(this.getScopeFor(comodity, currency));\n        var aux = null;\n        var result = null;\n        this.feed.setLoading(\"block-history.\"+scope, true);\n\n        aux = this.waitOrderSummary.then(async _ => {\n            var fetchBlockHistoryStart:Date = new Date();\n\n            if (pagesize == -1) {\n                pagesize = 10;\n            }\n            if (page == -1) {\n                var pages = this.getBlockHistoryTotalPagesFor(scope, pagesize);\n                page = pages-3;\n                if (page < 0) page = 0;\n            }\n            var promises = [];\n            for (var i=0; i<=pages; i++) {\n                var promise = this.fetchBlockHistory(scope, i, pagesize);\n                promises.push(promise);\n            }\n\n            return Promise.all(promises).then(_ => {\n                // // elapsed time\n                // var fetchBlockHistoryTime:Date = new Date();\n                // diff = fetchBlockHistoryTime.getTime() - fetchBlockHistoryStart.getTime();\n                // sec = diff / 1000;\n                // console.log(\"** VapaeeDEX.getBlockHistory() fetchBlockHistoryTime sec: \", sec, \"(\",diff,\")\");\n\n\n                this.feed.setLoading(\"block-history.\"+scope, false);\n                var market: Market = this.market(scope);\n                market.blocklist = [];\n                market.reverseblocks = [];\n                var now = new Date();\n                var hora = 1000 * 60 * 60;\n                var hour = Math.floor(now.getTime()/hora);\n                // console.log(\"->\", hour);\n                var last_block = null;\n                var last_hour = null;\n\n                var ordered_blocks = [];\n                for (var i in market.block) {\n                    ordered_blocks.push(market.block[i]);\n                }\n\n                ordered_blocks.sort(function(a:HistoryBlock, b:HistoryBlock) {\n                    if(a.hour < b.hour) return -11;\n                    return 1;\n                });\n\n\n\n                for (var i in ordered_blocks) {\n                    var block:HistoryBlock = ordered_blocks[i];\n                    var label = this.auxHourToLabel(block.hour);\n                    /*\n                    // console.log(\"->\", i, label, block);\n                    var date = block.date;\n                    var dif = now.getTime() - block.date.getTime();\n                    var mes = 30 * 24 * hora;\n                    var elapsed_months = dif / mes;\n                    if (elapsed_months > 3) {\n                        console.log(\"dropping block too old\", [block, block.date.toUTCString()]);\n                        continue;\n                    }\n                    */\n\n                    if (last_block) {\n                        var dif = block.hour - last_block.hour;\n                        for (var j=1; j<dif; j++) {\n                            var label_i = this.auxHourToLabel(last_block.hour+j);\n                            // console.log(\"-->\", j, label_i, block);\n\n                            // coninical ----------------------------\n                            var price = last_block.price.amount.toNumber();\n                            var aux = [label_i, price, price, price, price];\n                            market.blocklist.push(aux);\n                            // reverse ----------------------------\n                            var inverse = last_block.inverse.amount.toNumber();\n                            var aux = [label_i, inverse, inverse, inverse, inverse];\n                            market.reverseblocks.push(aux);\n                        }\n                    }\n                    var obj:any[];\n                    // coninical ----------------------------\n                    obj = [label];\n                    obj.push(block.max.amount.toNumber());\n                    obj.push(block.entrance.amount.toNumber());\n                    obj.push(block.price.amount.toNumber());\n                    obj.push(block.min.amount.toNumber());\n                    market.blocklist.push(obj);\n                    // reverse ----------------------------\n                    obj = [label];\n                    obj.push(1.0/block.max.amount.toNumber());\n                    obj.push(1.0/block.entrance.amount.toNumber());\n                    obj.push(1.0/block.price.amount.toNumber());\n                    obj.push(1.0/block.min.amount.toNumber());\n                    market.reverseblocks.push(obj);\n                    last_block = block;\n                }\n\n                if (last_block && hour != last_block.hour) {\n                    var dif = hour - last_block.hour;\n                    for (var j=1; j<=dif; j++) {\n                        var label_i = this.auxHourToLabel(last_block.hour+j);\n\n                        // coninical ----------------------------\n                        var price = last_block.price.amount.toNumber();\n                        var aux = [label_i, price, price, price, price];\n                        market.blocklist.push(aux);\n\n                        // reverse ----------------------------\n                        var inverse = last_block.inverse.amount.toNumber();\n                        var aux = [label_i, inverse, inverse, inverse, inverse];\n                        market.reverseblocks.push(aux);\n                    }\n                }\n\n                // // elapsed time\n                // var firstLevelTime:Date = new Date();\n                // diff = firstLevelTime.getTime() - fetchBlockHistoryTime.getTime();\n                // sec = diff / 1000;\n                // console.log(\"** VapaeeDEX.getBlockHistory() firstLevelTime sec: \", sec, \"(\",diff,\")\");                \n                \n                // console.log(\"---------------->\", market.blocklist);\n                // this.onBlocklistChange.next(market.blocklist);\n                return market;\n            }).then(market => {\n                // console.log(\"***************************************************************************\");\n                // // elapsed time\n                // var allLevelsStart:Date = new Date();                \n                \n                var limit = 256;\n                var levels = [market.blocklist];\n                var reverses = [market.reverseblocks];\n                for (var current = 0; levels[current].length > limit; current++) {\n                    // console.log(current ,levels[current].length);\n                    var newlevel:any[][] = [];\n                    var newreverse:any[][] = [];\n                    var merged:any[] = [];\n                    for (var i=0; i<levels[current].length; i+=2) {\n                        // canonical -----------------------------\n                        var v_1:any[] = levels[current][i];\n                        var v_2 = levels[current][i+1];\n                        var merged = [];\n                        for (var x=0; x<5; x++) merged[x] = v_1[x]; // clean copy\n                        if (v_2) {\n                            merged[0] = v_1[0].split(\"/\").length > 1 ? v_1[0] : v_2[0];\n                            merged[1] = Math.max(v_1[1], v_2[1]);\n                            merged[2] = v_1[2];\n                            merged[3] = v_2[3];\n                            merged[4] = Math.min(v_1[4], v_2[4]);\n                        }\n                        newlevel.push(merged);\n\n                        // reverse ------------------------------\n                        v_1 = reverses[current][i];\n                        v_2 = reverses[current][i+1];\n                        merged = [];\n                        for (var x=0; x<5; x++) merged[x] = v_1[x]; // clean copy\n                        if (v_2) {\n                            merged[0] = v_1[0].split(\"/\").length > 1 ? v_1[0] : v_2[0];\n                            merged[1] = Math.min(v_1[1], v_2[1]);\n                            merged[2] = v_1[2];\n                            merged[3] = v_2[3];\n                            merged[4] = Math.max(v_1[4], v_2[4]);\n                        }\n\n                        \n                        newreverse.push(merged);\n                    }\n\n                    levels.push(newlevel);\n                    reverses.push(newreverse);\n                }\n                \n\n                market.blocklevels = levels;\n                market.reverselevels = reverses;\n                \n                // ---------------------\n                // market.blocklevels = [market.blocklist];\n                // market.reverselevels = [market.reverseblocks];\n                \n\n                \n                // // elapsed time\n                // var allLevelsTime:Date = new Date();\n                // diff = allLevelsTime.getTime() - allLevelsStart.getTime();\n                // sec = diff / 1000;\n                // console.log(\"** VapaeeDEX.getBlockHistory() allLevelsTime sec: \", sec, \"(\",diff,\")\");   \n                // // console.log(\"***************************************************************************\", market.blocklevels);\n\n                return market.block;\n            }).catch(e => {\n                this.feed.setLoading(\"block-history.\"+scope, false);\n                throw e;\n            });\n        });\n\n        if (this.market(scope) && !force) {\n            result = this.market(scope).block;\n        } else {\n            result = aux;\n        }\n\n        this.onHistoryChange.next(result);\n\n        return result;\n    }\n\n    async getSellOrders(comodity:TokenDEX, currency:TokenDEX, force:boolean = false): Promise<any> {\n        var scope:string = this.getScopeFor(comodity, currency);\n        var canonical:string = this.canonicalScope(scope);\n        var reverse:string = this.inverseScope(canonical);\n        var aux = null;\n        var result = null;\n        this.feed.setLoading(\"sellorders\", true);\n        aux = this.waitTokensLoaded.then(async _ => {\n            var orders = await this.fetchOrders({scope:canonical, limit:100, index_position: \"2\", key_type: \"i64\"});\n            this._markets[canonical] = this.auxAssertScope(canonical);\n            // if(scope==\"vpe.tlos\" || scope==\"cnt.tlos\")console.log(\"-------------\");\n            // if(scope==\"vpe.tlos\" || scope==\"cnt.tlos\")console.log(\"Sell crudo:\", orders);\n            var sell: Order[] = this.auxProcessRowsToOrders(orders.rows);\n            sell.sort(function(a:Order, b:Order) {\n                if(a.price.amount.isLessThan(b.price.amount)) return -11;\n                if(a.price.amount.isGreaterThan(b.price.amount)) return 1;\n                return 0;\n            });\n            // if(scope==\"vpe.tlos\" || scope==\"cnt.tlos\")console.log(\"sorted:\", sell);\n            // grouping together orders with the same price.\n            var list: OrderRow[] = [];\n            var row: OrderRow;\n            if (sell.length > 0) {\n                for(var i=0; i<sell.length; i++) {\n                    var order: Order = sell[i];\n                    if (list.length > 0) {\n                        row = list[list.length-1];\n                        if (row.price.amount.eq(order.price.amount)) {\n                            row.total.amount = row.total.amount.plus(order.total.amount);\n                            row.telos.amount = row.telos.amount.plus(order.telos.amount);\n                            row.owners[order.owner] = true;\n                            row.orders.push(order);\n                            continue;\n                        }    \n                    }\n                    row = {\n                        str: order.price.toString(),\n                        price: order.price,\n                        orders: [],\n                        total: order.total.clone(),\n                        telos: order.telos.clone(),\n                        inverse: order.inverse,\n                        sum: null,\n                        sumtelos: null,\n                        owners: {}\n                    }\n\n                    row.owners[order.owner] = true;\n                    row.orders.push(order);\n                    list.push(row);\n                }\n            }\n\n            var sum = new BigNumber(0);\n            var sumtelos = new BigNumber(0);\n            for (var j in list) {\n                var order_row = list[j];\n                sumtelos = sumtelos.plus(order_row.telos.amount);\n                sum = sum.plus(order_row.total.amount);\n                order_row.sumtelos = new AssetDEX(sumtelos, order_row.telos.token);\n                order_row.sum = new AssetDEX(sum, order_row.total.token);\n            }\n\n            this._markets[canonical].orders.sell = list;\n            // if(scope==\"vpe.tlos\" || scope==\"cnt.tlos\")console.log(\"Sell final:\", this.scopes[scope].orders.sell);\n            // if(scope==\"vpe.tlos\" || scope==\"cnt.tlos\")console.log(\"-------------\");\n\n            this.feed.setLoading(\"sellorders\", false);            \n            return this._markets[canonical].orders.sell;\n        });\n\n        if (this._markets[canonical] && !force) {\n            result = this._markets[canonical].orders.sell;\n        } else {\n            result = aux;\n        }\n        return result;\n    }\n    \n    async getBuyOrders(comodity:TokenDEX, currency:TokenDEX, force:boolean = false): Promise<any> {\n        var scope:string = this.getScopeFor(comodity, currency);\n        var canonical:string = this.canonicalScope(scope);\n        var reverse:string = this.inverseScope(canonical);\n\n\n        var aux = null;\n        var result = null;\n        this.feed.setLoading(\"buyorders\", true);\n        aux = this.waitTokensLoaded.then(async _ => {\n            var orders = await await this.fetchOrders({scope:reverse, limit:50, index_position: \"2\", key_type: \"i64\"});\n            this._markets[canonical] = this.auxAssertScope(canonical);\n            // console.log(\"-------------\");\n            // console.log(\"Buy crudo:\", orders);            \n            var buy: Order[] = this.auxProcessRowsToOrders(orders.rows);\n            buy.sort(function(a:Order, b:Order){\n                if(a.price.amount.isLessThan(b.price.amount)) return 1;\n                if(a.price.amount.isGreaterThan(b.price.amount)) return -1;\n                return 0;\n            });\n\n            // console.log(\"buy sorteado:\", buy);\n\n            // grouping together orders with the same price.\n            var list: OrderRow[] = [];\n            var row: OrderRow;\n            if (buy.length > 0) {\n                for(var i=0; i<buy.length; i++) {\n                    var order: Order = buy[i];\n                    if (list.length > 0) {\n                        row = list[list.length-1];\n                        if (row.price.amount.eq(order.price.amount)) {\n                            row.total.amount = row.total.amount.plus(order.total.amount);\n                            row.telos.amount = row.telos.amount.plus(order.telos.amount);\n                            row.owners[order.owner] = true;\n                            row.orders.push(order);\n                            continue;\n                        }    \n                    }\n                    row = {\n                        str: order.price.toString(),\n                        price: order.price,\n                        orders: [],\n                        total: order.total.clone(),\n                        telos: order.telos.clone(),\n                        inverse: order.inverse,\n                        sum: null,\n                        sumtelos: null,\n                        owners: {}\n                    }\n\n                    row.owners[order.owner] = true;\n                    row.orders.push(order);\n                    list.push(row);\n                }\n            }            \n\n            var sum = new BigNumber(0);\n            var sumtelos = new BigNumber(0);\n            for (var j in list) {\n                var order_row = list[j];\n                sumtelos = sumtelos.plus(order_row.telos.amount);\n                sum = sum.plus(order_row.total.amount);\n                order_row.sumtelos = new AssetDEX(sumtelos, order_row.telos.token);\n                order_row.sum = new AssetDEX(sum, order_row.total.token);\n            }\n\n            this._markets[canonical].orders.buy = list;\n            // console.log(\"Buy final:\", this.scopes[scope].orders.buy);\n            // console.log(\"-------------\");\n            this.feed.setLoading(\"buyorders\", false);\n            return this._markets[canonical].orders.buy;\n        });\n\n        if (this._markets[canonical] && !force) {\n            result = this._markets[canonical].orders.buy;\n        } else {\n            result = aux;\n        }\n        return result;\n    }\n    \n    async getOrderSummary(): Promise<any> {\n        console.log(\"VapaeeDEX.getOrderSummary()\");\n        var tables = await this.fetchOrderSummary();\n\n        for (var i in tables.rows) {\n            var scope:string = tables.rows[i].table;\n            var canonical = this.canonicalScope(scope);\n            console.assert(scope == canonical, \"ERROR: scope is not canonical\", scope, [i, tables]);\n            var comodity = scope.split(\".\")[0].toUpperCase();\n            var currency = scope.split(\".\")[1].toUpperCase();\n            this._markets[scope] = this.auxAssertScope(scope);\n\n            // console.log(i, tables.rows[i]);\n\n            this._markets[scope].header.sell.total = new AssetDEX(tables.rows[i].supply.total, this);\n            this._markets[scope].header.sell.orders = tables.rows[i].supply.orders;\n            this._markets[scope].header.buy.total = new AssetDEX(tables.rows[i].demand.total, this);\n            this._markets[scope].header.buy.orders = tables.rows[i].demand.orders;\n            this._markets[scope].deals = tables.rows[i].deals;\n            this._markets[scope].blocks = tables.rows[i].blocks;\n        }\n        \n        this.setOrderSummary();\n    }\n\n    async getTableSummary(comodity:TokenDEX, currency:TokenDEX, force:boolean = false): Promise<MarketSummary> {\n        var scope:string = this.getScopeFor(comodity, currency);\n        var canonical:string = this.canonicalScope(scope);\n        var inverse:string = this.inverseScope(canonical);\n\n        var ZERO_COMODITY = \"0.00000000 \" + comodity.symbol;\n        var ZERO_CURRENCY = \"0.00000000 \" + currency.symbol;\n\n        this.feed.setLoading(\"summary.\"+canonical, true);\n        this.feed.setLoading(\"summary.\"+inverse, true);\n        var aux = null;\n        var result:MarketSummary = null;\n        aux = this.waitTokensLoaded.then(async _ => {\n            var summary = await this.fetchSummary(canonical);\n            // if(scope==\"olive.tlos\")console.log(scope, \"---------------------------------------------------\");\n            // if(scope==\"olive.tlos\")console.log(\"Summary crudo:\", summary.rows);\n\n            this._markets[canonical] = this.auxAssertScope(canonical);\n            this._markets[canonical].summary = {\n                scope: canonical,\n                price: new AssetDEX(new BigNumber(0), currency),\n                price_24h_ago: new AssetDEX(new BigNumber(0), currency),\n                inverse: new AssetDEX(new BigNumber(0), comodity),\n                inverse_24h_ago: new AssetDEX(new BigNumber(0), comodity),\n                volume: new AssetDEX(new BigNumber(0), currency),\n                amount: new AssetDEX(new BigNumber(0), comodity),\n                percent: 0.3,\n                records: summary.rows\n            };\n\n            var now:Date = new Date();\n            var now_sec: number = Math.floor(now.getTime() / 1000);\n            var now_hour: number = Math.floor(now_sec / 3600);\n            var start_hour = now_hour - 23;\n            // if(canonical==\"acorn.tlos\")console.log(\"now_hour:\", now_hour);\n            // if(canonical==\"acorn.tlos\")console.log(\"start_hour:\", start_hour);\n\n            // proceso los datos crudos \n            var price = ZERO_CURRENCY;\n            var inverse = ZERO_COMODITY;\n            var crude = {};\n            var last_hh = 0;\n            for (var i=0; i<summary.rows.length; i++) {\n                var hh = summary.rows[i].hour;\n                if (summary.rows[i].label == \"lastone\") {\n                    // price = summary.rows[i].price;\n                } else {\n                    crude[hh] = summary.rows[i];\n                    if (last_hh < hh && hh < start_hour) {\n                        last_hh = hh;\n                        price = (scope == canonical) ? summary.rows[i].price : summary.rows[i].inverse;\n                        inverse = (scope == canonical) ? summary.rows[i].inverse : summary.rows[i].price;\n                        // if(canonical==\"acorn.tlos\")console.log(\"hh:\", hh, \"last_hh:\", last_hh, \"price:\", price);\n                    }    \n                }\n                /*\n                */\n            }\n            // if(canonical==\"acorn.tlos\")console.log(\"crude:\", crude);\n            // if(canonical==\"acorn.tlos\")console.log(\"price:\", price);\n\n            // genero una entrada por cada una de las Ãºltimas 24 horas\n            var last_24h = {};\n            var volume = new AssetDEX(ZERO_CURRENCY, this);\n            var amount = new AssetDEX(ZERO_COMODITY, this);\n            var price_asset = new AssetDEX(price, this);\n            var inverse_asset = new AssetDEX(inverse, this);\n            // if(canonical==\"cnt.tlos\")console.log(\"price \", price);\n            var max_price = price_asset.clone();\n            var min_price = price_asset.clone();\n            var max_inverse = inverse_asset.clone();\n            var min_inverse = inverse_asset.clone();\n            var price_fst:AssetDEX = null;\n            var inverse_fst:AssetDEX = null;\n            for (var i=0; i<24; i++) {\n                var current = start_hour+i;\n                var current_date = new Date(current * 3600 * 1000);\n                var nuevo:any = crude[current];\n                if (nuevo) {\n                    var s_price = (scope == canonical) ? nuevo.price : nuevo.inverse;\n                    var s_inverse = (scope == canonical) ? nuevo.inverse : nuevo.price;\n                    var s_volume = (scope == canonical) ? nuevo.volume : nuevo.amount;\n                    var s_amount = (scope == canonical) ? nuevo.amount : nuevo.volume;\n                    nuevo.price = s_price;\n                    nuevo.inverse = s_inverse;\n                    nuevo.volume = s_volume;\n                    nuevo.amount = s_amount;\n                } else {\n                    nuevo = {\n                        label: this.auxGetLabelForHour(current % 24),\n                        price: price,\n                        inverse: inverse,\n                        volume: ZERO_CURRENCY,\n                        amount: ZERO_COMODITY,\n                        date: current_date.toISOString().split(\".\")[0],\n                        hour: current\n                    };\n                }\n                last_24h[current] = crude[current] || nuevo;\n                // if(canonical==\"acorn.tlos\")console.log(\"current_date:\", current_date.toISOString(), current, last_24h[current]);\n\n                // coninical ----------------------------\n                price = last_24h[current].price;\n                var vol = new AssetDEX(last_24h[current].volume, this);\n                console.assert(vol.token.symbol == volume.token.symbol, \"ERROR: different tokens\", vol.str, volume.str);\n                volume.amount = volume.amount.plus(vol.amount);\n                if (price != ZERO_CURRENCY && !price_fst) {\n                    price_fst = new AssetDEX(price, this);\n                }\n                price_asset = new AssetDEX(price, this);\n                console.assert(price_asset.token.symbol == max_price.token.symbol, \"ERROR: different tokens\", price_asset.str, max_price.str);\n                if (price_asset.amount.isGreaterThan(max_price.amount)) {\n                    max_price = price_asset.clone();\n                }\n                console.assert(price_asset.token.symbol == min_price.token.symbol, \"ERROR: different tokens\", price_asset.str, min_price.str);\n                if (min_price.amount.isEqualTo(0) || price_asset.amount.isLessThan(min_price.amount)) {\n                    min_price = price_asset.clone();\n                }\n\n                // reverse ----------------------------\n                inverse = last_24h[current].inverse;\n                var amo = new AssetDEX(last_24h[current].amount, this);\n                console.assert(amo.token.symbol == amount.token.symbol, \"ERROR: different tokens\", amo.str, amount.str);\n                amount.amount = amount.amount.plus(amo.amount);\n                if (inverse != ZERO_COMODITY && !inverse_fst) {\n                    inverse_fst = new AssetDEX(inverse, this);\n                }\n                inverse_asset = new AssetDEX(inverse, this);\n                console.assert(inverse_asset.token.symbol == max_inverse.token.symbol, \"ERROR: different tokens\", inverse_asset.str, max_inverse.str);\n                if (inverse_asset.amount.isGreaterThan(max_inverse.amount)) {\n                    max_inverse = inverse_asset.clone();\n                }\n                console.assert(inverse_asset.token.symbol == min_inverse.token.symbol, \"ERROR: different tokens\", inverse_asset.str, min_inverse.str);\n                if (min_inverse.amount.isEqualTo(0) || inverse_asset.amount.isLessThan(min_inverse.amount)) {\n                    min_inverse = inverse_asset.clone();\n                }\n            }            \n            // coninical ----------------------------\n            if (!price_fst) {\n                price_fst = new AssetDEX(last_24h[start_hour].price, this);\n            }\n            var last_price =  new AssetDEX(last_24h[now_hour].price, this);\n            var diff = last_price.clone();\n            // diff.amount \n            diff.amount = last_price.amount.minus(price_fst.amount);\n            var ratio:number = 0;\n            if (price_fst.amount.toNumber() != 0) {\n                ratio = diff.amount.dividedBy(price_fst.amount).toNumber();\n            }\n            var percent = Math.floor(ratio * 10000) / 100;\n\n            // reverse ----------------------------\n            if (!inverse_fst) {\n                inverse_fst = new AssetDEX(last_24h[start_hour].inverse, this);\n            }\n            var last_inverse =  new AssetDEX(last_24h[now_hour].inverse, this);\n            var idiff = last_inverse.clone();\n            // diff.amount \n            idiff.amount = last_inverse.amount.minus(inverse_fst.amount);\n            ratio = 0;\n            if (inverse_fst.amount.toNumber() != 0) {\n                ratio = diff.amount.dividedBy(inverse_fst.amount).toNumber();\n            }\n            var ipercent = Math.floor(ratio * 10000) / 100;\n            // if(canonical==\"acorn.tlos\")console.log(\"price_fst:\", price_fst.str);\n            // if(canonical==\"acorn.tlos\")console.log(\"inverse_fst:\", inverse_fst.str);\n\n            // if(canonical==\"acorn.tlos\")console.log(\"last_24h:\", [last_24h]);\n            // if(canonical==\"acorn.tlos\")console.log(\"diff:\", diff.toString(8));\n            // if(canonical==\"acorn.tlos\")console.log(\"percent:\", percent);\n            // if(canonical==\"acorn.tlos\")console.log(\"ratio:\", ratio);\n            // if(canonical==\"acorn.tlos\")console.log(\"volume:\", volume.str);\n\n            this._markets[canonical].summary.price = last_price;\n            this._markets[canonical].summary.inverse = last_inverse;\n            this._markets[canonical].summary.price_24h_ago = price_fst || last_price;\n            this._markets[canonical].summary.inverse_24h_ago = inverse_fst;\n            this._markets[canonical].summary.percent_str = (isNaN(percent) ? 0 : percent) + \"%\";\n            this._markets[canonical].summary.percent = isNaN(percent) ? 0 : percent;\n            this._markets[canonical].summary.ipercent_str = (isNaN(ipercent) ? 0 : ipercent) + \"%\";\n            this._markets[canonical].summary.ipercent = isNaN(ipercent) ? 0 : ipercent;\n            this._markets[canonical].summary.volume = volume;\n            this._markets[canonical].summary.amount = amount;\n            this._markets[canonical].summary.min_price = min_price;\n            this._markets[canonical].summary.max_price = max_price;\n            this._markets[canonical].summary.min_inverse = min_inverse;\n            this._markets[canonical].summary.max_inverse = max_inverse;\n\n            // if(canonical==\"acorn.tlos\")console.log(\"Summary final:\", this._markets[canonical].summary);\n            // if(canonical==\"acorn.tlos\")console.log(\"---------------------------------------------------\");\n            this.feed.setLoading(\"summary.\"+canonical, false);\n            this.feed.setLoading(\"summary.\"+inverse, false);\n            return this._markets[canonical].summary;\n        });\n\n        if (this._markets[canonical] && !force) {\n            result = this._markets[canonical].summary;\n        } else {\n            result = await aux;\n        }\n\n        this.setMarketSummary();\n        this.onMarketSummary.next(result);\n\n        return result;\n    }\n\n    async getAllTablesSumaries(): Promise<any> {\n        return this.waitOrderSummary.then(async _ => {\n            var promises = [];\n\n            for (var i in this._markets) {\n                if (i.indexOf(\".\") == -1) continue;\n                var p = this.getTableSummary(this._markets[i].comodity, this._markets[i].currency, true);\n                promises.push(p);\n            }\n\n            return Promise.all(promises).then(_ => {\n                this.updateTokensSummary();\n            });\n        })\n    }\n    \n\n    //\n    // --------------------------------------------------------------\n    // Aux functions\n    private auxProcessRowsToOrders(rows:any[]): Order[] {\n        var result: Order[] = [];\n        for (var i=0; i < rows.length; i++) {\n            var price = new AssetDEX(rows[i].price, this);\n            var inverse = new AssetDEX(rows[i].inverse, this);\n            var selling = new AssetDEX(rows[i].selling, this);\n            var total = new AssetDEX(rows[i].total, this);\n            var order:Order;\n\n            var scope = this.getScopeFor(price.token, inverse.token);\n            var canonical = this.canonicalScope(scope);\n            var reverse_scope = this.inverseScope(canonical);\n            \n\n            if (reverse_scope == scope) {\n                order = {\n                    id: rows[i].id,\n                    price: price,\n                    inverse: inverse,\n                    total: selling,\n                    deposit: selling,\n                    telos: total,\n                    owner: rows[i].owner\n                }\n            } else {\n                order = {\n                    id: rows[i].id,\n                    price: inverse,\n                    inverse: price,\n                    total: total,\n                    deposit: selling,\n                    telos: selling,\n                    owner: rows[i].owner\n                }\n            }\n            result.push(order);\n        }\n        return result;\n    }\n\n    private auxGetLabelForHour(hh:number): string {\n        var hours = [\n            \"h.zero\",\n            \"h.one\",\n            \"h.two\",\n            \"h.three\",\n            \"h.four\",\n            \"h.five\",\n            \"h.six\",\n            \"h.seven\",\n            \"h.eight\",\n            \"h.nine\",\n            \"h.ten\",\n            \"h.eleven\",\n            \"h.twelve\",\n            \"h.thirteen\",\n            \"h.fourteen\",\n            \"h.fifteen\",\n            \"h.sixteen\",\n            \"h.seventeen\",\n            \"h.eighteen\",\n            \"h.nineteen\",\n            \"h.twenty\",\n            \"h.twentyone\",\n            \"h.twentytwo\",\n            \"h.twentythree\"\n        ]\n        return hours[hh];\n    }\n\n    private auxAssertScope(scope:string): Market {\n        var comodity_sym = scope.split(\".\")[0].toUpperCase();\n        var currency_sym = scope.split(\".\")[1].toUpperCase();\n        var comodity = this.getTokenNow(comodity_sym);\n        var currency = this.getTokenNow(currency_sym);\n        var aux_asset_com = new AssetDEX(0, comodity);\n        var aux_asset_cur = new AssetDEX(0, currency);\n\n        var market_summary:MarketSummary = {\n            scope: scope,\n            price: aux_asset_cur,\n            price_24h_ago: aux_asset_cur,\n            inverse: aux_asset_com,\n            inverse_24h_ago: aux_asset_com,\n            max_inverse: aux_asset_com,\n            max_price: aux_asset_cur,\n            min_inverse: aux_asset_com,\n            min_price: aux_asset_cur,\n            records: [],\n            volume: aux_asset_cur,\n            amount: aux_asset_com,\n            percent: 0,\n            ipercent: 0,\n            percent_str: \"0%\",\n            ipercent_str: \"0%\",\n        }\n\n        return this._markets[scope] || {\n            scope: scope,\n            comodity: comodity,\n            currency: currency,\n            orders: { sell: [], buy: [] },\n            deals: 0,\n            history: [],\n            tx: {},\n            blocks: 0,\n            block: {},\n            blocklist: [],\n            blocklevels: [[]],\n            reverseblocks: [],\n            reverselevels: [[]],\n            summary: market_summary,\n            header: { \n                sell: {total:aux_asset_com, orders:0}, \n                buy: {total:aux_asset_cur, orders:0}\n            },\n        };        \n    }\n\n    private fetchDeposits(account): Promise<TableResult> {\n        return this.contract.getTable(\"deposits\", {scope:account}).then(result => {\n            return result;\n        });\n    }\n\n    private async fetchBalances(account): Promise<any> {\n        return this.waitTokensLoaded.then(async _ => {\n            var contracts = {};\n            var balances = [];\n            for (var i in this.tokens) {\n                if (this.tokens[i].offchain) continue;\n                contracts[this.tokens[i].contract] = true;\n            }\n            for (var contract in contracts) {\n                this.feed.setLoading(\"balances-\"+contract, true);\n            }            \n            for (var contract in contracts) {\n                var result = await this.contract.getTable(\"accounts\", {\n                    contract:contract,\n                    scope: account || this.current.name\n                });\n                for (var i in result.rows) {\n                    balances.push(new AssetDEX(result.rows[i].balance, this));\n                }\n                this.feed.setLoading(\"balances-\"+contract, false);\n            }\n            return balances;\n        });\n    }\n\n    private fetchOrders(params:TableParams): Promise<TableResult> {\n        return this.contract.getTable(\"sellorders\", params).then(result => {\n            return result;\n        });\n    }\n\n    private fetchOrderSummary(): Promise<TableResult> {\n        return this.contract.getTable(\"ordersummary\").then(result => {\n            return result;\n        });\n    }\n\n    private fetchBlockHistory(scope:string, page:number = 0, pagesize:number = 25): Promise<TableResult> {\n        var canonical:string = this.canonicalScope(scope);\n        var pages = this.getBlockHistoryTotalPagesFor(canonical, pagesize);\n        var id = page*pagesize;\n        // console.log(\"VapaeeDEX.fetchBlockHistory(\", scope, \",\",page,\",\",pagesize,\"): id:\", id, \"pages:\", pages);\n        if (page < pages) {\n            if (this._markets && this._markets[canonical] && this._markets[canonical].block[\"id-\" + id]) {\n                var result:TableResult = {more:false,rows:[]};\n                for (var i=0; i<pagesize; i++) {\n                    var id_i = id+i;\n                    var block = this._markets[canonical].block[\"id-\" + id_i];\n                    if (block) {\n                        result.rows.push(block);\n                    } else {\n                        break;\n                    }\n                }\n                if (result.rows.length == pagesize) {\n                    // we have the complete page in memory\n                    // console.log(\"VapaeeDEX.fetchHistory(\", scope, \",\",page,\",\",pagesize,\"): result:\", result.rows.map(({ id }) => id));\n                    return Promise.resolve(result);\n                }                \n            }\n        }\n\n        return this.contract.getTable(\"blockhistory\", {scope:canonical, limit:pagesize, lower_bound:\"\"+(page*pagesize)}).then(result => {\n            // console.log(\"**************\");\n            // console.log(\"block History crudo:\", result);\n            this._markets[canonical] = this.auxAssertScope(canonical);\n            this._markets[canonical].block = this._markets[canonical].block || {}; \n            // console.log(\"this._markets[scope].block:\", this._markets[scope].block);\n            for (var i=0; i < result.rows.length; i++) {\n                var block:HistoryBlock = {\n                    id: result.rows[i].id,\n                    hour: result.rows[i].hour,\n                    str: \"\",\n                    price: new AssetDEX(result.rows[i].price, this),\n                    inverse: new AssetDEX(result.rows[i].inverse, this),\n                    entrance: new AssetDEX(result.rows[i].entrance, this),\n                    max: new AssetDEX(result.rows[i].max, this),\n                    min: new AssetDEX(result.rows[i].min, this),\n                    volume: new AssetDEX(result.rows[i].volume, this),\n                    amount: new AssetDEX(result.rows[i].amount, this),\n                    date: new Date(result.rows[i].date)\n                }\n                block.str = JSON.stringify([block.max.str, block.entrance.str, block.price.str, block.min.str]);\n                this._markets[canonical].block[\"id-\" + block.id] = block;\n            }   \n            // console.log(\"block History final:\", this._markets[scope].block);\n            // console.log(\"-------------\");\n            return result;\n        });\n    }    \n\n    private fetchHistory(scope:string, page:number = 0, pagesize:number = 25): Promise<TableResult> {\n        var canonical:string = this.canonicalScope(scope);\n        var pages = this.getHistoryTotalPagesFor(canonical, pagesize);\n        var id = page*pagesize;\n        // console.log(\"VapaeeDEX.fetchHistory(\", scope, \",\",page,\",\",pagesize,\"): id:\", id, \"pages:\", pages);\n        if (page < pages) {\n            if (this._markets && this._markets[canonical] && this._markets[canonical].tx[\"id-\" + id]) {\n                var result:TableResult = {more:false,rows:[]};\n                for (var i=0; i<pagesize; i++) {\n                    var id_i = id+i;\n                    var trx = this._markets[canonical].tx[\"id-\" + id_i];\n                    if (trx) {\n                        result.rows.push(trx);\n                    } else {\n                        break;\n                    }\n                }\n                if (result.rows.length == pagesize) {\n                    // we have the complete page in memory\n                    // console.log(\"VapaeeDEX.fetchHistory(\", scope, \",\",page,\",\",pagesize,\"): result:\", result.rows.map(({ id }) => id));\n                    return Promise.resolve(result);\n                }                \n            }\n        }\n\n        return this.contract.getTable(\"history\", {scope:scope, limit:pagesize, lower_bound:\"\"+(page*pagesize)}).then(result => {\n\n            // console.log(\"**************\");\n            // console.log(\"History crudo:\", result);\n            \n            this._markets[canonical] = this.auxAssertScope(canonical);\n            this._markets[canonical].history = [];\n            this._markets[canonical].tx = this._markets[canonical].tx || {}; \n\n            // console.log(\"this.scopes[scope].tx:\", this.scopes[scope].tx);\n\n            for (var i=0; i < result.rows.length; i++) {\n                var transaction:HistoryTx = {\n                    id: result.rows[i].id,\n                    str: \"\",\n                    amount: new AssetDEX(result.rows[i].amount, this),\n                    payment: new AssetDEX(result.rows[i].payment, this),\n                    buyfee: new AssetDEX(result.rows[i].buyfee, this),\n                    sellfee: new AssetDEX(result.rows[i].sellfee, this),\n                    price: new AssetDEX(result.rows[i].price, this),\n                    inverse: new AssetDEX(result.rows[i].inverse, this),\n                    buyer: result.rows[i].buyer,\n                    seller: result.rows[i].seller,\n                    date: new Date(result.rows[i].date),\n                    isbuy: !!result.rows[i].isbuy\n                }\n                transaction.str = transaction.price.str + \" \" + transaction.amount.str;\n                this._markets[canonical].tx[\"id-\" + transaction.id] = transaction;\n            }\n\n            for (var j in this._markets[canonical].tx) {\n                this._markets[canonical].history.push(this._markets[canonical].tx[j]);\n            }\n\n            this._markets[canonical].history.sort(function(a:HistoryTx, b:HistoryTx){\n                if(a.date < b.date) return 1;\n                if(a.date > b.date) return -1;\n                if(a.id < b.id) return 1;\n                if(a.id > b.id) return -1;\n            });            \n\n            // console.log(\"History final:\", this.scopes[scope].history);\n            // console.log(\"-------------\");\n            return result;\n        });\n    }\n    \n    private async fetchActivity(page:number = 0, pagesize:number = 25) {\n        var id = page*pagesize+1;\n        // console.log(\"VapaeeDEX.fetchActivity(\", page,\",\",pagesize,\"): id:\", id);\n        \n        if (this.activity.events[\"id-\" + id]) {\n            var pageEvents = [];\n            for (var i=0; i<pagesize; i++) {\n                var id_i = id+i;\n                var event = this.activity.events[\"id-\" + id_i];\n                if (!event) {\n                    break;\n                }\n            }\n            if (pageEvents.length == pagesize) {\n                return;\n            }                \n        }        \n\n        return this.contract.getTable(\"events\", {limit:pagesize, lower_bound:\"\"+id}).then(result => {\n            // console.log(\"**************\");\n            // console.log(\"Activity crudo:\", result);\n            var list:EventLog[] = [];\n\n            for (var i=0; i < result.rows.length; i++) {\n                var id = result.rows[i].id;\n                var event:EventLog = <EventLog>result.rows[i];\n                if (!this.activity.events[\"id-\" + id]) {\n                    this.activity.events[\"id-\" + id] = event;\n                    list.push(event);\n                    // console.log(\"**************>>>>>\", id);\n                }\n            }\n\n            this.activity.list = [].concat(this.activity.list).concat(list);\n            this.activity.list.sort(function(a:EventLog, b:EventLog){\n                if(a.date < b.date) return 1;\n                if(a.date > b.date) return -1;\n                if(a.id < b.id) return 1;\n                if(a.id > b.id) return -1;\n            });\n\n        });\n\n    }\n\n    private fetchUserOrders(user:string): Promise<TableResult> {\n        return this.contract.getTable(\"userorders\", {scope:user, limit:200}).then(result => {\n            return result;\n        });\n    }\n    \n    private fetchSummary(scope): Promise<TableResult> {\n        return this.contract.getTable(\"tablesummary\", {scope:scope}).then(result => {\n            return result;\n        });\n    }\n\n    private fetchTokenStats(token): Promise<TableResult> {\n        this.feed.setLoading(\"token-stat-\"+token.symbol, true);\n        return this.contract.getTable(\"stat\", {contract:token.contract, scope:token.symbol}).then(result => {\n            token.stat = result.rows[0];\n            if (token.stat.issuers && token.stat.issuers[0] == \"everyone\") {\n                token.fake = true;\n            }\n            this.feed.setLoading(\"token-stat-\"+token.symbol, false);\n            return token;\n        });\n    }\n\n    private fetchTokensStats(extended: boolean = true) {\n        console.log(\"Vapaee.fetchTokens()\");\n        this.feed.setLoading(\"token-stats\", true);\n        return this.waitTokensLoaded.then(_ => {\n\n            var priomises = [];\n            for (var i in this.tokens) {\n                if (this.tokens[i].offchain) continue;\n                priomises.push(this.fetchTokenStats(this.tokens[i]));\n            }\n\n            return Promise.all<any>(priomises).then(result => {\n                this.setTokenStats(this.tokens);\n                this.feed.setLoading(\"token-stats\", false);\n                return this.tokens;\n            });            \n        });\n\n    }\n    \n    private updateTokensSummary(times: number = 20) {\n        if (times > 1) {\n            for (var i = times; i>0; i--) this.updateTokensSummary(1);\n            return;\n        } \n        return Promise.all([\n            this.waitTokensLoaded,\n            this.waitMarketSummary\n        ]).then(_ => {\n            // console.log(\"(ini) ---------------------------------------------\");\n            // console.log(\"Vapaee.updateTokensSummary()\"); \n\n            // mapping of how much (amount of) tokens have been traded agregated in all markets\n            var amount_map:{[key:string]:AssetDEX} = {};\n\n            // a cada token le asigno un price que sale de verificar su price en el mercado principal XXX/TLOS\n            for (var i in this.tokens) {\n                if (this.tokens[i].offchain) continue; // discard tokens that are not on-chain\n                \n                var token = this.tokens[i];\n                var quantity:AssetDEX = new AssetDEX(0, token);\n\n                for (var j in this._markets) {\n                    if (j.indexOf(\".\") == -1) continue;\n                    var table:Market = this._markets[j];\n                    \n                    if (table.comodity.symbol == token.symbol) {\n                        quantity = quantity.plus(table.summary.amount);\n                    }\n                    if (table.currency.symbol == token.symbol) {\n                        quantity = quantity.plus(table.summary.volume);\n                    }\n\n                    if (table.comodity.symbol == token.symbol && table.currency.symbol == this.telos.symbol) {\n                        if (token.summary && token.summary.price.amount.toNumber() == 0) {\n                            delete token.summary;\n                        }\n                        \n                        token.summary = token.summary || {\n                            price: table.summary.price.clone(),\n                            price_24h_ago: table.summary.price_24h_ago.clone(),\n                            volume: table.summary.volume.clone(),\n                            percent: table.summary.percent,\n                            percent_str: table.summary.percent_str,\n                        }\n                    }\n                }\n\n                amount_map[token.symbol] = quantity;\n            }\n\n            this.telos.summary = {\n                price: new AssetDEX(1, this.telos),\n                price_24h_ago: new AssetDEX(1, this.telos),\n                volume: new AssetDEX(-1, this.telos),\n                percent: 0,\n                percent_str: \"0%\"\n            }\n\n            // console.log(\"amount_map: \", amount_map);\n\n\n            \n            var ONE = new BigNumber(1);\n\n            for (var i in this.tokens) {\n                var token = this.tokens[i];\n                if (token.offchain) continue;\n                if (!token.summary) continue;\n                if (token.symbol == this.telos.symbol) continue;\n                // console.log(\"TOKEN: -------- \", token.symbol, token.summary.price.str, token.summary.price_24h_ago.str );\n                \n                var volume = new AssetDEX(0, this.telos);\n                var price = new AssetDEX(0, this.telos);\n                var price_init = new AssetDEX(0, this.telos);\n                var total_quantity = amount_map[token.symbol];\n\n                if (total_quantity.toNumber() == 0) continue;\n\n                // if (token.symbol == \"ACORN\") console.log(\"TOKEN: -------- \", token.symbol, token.summary.price.str, token.summary.price_24h_ago.str );\n                for (var j in this._markets) {\n                    if (j.indexOf(\".\") == -1) continue;\n                    var table = this._markets[j];\n                    var currency_price = table.currency.symbol == \"TLOS\" ? ONE : table.currency.summary.price.amount;\n                    var currency_price_24h_ago = table.currency.symbol == \"TLOS\" ? ONE : table.currency.summary.price_24h_ago.amount;\n                    if (table.comodity.symbol == token.symbol || table.currency.symbol == token.symbol) {\n\n                        // how much quantity is involved in this market\n                        var quantity = new AssetDEX();\n                        if (table.comodity.symbol == token.symbol) {\n                            quantity = table.summary.amount.clone();\n                        } else if (table.currency.symbol == token.symbol) {\n                            quantity = table.summary.volume.clone();\n                        }\n\n                        // calculate the influence-weight of this market over the token\n                        var weight = quantity.amount.dividedBy(total_quantity.amount);\n\n                        // calculate the price of this token in this market (expressed in TLOS)\n                        var price_amount;\n                        if (table.comodity.symbol == token.symbol) {\n                            price_amount = table.summary.price.amount.multipliedBy(table.currency.summary.price.amount);\n                        } else if (table.currency.symbol == token.symbol) {\n                            price_amount = table.summary.inverse.amount.multipliedBy(table.comodity.summary.price.amount);\n                        }\n\n                        // calculate this market token price multiplied by the wight of this market (ponderated price)\n                        var price_i = new AssetDEX(price_amount.multipliedBy(weight), this.telos);\n\n                        // calculate the price of this token in this market 24h ago (expressed in TLOS)\n                        var price_init_amount;\n                        if (table.comodity.symbol == token.symbol) {\n                            price_init_amount = table.summary.price_24h_ago.amount.multipliedBy(table.currency.summary.price_24h_ago.amount);\n                        } else if (table.currency.symbol == token.symbol) {\n                            price_init_amount = table.summary.inverse_24h_ago.amount.multipliedBy(table.comodity.summary.price_24h_ago.amount);\n                        }\n\n                        // calculate this market token price 24h ago multiplied by the weight of this market (ponderated init_price)\n                        var price_init_i = new AssetDEX(price_init_amount.multipliedBy(weight), this.telos);\n\n                        // how much volume is involved in this market\n                        var volume_i;\n                        if (table.comodity.symbol == token.symbol) {\n                            volume_i = table.summary.volume.clone();\n                        } else if (table.currency.symbol == token.symbol) {\n                            volume_i = table.summary.amount.clone();\n                        }\n\n                        // if this market does not mesure the volume in TLOS, then convert quantity to TLOS by multiplied By volume's token price\n                        if (volume_i.token.symbol != this.telos.symbol) {\n                            volume_i = new AssetDEX(quantity.amount.multipliedBy(quantity.token.summary.price.amount), this.telos);\n                        }\n                        \n\n                        price = price.plus(new AssetDEX(price_i, this.telos));\n                        price_init = price_init.plus(new AssetDEX(price_init_i, this.telos));\n                        volume = volume.plus(new AssetDEX(volume_i, this.telos));\n\n                        // console.log(\"-i\",i, table);\n                        // console.log(\"- weight:\", weight.toNumber());\n                        // console.log(\"- table.summary.price.str\", table.summary.price.str);\n                        // console.log(\"- table.summary.price.amount.multipliedBy(weight).toNumber()\", table.summary.price.amount.multipliedBy(weight).toNumber());\n                        // console.log(\"- currency_price.toNumber()\", currency_price.toNumber());\n                        // console.log(\"- price_i:\", price_i.toNumber());\n                        // console.log(\"- price ->\", price.str);\n                        // console.log(\"- currency_price_24h_ago:\", currency_price_24h_ago.toNumber());\n                        // console.log(\"- table.summary.price_24h_ago:\", table.summary.price_24h_ago.str);\n                        // console.log(\"- price_init_i:\", price_init_i.toNumber());\n                        // console.log(\"- price_init ->\", price_init.str);\n                        \n\n                    }\n                }\n\n                var diff = price.minus(price_init);\n                var ratio:number = 0;\n                if (price_init.amount.toNumber() != 0) {\n                    ratio = diff.amount.dividedBy(price_init.amount).toNumber();\n                }\n                var percent = Math.floor(ratio * 10000) / 100;\n                var percent_str = (isNaN(percent) ? 0 : percent) + \"%\";\n\n                // console.log(\"price\", price.str);\n                // console.log(\"price_24h_ago\", price_init.str);\n                // console.log(\"volume\", volume.str);\n                // console.log(\"percent\", percent);\n                // console.log(\"percent_str\", percent_str);\n                // console.log(\"ratio\", ratio);\n                // console.log(\"diff\", diff.str);\n\n                token.summary.price = price;\n                token.summary.price_24h_ago = price_init;\n                token.summary.percent = percent;\n                token.summary.percent_str = percent_str;\n                token.summary.volume = volume;\n\n            }\n            \n            // console.log(\"(end) ---------------------------------------------\");\n            this.resortTokens();\n            this.setTokenSummary();\n        });        \n    }\n\n    private fetchTokens(extended: boolean = true) {\n        console.log(\"Vapaee.fetchTokens()\");\n\n        return this.contract.getTable(\"tokens\").then(result => {\n            var data = {\n                tokens: <TokenDEX[]>result.rows\n            }\n\n            for (var i in data.tokens) {\n                data.tokens[i].scope = data.tokens[i].symbol.toLowerCase() + \".tlos\";\n                if (data.tokens[i].symbol == \"TLOS\") {\n                    this.telos = data.tokens[i];\n                }\n            }\n\n            return data;\n        });\n    }\n\n    private resortTokens() {\n        // console.log(\"(ini) ------------------------------------------------------------\");\n        // console.log(\"resortTokens()\");\n        // console.log(\"this.tokens[0]\", this.tokens[0].summary);\n        this.tokens.sort((a:TokenDEX, b:TokenDEX) => {\n            // push offchain tokens to the end of the token list\n            if (a.offchain) return 1;\n            if (b.offchain) return -1;\n\n            // console.log(\" --- \", a.symbol, \"-\", b.symbol, \" --- \");\n            // console.log(\"     \", a.summary ? a.summary.volume.str : \"0\", \"-\", b.summary ? b.summary.volume.str : \"0\");\n            \n            var a_vol = a.summary ? a.summary.volume : new AssetDEX();\n            var b_vol = b.summary ? b.summary.volume : new AssetDEX();\n\n            if(a_vol.amount.isGreaterThan(b_vol.amount)) return -1;\n            if(a_vol.amount.isLessThan(b_vol.amount)) return 1;\n\n            if(a.appname < b.appname) return -1;\n            if(a.appname > b.appname) return 1;\n            return 0;\n        }); \n\n        // console.log(\"resortTokens()\", this.tokens);\n        // console.log(\"(end) ------------------------------------------------------------\");\n\n        this.onTokensReady.next(this.tokens);        \n    }\n\n\n}\n\n\nexport interface MarketMap {\n    [key:string]: Market;\n}\n\nexport interface Market {\n    scope: string;\n    comodity: TokenDEX,\n    currency: TokenDEX,\n    deals: number;\n    blocks: number;\n    blocklevels: any[][][];\n    blocklist: any[][];\n    reverselevels: any[][][];\n    reverseblocks: any[][];\n    block: {[id:string]:HistoryBlock};\n    orders: TokenOrders;\n    history: HistoryTx[];\n    tx: {[id:string]:HistoryTx};\n    \n    summary: MarketSummary;\n    header: MarketHeader;\n}\n\nexport interface MarketSummary {\n    scope:string,\n    price:AssetDEX,\n    inverse:AssetDEX,\n    price_24h_ago:AssetDEX,\n    inverse_24h_ago:AssetDEX,\n    min_price?:AssetDEX,\n    max_price?:AssetDEX,\n    min_inverse?:AssetDEX,\n    max_inverse?:AssetDEX,\n    volume:AssetDEX,\n    amount?:AssetDEX,\n    percent?:number,\n    percent_str?:string,\n    ipercent?:number,\n    ipercent_str?:string,\n    records?: any[]\n}\n\nexport interface MarketHeader {\n    sell:OrdersSummary,\n    buy:OrdersSummary\n}\n\nexport interface OrdersSummary {\n    total: AssetDEX;\n    orders: number;    \n}\n\nexport interface TokenOrders {\n    sell:OrderRow[],\n    buy:OrderRow[]\n}\n\nexport interface HistoryTx {\n    id: number;\n    str: string;\n    price: AssetDEX;\n    inverse: AssetDEX;\n    amount: AssetDEX;\n    payment: AssetDEX;\n    buyfee: AssetDEX;\n    sellfee: AssetDEX;\n    buyer: string;\n    seller: string;\n    date: Date;\n    isbuy: boolean;\n}\n\nexport interface EventLog {\n    id: number;\n    user: string;\n    event: string;\n    params: string;\n    date: Date;\n    processed?: any;\n}\n\nexport interface HistoryBlock {\n    id: number;\n    hour: number;\n    str: string;\n    price: AssetDEX;\n    inverse: AssetDEX;\n    entrance: AssetDEX;\n    max: AssetDEX;\n    min: AssetDEX;\n    volume: AssetDEX;\n    amount: AssetDEX;\n    date: Date;\n}\n\nexport interface Order {\n    id: number;\n    price: AssetDEX;\n    inverse: AssetDEX;\n    total: AssetDEX;\n    deposit: AssetDEX;\n    telos: AssetDEX;\n    owner: string;\n}\n\nexport interface UserOrdersMap {\n    [key:string]: UserOrders;\n}\n\nexport interface UserOrders {\n    table: string;\n    ids: number[];\n    orders?:any[];\n}\n\nexport interface OrderRow {\n    str: string;\n    price: AssetDEX;\n    orders: Order[];\n    inverse: AssetDEX;\n    total: AssetDEX;\n    sum: AssetDEX;\n    sumtelos: AssetDEX;\n    telos: AssetDEX;\n    owners: {[key:string]:boolean}\n}","import { NgModule } from '@angular/core';\nimport { VapaeeDEX } from './dex.service'\n\n@NgModule({\n  imports: [\n  ],\n  declarations: [],\n  providers: [VapaeeDEX],\n  exports: []\n})\nexport class VapaeeDexModule { }\n"],"names":["tslib_1.__extends"],"mappings":"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"}
